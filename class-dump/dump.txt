/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

@protocol ABActiveTextRange <NSObject, NSCopying>
- (id)displayString;
- (int)rangeFlavor;
- (struct _NSRange)rangeValue;
@end

@protocol ABAutocompleteResultItem <NSObject>
- (id)searchableSortableText;
- (long)priority;
- (void)setPriority:(long)arg1;
- (int)autocompleteType;
- (void)setAutocompleteType:(int)arg1;
- (long)autocompleteAction;
- (void)setAutocompleteAction:(long)arg1;
- (id)itemID;
- (void)setItemID:(id)arg1;
- (id)userInfo;
- (void)setUserInfo:(id)arg1;
- (id)autocompleteImageURL;
- (void)setAutocompleteImageURL:(id)arg1;
- (id)autocompleteImageName;
- (void)setAutocompleteImageName:(id)arg1;
- (id)autocompleteSubtext;
- (void)setAutocompleteSubtext:(id)arg1;
- (id)autocompleteText;
- (void)setAutocompleteText:(id)arg1;
@end

@protocol ABRowViewDelegate <NSObject>
@end

@protocol ABUINavigationBarDelegate <NSObject>
- (void)navigationBar:(id)arg1 shouldPopItem:(id)arg2;
@end

@protocol ABUIScrollViewDelegate <NSObject>
@end

@protocol ABUITableViewDataSource <NSObject>
- (long)tableView:(id)arg1 numberOfRowsInSection:(long)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
@end

@protocol ABUITableViewDelegate <NSObject, ABUIScrollViewDelegate>
@end

@protocol ABUITextRendererDelegate <NSObject>
- (id)activeRangesForTextRenderer:(id)arg1;
@end

@protocol ABUITextViewDelegate <NSObject>
@end

@protocol ABUIViewDelegate <NSObject>
@end

@protocol CAAction
- (void)runActionForKey:(id)arg1 object:(id)arg2 arguments:(id)arg3;
@end

@protocol GrowlApplicationBridgeDelegate
@end

@protocol NSCoding
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSFastEnumeration
- (unsigned long)countByEnumeratingWithState:(CDStruct_11f37819 *)arg1 objects:(id *)arg2 count:(unsigned long)arg3;
@end

@protocol NSMenuDelegate <NSObject>
@end

@protocol NSObject
- (BOOL)isEqual:(id)arg1;
- (unsigned long)hash;
- (Class)superclass;
- (Class)class;
- (id)self;
- (struct _NSZone *)zone;
- (id)performSelector:(SEL)arg1;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (BOOL)isProxy;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)conformsToProtocol:(id)arg1;
- (BOOL)respondsToSelector:(SEL)arg1;
- (id)retain;
- (oneway void)release;
- (id)autorelease;
- (unsigned long)retainCount;
- (id)description;
@end

@protocol NSOutlineViewDataSource <NSObject>
@end

@protocol NSPasteboardWriting <NSObject>
- (id)writableTypesForPasteboard:(id)arg1;
- (id)pasteboardPropertyListForType:(id)arg1;
@end

@protocol NSTextDelegate <NSObject>
@end

@protocol NSTextInputClient
- (void)insertText:(id)arg1 replacementRange:(struct _NSRange)arg2;
- (void)doCommandBySelector:(SEL)arg1;
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2 replacementRange:(struct _NSRange)arg3;
- (void)unmarkText;
- (struct _NSRange)selectedRange;
- (struct _NSRange)markedRange;
- (BOOL)hasMarkedText;
- (id)attributedSubstringForProposedRange:(struct _NSRange)arg1 actualRange:(struct _NSRange *)arg2;
- (id)validAttributesForMarkedText;
- (struct CGRect)firstRectForCharacterRange:(struct _NSRange)arg1 actualRange:(struct _NSRange *)arg2;
- (unsigned long)characterIndexForPoint:(struct CGPoint)arg1;
@end

@protocol NSTextStorageDelegate <NSObject>
@end

@protocol NSTextViewDelegate <NSTextDelegate>
@end

@protocol NSWindowDelegate <NSObject>
@end

@protocol TMAutoCompleteTableView
- (void)autoCompleteTableView:(id)arg1 didSelectAutoCompleteItem:(id)arg2;
@end

@protocol TMSidebarViewDelegate <NSObject>
- (id)sidebarView:(id)arg1 imageForSection:(int)arg2;
- (id)sidebarView:(id)arg1 imageForRow:(id)arg2;
- (id)sidebarView:(id)arg1 imageNameForRow:(id)arg2;
- (id)sidebarView:(id)arg1 titleForRow:(id)arg2;
- (id)sidebarView:(id)arg1 titleForSection:(long)arg2;
- (int)numberOfSectionsInSidebarView:(id)arg1;
- (int)sideBarView:(id)arg1 numberOfItemsInSection:(int)arg2;
- (int)sideBarView:(id)arg1 badgeForSection:(long)arg2;
- (int)sideBarView:(id)arg1 badgeForRow:(id)arg2;
- (id)selectedRowInSidebarView:(id)arg1;
- (void)sidebarView:(id)arg1 didSelectSection:(int)arg2;
- (void)sidebarView:(id)arg1 didSelectRow:(id)arg2;
- (void)sidebarView:(id)arg1 doubleClickedRow:(id)arg2;
- (void)sidebarView:(id)arg1 doubleClickedSection:(long)arg2;
@end

@protocol TMTextViewAutoCompleteDelegate
- (void)textViewDidConfirmAutoComplete:(id)arg1;
- (void)textViewDidHighlightNextAutoComplete:(id)arg1;
- (void)textViewDidHighlightPreviousAutoComplete:(id)arg1;
- (void)textViewDidCancelAutoComplete:(id)arg1;
@end

@protocol TMUserFollowActionViewDelegate <NSObject>
- (void)toggleFollow;
- (BOOL)theyFollowMe;
- (BOOL)iFollowThem;
- (BOOL)didLoadFollowStatus;
- (id)user;
@end

@protocol TwitterAccountDelegate
- (void)account:(id)arg1 didFailToPost:(id)arg2 errorMessage:(id)arg3 error:(id)arg4;
@end

@interface Tweetie2AppDelegate : NSObject <GrowlApplicationBridgeDelegate>
{
    Tweetie2Window *window;	// 4 = 0x4
    TMRootViewController *rootViewController;	// 8 = 0x8
    TMStatusBarItemController *statusBarItemController;	// 12 = 0xc
    NSDocumentController *documentController;	// 16 = 0x10
    NSStatusItem *statusItem;	// 20 = 0x14
    int statusLightState;	// 24 = 0x18
    BOOL applicationHasStarted;	// 28 = 0x1c
    int statusItemBehavior;	// 32 = 0x20
    NSMenu *mainMenu;	// 36 = 0x24
    NSMenuItem *developMenu;	// 40 = 0x28
    NSMenuItem *checkForUpdate;	// 44 = 0x2c
    NSMenu *sidebarMenu;	// 48 = 0x30
    NSPanel *gotoUserPanel;	// 52 = 0x34
    NSComboBox *gotoUserField;	// 56 = 0x38
    NSButton *gotoUserButton;	// 60 = 0x3c
    NSPanel *macheistPanel;	// 64 = 0x40
    NSTextField *macheistEmailField;	// 68 = 0x44
    NSTextField *macheistLicenseField;	// 72 = 0x48
    NSPanel *macheistWebPanel;	// 76 = 0x4c
    WebView *macheistWebView;	// 80 = 0x50
    NSWindow *consoleWindow;	// 84 = 0x54
    TMConsoleController *consoleController;	// 88 = 0x58
}

- (void)dealloc;	// IMP=0x00004992
- (void)registerForProtocolHandler;	// IMP=0x000033c4
- (void)_makeStatusItem;	// IMP=0x00003419
- (void)_killStatusItem;	// IMP=0x000034ea
- (void)setStatusLight:(int)arg1;	// IMP=0x00003516
- (int)statusLight;	// IMP=0x00003351
- (void)updateMenuItemBehavior:(id)arg1;	// IMP=0x000035b6
- (void)_startupUI;	// IMP=0x00003740
- (void)_normalStart;	// IMP=0x0000564c
- (void)updateDevelopMenu:(id)arg1;	// IMP=0x00003763
- (void)updateIconStatus:(id)arg1;	// IMP=0x000038bc
- (void)userStreamDidClose:(id)arg1;	// IMP=0x0000561d
- (void)checkForUpdate:(id)arg1;	// IMP=0x0000335c
- (id)dateFromBuildString:(id)arg1;	// IMP=0x00003a46
- (id)buildString;	// IMP=0x00003b2c
- (void)backgroundUpdate:(id)arg1;	// IMP=0x00003361
- (void)registerCurrentVersion;	// IMP=0x00003366
- (void)employeeStartupCheck;	// IMP=0x0000336b
- (void)applicationWillFinishLaunching:(id)arg1;	// IMP=0x00003b7a
- (void)applicationDidFinishLaunching:(id)arg1;	// IMP=0x00003b99
- (id)applicationDockMenu:(id)arg1;	// IMP=0x00003370
- (void)screenDidChange:(id)arg1;	// IMP=0x00005182
- (void)showTweetie;	// IMP=0x00003d57
- (void)showHideTweetie;	// IMP=0x00003da3
- (void)statusItemAction:(id)arg1;	// IMP=0x00003df6
- (void)preferences:(id)arg1;	// IMP=0x00003e30
- (void)saveState;	// IMP=0x00003e52
- (void)rerunFirstLaunch;	// IMP=0x00003ef2
- (void)applicationWillTerminate:(id)arg1;	// IMP=0x0000512e
- (id)mainWindow;	// IMP=0x0000337b
- (id)selectedAccount;	// IMP=0x00003f65
- (BOOL)applicationShouldOpenUntitledFile:(id)arg1;	// IMP=0x00003386
- (void)showHideHotkey;	// IMP=0x00003f88
- (void)newTweetHotkey;	// IMP=0x00003fa7
- (BOOL)validateMenuItem:(id)arg1;	// IMP=0x00004ed3
- (void)resetUserStreams:(id)arg1;	// IMP=0x00004d91
- (void)newDirectMessage:(id)arg1;	// IMP=0x00004d7a
- (void)developerConsole:(id)arg1;	// IMP=0x00004003
- (id)showConsole;	// IMP=0x00004022
- (void)refresh:(id)arg1;	// IMP=0x00004c4a
- (void)beginGoToUserSheet:(id)arg1;	// IMP=0x00004087
- (void)gotoUserSheetDidEnd:(id)arg1 returnCode:(long)arg2 contextInfo:(void *)arg3;	// IMP=0x00004b9f
- (void)comboBoxWillDismiss:(id)arg1;	// IMP=0x00004145
- (void)controlTextDidChange:(id)arg1;	// IMP=0x0000419c
- (void)goToUserActivate:(id)arg1;	// IMP=0x000041f3
- (void)cancelGoToUser:(id)arg1;	// IMP=0x00004229
- (void)markAllAsRead:(id)arg1;	// IMP=0x0000425f
- (long)numberOfItemsInMenu:(id)arg1;	// IMP=0x00004293
- (void)toggleUserStream:(id)arg1;	// IMP=0x000042d9
- (BOOL)menu:(id)arg1 updateItem:(id)arg2 atIndex:(long)arg3 shouldCancel:(BOOL)arg4;	// IMP=0x00004356
- (void)appearancePreferencesDidChange:(id)arg1;	// IMP=0x0000447a
- (void)colorPreferencesDidChange:(id)arg1;	// IMP=0x00004b77
- (void)resetColorPreferences:(id)arg1;	// IMP=0x000044b7
- (void)fontPreferencesDidChange:(id)arg1;	// IMP=0x0000450f
- (BOOL)applicationShouldHandleReopen:(id)arg1 hasVisibleWindows:(BOOL)arg2;	// IMP=0x00004583
- (void)applicationWillResignActive:(id)arg1;	// IMP=0x000045b0
- (void)tweetService:(id)arg1 userData:(id)arg2 error:(id *)arg3;	// IMP=0x000049ee
- (void)usernameService:(id)arg1 userData:(id)arg2 error:(id *)arg3;	// IMP=0x00004611
- (void)emptyCache:(id)arg1;	// IMP=0x000047c3
- (void)showMainWindow:(id)arg1;	// IMP=0x00004967
- (id)sidebarMenu;	// IMP=0x00003398
- (id)statusBarItemController;	// IMP=0x000033a3
- (id)documentController;	// IMP=0x000033ae
- (id)rootViewController;	// IMP=0x000033b9

@end

@interface ABUIResponder : NSResponder
{
}

- (BOOL)becomeFirstResponder;	// IMP=0x00005cc5
- (BOOL)resignFirstResponder;	// IMP=0x00005ccf
- (BOOL)acceptsFirstMouse:(id)arg1;	// IMP=0x00005cd9
- (id)menuForEvent:(id)arg1;	// IMP=0x00005ce3
- (BOOL)performKeyAction:(id)arg1;	// IMP=0x00005cea
- (id)initialFirstResponder;	// IMP=0x00005cf1

@end

@interface ABUIView : ABUIResponder
{
    CALayer *_layer;	// 8 = 0x8
    int _tag;	// 12 = 0xc
    NSArray *_textRenderers;	// 16 = 0x10
    id _currentTextRenderer;	// 20 = 0x14
    struct CGPoint startDrag;	// 24 = 0x18
    id <ABUIViewDelegate> _viewDelegate;	// 32 = 0x20
    id drawRect;	// 36 = 0x24
    id layout;	// 40 = 0x28
    NSString *toolTip;	// 44 = 0x2c
    double toolTipDelay;	// 48 = 0x30
    ABUINSView *_nsView;	// 56 = 0x38
    struct {
        int lastWidth;
        int lastHeight;
        char lastOpaque;
        struct CGContext *context;
    } _context;	// 60 = 0x3c
    struct {
        unsigned int userInteractionDisabled:1;
        unsigned int moveWindowByDragging:1;
        unsigned int resizeWindowByDragging:1;
        unsigned int didStartMovingByDragging:1;
        unsigned int didStartResizeByDragging:1;
        unsigned int disableSubpixelTextRendering:1;
        unsigned int pasteboardDraggingEnabled:1;
        unsigned int pasteboardDraggingIsDragging:1;
        unsigned int dragDistanceLock:1;
        unsigned int delegateMouseEntered:1;
        unsigned int delegateMouseExited:1;
        unsigned int delegateWillDisplayLayer:1;
    } _viewFlags;	// 76 = 0x4c
}

+ (void)initialize;	// IMP=0x0000614b
+ (Class)layerClass;	// IMP=0x0000629a
- (void)dealloc;	// IMP=0x00007524
- (id)initWithFrame:(struct CGRect)arg1;	// IMP=0x00007d10
- (id)layer;	// IMP=0x00005efe
- (void)setLayer:(id)arg1;	// IMP=0x00005fb6
- (long)tag;	// IMP=0x00005cf9
- (void)setTag:(long)arg1;	// IMP=0x00005d04
- (BOOL)isUserInteractionEnabled;	// IMP=0x00005d12
- (void)setUserInteractionEnabled:(BOOL)arg1;	// IMP=0x00005d24
- (BOOL)moveWindowByDragging;	// IMP=0x00005d46
- (void)setMoveWindowByDragging:(BOOL)arg1;	// IMP=0x00005d57
- (BOOL)resizeWindowByDragging;	// IMP=0x00005d77
- (void)setResizeWindowByDragging:(BOOL)arg1;	// IMP=0x00005d89
- (BOOL)subpixelTextRenderingEnabled;	// IMP=0x00005daa
- (void)setSubpixelTextRenderingEnabled:(BOOL)arg1;	// IMP=0x00005dbf
- (id)viewDelegate;	// IMP=0x00005de4
- (void)setViewDelegate:(id)arg1;	// IMP=0x00005ff2
- (BOOL)_disableDrawRect;	// IMP=0x00005def
- (struct CGContext *)_CGContext;	// IMP=0x00007c20
- (void)displayLayer:(id)arg1;	// IMP=0x000077f5
- (void)_blockLayout;	// IMP=0x0000767c
- (void)setLayout:(id)arg1;	// IMP=0x000060b3
- (void)layoutSublayersOfLayer:(id)arg1;	// IMP=0x00006119
- (double)toolTipDelay;	// IMP=0x00005df6
- (void)setToolTipDelay:(double)arg1;	// IMP=0x00005e01
- (id)toolTip;	// IMP=0x00005e13
- (void)setToolTip:(id)arg1;	// IMP=0x00007640
- (id)layout;	// IMP=0x00005e1e
- (id)drawRect;	// IMP=0x00005e29
- (void)setDrawRect:(id)arg1;	// IMP=0x00007604

@end

@interface ABUIScrollView : ABUIView
{
    struct CGPoint _unroundedContentOffset;	// 80 = 0x50
    struct CGSize _contentSize;	// 88 = 0x58
    struct CGSize resizeKnobSize;	// 96 = 0x60
    struct ABUIEdgeInsets _contentInset;	// 104 = 0x68
    id _delegate;	// 120 = 0x78
    ABUIScrollKnob *_verticalScrollKnob;	// 124 = 0x7c
    ABUIScrollKnob *_horizontalScrollKnob;	// 128 = 0x80
    NSTimer *scrollTimer;	// 132 = 0x84
    struct CGPoint destinationOffset;	// 136 = 0x88
    struct CGPoint unfixedContentOffset;	// 144 = 0x90
    float decelerationRate;	// 152 = 0x98
    struct {
        float dx;
        float dy;
        double t;
    } _lastScroll;	// 156 = 0x9c
    struct {
        float vx;
        float vy;
        double t;
        char throwing;
    } _throw;	// 172 = 0xac
    struct {
        float x;
        float y;
        float vx;
        float vy;
        double t;
        char bouncing;
    } _bounce;	// 192 = 0xc0
    struct {
        float x;
        float y;
        char pulling;
    } _pull;	// 220 = 0xdc
    BOOL x;	// 232 = 0xe8
    struct {
        unsigned int didChangeContentInset:1;
        unsigned int bounceEnabled:1;
        unsigned int ignoreNextScrollPhaseNormal_10_7:1;
        unsigned int gestureBegan:1;
        unsigned int animationMode:2;
        unsigned int scrollDisabled:1;
        unsigned int indicatorStyle:2;
        unsigned int showsHorizontalScrollIndicator:1;
        unsigned int showsVerticalScrollIndicator:1;
        unsigned int delegateScrollViewDidScroll:1;
        unsigned int delegateScrollViewWillBeginDragging:1;
        unsigned int delegateScrollViewDidEndDragging:1;
    } _scrollViewFlags;	// 236 = 0xec
}

+ (Class)layerClass;	// IMP=0x000093bf
- (id)initWithFrame:(struct CGRect)arg1;	// IMP=0x0000911b
- (void)dealloc;	// IMP=0x0000ac4b
- (id)delegate;	// IMP=0x00008e22
- (void)setDelegate:(id)arg1;	// IMP=0x0000ab78
- (int)indicatorStyle;	// IMP=0x00008e2d
- (void)setIndicatorStyle:(int)arg1;	// IMP=0x00008e42
- (BOOL)isScrollEnabled;	// IMP=0x00008e6c
- (void)setScrollEnabled:(BOOL)arg1;	// IMP=0x00008e84
- (BOOL)showsHorizontalScrollIndicator;	// IMP=0x00008eaf
- (BOOL)showsVerticalScrollIndicator;	// IMP=0x00008ec4
- (void)setShowsHorizontalScrollIndicator:(BOOL)arg1;	// IMP=0x00008ed9
- (void)setShowsVerticalScrollIndicator:(BOOL)arg1;	// IMP=0x00008f02
- (struct ABUIEdgeInsets)contentInset;	// IMP=0x00008f2b
- (void)setContentInset:(struct ABUIEdgeInsets)arg1;	// IMP=0x0000aab8
- (struct CGRect)visibleRect;	// IMP=0x0000aa4d
- (void)_startTimer:(int)arg1;	// IMP=0x0000a9a5
- (void)_stopTimer;	// IMP=0x0000a93f
- (void)willMoveToWindow:(id)arg1;	// IMP=0x0000a8eb
- (struct CGPoint)_fixProposedContentOffset:(struct CGPoint)arg1;	// IMP=0x0000a82b
- (void)setResizeKnobSize:(struct CGSize)arg1;	// IMP=0x00008f5f
- (void)_updateScrollKnobs;	// IMP=0x0000a4c6
- (void)layoutSubviews;	// IMP=0x0000a47e
- (struct CGPoint)contentOffset;	// IMP=0x0000a3f4
- (struct CGPoint)pullOffset;	// IMP=0x00008f85
- (struct CGPoint)bounceOffset;	// IMP=0x00008fba
- (void)_setContentOffset:(struct CGPoint)arg1;	// IMP=0x0000a314
- (void)setContentOffset:(struct CGPoint)arg1;	// IMP=0x0000a2c3
- (struct CGSize)contentSize;	// IMP=0x00008fef
- (void)setContentSize:(struct CGSize)arg1;	// IMP=0x00008ffd
- (float)topDestinationOffset;	// IMP=0x0000a268
- (BOOL)isScrollingToTop;	// IMP=0x0000a1f1
- (void)setContentOffset:(struct CGPoint)arg1 animated:(BOOL)arg2;	// IMP=0x0000a18e
- (void)_startBounce;	// IMP=0x00009019
- (void)_updateBounce;	// IMP=0x0000a03f
- (void)tick:(id)arg1;	// IMP=0x00009d62
- (void)scrollRectToVisible:(struct CGRect)arg1 animated:(BOOL)arg2;	// IMP=0x00009c96
- (void)scrollToTopAnimated:(BOOL)arg1;	// IMP=0x00009c50
- (void)scrollToBottomAnimated:(BOOL)arg1;	// IMP=0x00009c19
- (void)pageDown:(id)arg1;	// IMP=0x00009b8b
- (void)pageUp:(id)arg1;	// IMP=0x00009afd
- (void)flashScrollIndicators;	// IMP=0x00009ac0
- (BOOL)isDragging;	// IMP=0x000090d5
- (void)beginGestureWithEvent:(id)arg1;	// IMP=0x00009a6f
- (void)_startThrow;	// IMP=0x00009917
- (void)endGestureWithEvent:(id)arg1;	// IMP=0x000098a9
- (void)scrollWheel:(id)arg1;	// IMP=0x000094a3
- (BOOL)performKeyAction:(id)arg1;	// IMP=0x000093e1
- (struct CGSize)resizeKnobSize;	// IMP=0x000090ea
- (float)decelerationRate;	// IMP=0x000090f8
- (void)setDecelerationRate:(float)arg1;	// IMP=0x00009106

@end

@interface ABUITableView : ABUIScrollView
{
    int _style;	// 240 = 0xf0
    id <ABUITableViewDataSource> _dataSource;	// 244 = 0xf4
    NSArray *_sectionInfo;	// 248 = 0xf8
    ABUIView *_pullDownView;	// 252 = 0xfc
    struct CGSize _lastSize;	// 256 = 0x100
    float _contentHeight;	// 264 = 0x108
    NSMutableDictionary *_visibleItems;	// 268 = 0x10c
    NSMutableDictionary *_reusableTableCells;	// 272 = 0x110
    ABUIFastIndexPath *_selectedIndexPath;	// 276 = 0x114
    ABUIFastIndexPath *_indexPathShouldBeFirstResponder;	// 280 = 0x118
    int _futureMakeFirstResponderToken;	// 284 = 0x11c
    ABUIFastIndexPath *_keepVisibleIndexPathForReload;	// 288 = 0x120
    float _relativeOffsetForReload;	// 292 = 0x124
    struct {
        unsigned int forceSaveScrollPosition:1;
        unsigned int derepeaterEnabled:1;
        unsigned int layoutSubviewsReentrancyGuard:1;
        unsigned int didFirstLayout:1;
        unsigned int dataSourceNumberOfSectionsInTableView:1;
        unsigned int delegateTableViewWillDisplayCellForRowAtIndexPath:1;
        unsigned int delegateTableViewHeightForRowAtIndexPath:1;
        unsigned int delegateTableViewDidSelectRowAtIndexPath:1;
        unsigned int delegateTableViewDidClickRowAtIndexPathWithEvent:1;
    } _tableFlags;	// 296 = 0x128
}

- (id)initWithFrame:(struct CGRect)arg1 style:(int)arg2;	// IMP=0x0000cc0d
- (void)dealloc;	// IMP=0x0000cb36
- (id)delegate;	// IMP=0x0000ad7b
- (void)setDelegate:(id)arg1;	// IMP=0x0000cb02
- (id)dataSource;	// IMP=0x0000ad51
- (void)setDataSource:(id)arg1;	// IMP=0x0000caae
- (long)numberOfSections;	// IMP=0x0000ca88
- (long)numberOfRowsInSection:(long)arg1;	// IMP=0x0000ca49
- (struct CGRect)rectForRowAtIndexPath:(id)arg1;	// IMP=0x0000c902
- (id)_freshSectionInfo;	// IMP=0x0000c78d
- (void)_enqueueReusableCell:(id)arg1;	// IMP=0x0000c6c4
- (id)dequeueReusableCellWithIdentifier:(id)arg1;	// IMP=0x0000c626
- (id)cellForRowAtIndexPath:(id)arg1;	// IMP=0x0000c5f9
- (id)visibleCells;	// IMP=0x0000c5d3
- (id)sortedVisibleCells;	// IMP=0x0000c59a
- (id)indexPathsForVisibleRows;	// IMP=0x0000c574
- (id)indexPathForCell:(id)arg1;	// IMP=0x0000c45c
- (id)indexPathsForRowsInRect:(struct CGRect)arg1;	// IMP=0x0000c203
- (id)_topVisibleIndexPath;	// IMP=0x0000c18b
- (void)setFrame:(struct CGRect)arg1;	// IMP=0x0000c141
- (void)setContentOffset:(struct CGPoint)arg1;	// IMP=0x0000c0f7
- (void)setPullDownView:(id)arg1;	// IMP=0x0000c066
- (BOOL)_preLayoutCells;	// IMP=0x0000bcef
- (void)_layoutCells:(BOOL)arg1;	// IMP=0x0000b48d
- (BOOL)pullDownViewIsVisible;	// IMP=0x0000b3c9
- (void)reloadDataMaintainingVisibleIndexPath:(id)arg1 relativeOffset:(float)arg2;	// IMP=0x0000b369
- (void)reloadData;	// IMP=0x0000b1df
- (void)layoutSubviews;	// IMP=0x0000b166
- (void)scrollToRowAtIndexPath:(id)arg1 atScrollPosition:(int)arg2 animated:(BOOL)arg3;	// IMP=0x0000b0b7
- (id)indexPathForSelectedRow;	// IMP=0x0000ad5f
- (id)indexPathForFirstRow;	// IMP=0x0000b085
- (id)indexPathForLastRow;	// IMP=0x0000b028
- (void)_makeRowAtIndexPathFirstResponder:(id)arg1;	// IMP=0x0000af77
- (void)selectRowAtIndexPath:(id)arg1 animated:(BOOL)arg2 scrollPosition:(int)arg3;	// IMP=0x0000ae4c
- (void)deselectRowAtIndexPath:(id)arg1 animated:(BOOL)arg2;	// IMP=0x0000ada8
- (id)pullDownView;	// IMP=0x0000ad6d

@end

@interface ABUITableViewSection : NSObject
{
    ABUITableView *_tableView;	// 4 = 0x4
    int sectionIndex;	// 8 = 0x8
    unsigned int numberOfRows;	// 12 = 0xc
    float sectionHeight;	// 16 = 0x10
    float sectionOffset;	// 20 = 0x14
    struct {
        float _field1;
        float _field2;
    } *rowInfo;	// 24 = 0x18
}

- (id)initWithNumberOfRows:(unsigned long)arg1 sectionIndex:(long)arg2 tableView:(id)arg3;	// IMP=0x0000ccc1
- (void)dealloc;	// IMP=0x0000ce1d
- (unsigned long)numberOfRows;	// IMP=0x0000ace1
- (void)_setupRowHeights;	// IMP=0x0000cd63
- (float)rowHeight:(long)arg1;	// IMP=0x0000acec
- (float)sectionRowOffset:(long)arg1;	// IMP=0x0000ad0b
- (float)tableRowOffset:(long)arg1;	// IMP=0x0000cd1d
- (float)sectionHeight;	// IMP=0x0000ad29
- (float)sectionOffset;	// IMP=0x0000ad34
- (void)setSectionOffset:(float)arg1;	// IMP=0x0000ad3f

@end

@interface ABUITableViewCell : ABUIView
{
    NSString *_reuseIdentifier;	// 80 = 0x50
    struct {
        unsigned int highlighted:1;
        unsigned int selected:1;
    } _tableViewCellFlags;	// 84 = 0x54
}

- (void)setReuseIdentifier:(id)arg1;	// IMP=0x0000d49f
- (id)initWithStyle:(int)arg1 reuseIdentifier:(id)arg2;	// IMP=0x0000d5de
- (void)dealloc;	// IMP=0x0000d815
- (id)reuseIdentifier;	// IMP=0x0000d443
- (void)prepareForReuse;	// IMP=0x0000d4db
- (void)prepareForDisplay;	// IMP=0x0000d53a
- (id)tableView;	// IMP=0x0000d559
- (id)indexPath;	// IMP=0x0000d578
- (BOOL)acceptsFirstMouse:(id)arg1;	// IMP=0x0000d44e
- (void)mouseDown:(id)arg1;	// IMP=0x0000d73e
- (void)mouseUp:(id)arg1;	// IMP=0x0000d649
- (BOOL)isHighlighted;	// IMP=0x0000d455
- (BOOL)isSelected;	// IMP=0x0000d465
- (void)setSelected:(BOOL)arg1;	// IMP=0x0000d5af
- (void)setSelected:(BOOL)arg1 animated:(BOOL)arg2;	// IMP=0x0000d477
- (id)derepeaterView;	// IMP=0x0000d491
- (id)derepeaterIdentifier;	// IMP=0x0000d498

@end

@interface ABUINSView : NSView <NSTextInputClient>
{
    ABUIView *rootView;	// 80 = 0x50
    ABUIView *_hoverView;	// 84 = 0x54
    ABUIView *_trackingView;	// 88 = 0x58
    ABUIView *_hyperFocusView;	// 92 = 0x5c
    ABUIView *_hyperFadeView;	// 96 = 0x60
    id _hyperCompletion;	// 100 = 0x64
    NSTrackingArea *_trackingArea;	// 104 = 0x68
    ABUITextRenderer *_tempTextRendererForTextInputClient;	// 108 = 0x6c
    BOOL deliveringEvent;	// 112 = 0x70
    BOOL inLiveResize;	// 113 = 0x71
    BOOL opaque;	// 114 = 0x72
}

- (id)initWithFrame:(struct CGRect)arg1;	// IMP=0x0000d8e8
- (void)dealloc;	// IMP=0x0000eceb
- (void)resetCursorRects;	// IMP=0x0000ec65
- (void)ab_setIsOpaque:(BOOL)arg1;	// IMP=0x0000d859
- (BOOL)isOpaque;	// IMP=0x0000d867
- (BOOL)mouseDownCanMoveWindow;	// IMP=0x0000d881
- (void)updateTrackingAreas;	// IMP=0x0000eb65
- (void)viewWillStartLiveResize;	// IMP=0x0000eb1d
- (BOOL)inLiveResize;	// IMP=0x0000d888
- (void)viewDidEndLiveResize;	// IMP=0x0000ea77
- (void)setRootView:(id)arg1;	// IMP=0x0000e832
- (id)viewForLocalPoint:(struct CGPoint)arg1;	// IMP=0x0000e7f1
- (struct CGPoint)localPointForLocationInWindow:(struct CGPoint)arg1;	// IMP=0x0000e7b4
- (id)viewForLocationInWindow:(struct CGPoint)arg1;	// IMP=0x0000e763
- (id)viewForEvent:(id)arg1;	// IMP=0x0000e727
- (void)_updateHoverView:(id)arg1 withEvent:(id)arg2;	// IMP=0x0000e5e7
- (void)_updateHoverViewWithEvent:(id)arg1;	// IMP=0x0000e55e
- (void)invalidateHover;	// IMP=0x0000e52f
- (void)invalidateHoverForView:(id)arg1;	// IMP=0x0000e4ee
- (void)mouseDown:(id)arg1;	// IMP=0x0000e407
- (void)mouseUp:(id)arg1;	// IMP=0x0000e381
- (void)mouseDragged:(id)arg1;	// IMP=0x0000e357
- (void)mouseMoved:(id)arg1;	// IMP=0x0000e331
- (void)scrollWheel:(id)arg1;	// IMP=0x0000e2d4
- (void)beginGestureWithEvent:(id)arg1;	// IMP=0x0000e296
- (void)endGestureWithEvent:(id)arg1;	// IMP=0x0000e258
- (void)magnifyWithEvent:(id)arg1;	// IMP=0x0000e20a
- (void)rotateWithEvent:(id)arg1;	// IMP=0x0000e1bc
- (void)swipeWithEvent:(id)arg1;	// IMP=0x0000e16e
- (BOOL)performKeyEquivalent:(id)arg1;	// IMP=0x0000e141
- (void)setEverythingNeedsDisplay;	// IMP=0x0000e11e
- (BOOL)isTrackingSubviewOfView:(id)arg1;	// IMP=0x0000e0f1
- (BOOL)isHoveringSubviewOfView:(id)arg1;	// IMP=0x0000e0c4
- (BOOL)isHoveringView:(id)arg1;	// IMP=0x0000d894
- (BOOL)acceptsFirstMouse:(id)arg1;	// IMP=0x0000e083
- (id)firstResponderForSelector:(SEL)arg1;	// IMP=0x0000e00e
- (void)_patchMenu:(id)arg1;	// IMP=0x0000de6e
- (id)menuWithPatchedItems:(id)arg1;	// IMP=0x0000de0b
- (id)menuForEvent:(id)arg1;	// IMP=0x0000ddad
- (id)_textRendererAtScreenPoint:(struct CGPoint)arg1;	// IMP=0x0000dcdd
- (id)attributedSubstringForProposedRange:(struct _NSRange)arg1 actualRange:(struct _NSRange *)arg2;	// IMP=0x0000dc09
- (unsigned long)characterIndexForPoint:(struct CGPoint)arg1;	// IMP=0x0000dafa
- (struct CGRect)firstRectForCharacterRange:(struct _NSRange)arg1 actualRange:(struct _NSRange *)arg2;	// IMP=0x0000d981
- (void)unmarkText;	// IMP=0x0000d8a8
- (id)validAttributesForMarkedText;	// IMP=0x0000d95f
- (void)insertText:(id)arg1 replacementRange:(struct _NSRange)arg2;	// IMP=0x0000d8ad
- (BOOL)drawsVerticallyForCharacterAtIndex:(unsigned long)arg1;	// IMP=0x0000d8b2
- (BOOL)hasMarkedText;	// IMP=0x0000d8b9
- (struct _NSRange)markedRange;	// IMP=0x0000d8c0
- (struct _NSRange)selectedRange;	// IMP=0x0000d8cc
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2 replacementRange:(struct _NSRange)arg3;	// IMP=0x0000d8d8
- (void)doCommandBySelector:(SEL)arg1;	// IMP=0x0000d933
- (id)rootView;	// IMP=0x0000d8dd

@end

@interface ABUIColor : NSObject
{
    struct CGColor *_cgColor;	// 4 = 0x4
    NSColor *_nsColor;	// 8 = 0x8
}

+ (id)colorWithPatternImage:(id)arg1;	// IMP=0x0000edfb
+ (id)colorWithNSColor:(id)arg1;	// IMP=0x0000ee45
+ (id)colorWithWhite:(float)arg1 alpha:(float)arg2;	// IMP=0x0000eede
+ (id)colorWithRed:(float)arg1 green:(float)arg2 blue:(float)arg3 alpha:(float)arg4;	// IMP=0x0000ef37
+ (id)colorWithCGColor:(struct CGColor *)arg1;	// IMP=0x0000efa6
+ (id)clearColor;	// IMP=0x0000eff0
+ (id)blackColor;	// IMP=0x0000f040
+ (id)darkGrayColor;	// IMP=0x0000f090
+ (id)lightGrayColor;	// IMP=0x0000f0e0
+ (id)whiteColor;	// IMP=0x0000f130
+ (id)grayColor;	// IMP=0x0000f180
+ (id)redColor;	// IMP=0x0000f1d0
+ (id)greenColor;	// IMP=0x0000f230
+ (id)blueColor;	// IMP=0x0000f290
+ (id)cyanColor;	// IMP=0x0000f2f0
+ (id)yellowColor;	// IMP=0x0000f350
+ (id)magentaColor;	// IMP=0x0000f3b0
+ (id)orangeColor;	// IMP=0x0000f410
+ (id)purpleColor;	// IMP=0x0000f470
+ (id)brownColor;	// IMP=0x0000f4d0
+ (id)selectedGradientBottomBlue;	// IMP=0x0000f530
+ (id)graphiteColor;	// IMP=0x0000f590
+ (id)linkColor;	// IMP=0x0000f5f0
+ (id)sidebarBackgroundColor;	// IMP=0x0000f632
+ (id)backgroundSidebarBackgroundColor;	// IMP=0x0000f68d
- (id)initWithWhite:(float)arg1 alpha:(float)arg2;	// IMP=0x0000f6e8
- (id)initWithRed:(float)arg1 green:(float)arg2 blue:(float)arg3 alpha:(float)arg4;	// IMP=0x0000f737
- (id)initWithCGColor:(struct CGColor *)arg1;	// IMP=0x0000faa0
- (id)initWithPatternImage:(id)arg1;	// IMP=0x0000f94e
- (void)dealloc;	// IMP=0x0000f79c
- (struct CGColor *)CGColor;	// IMP=0x0000ed9f
- (void)set;	// IMP=0x0000edc9
- (void)setFill;	// IMP=0x0000f92a
- (void)setStroke;	// IMP=0x0000f906
- (id)colorWithAlphaComponent:(float)arg1;	// IMP=0x0000f8b5
- (id)nsColor;	// IMP=0x0000f804
- (float)alpha;	// IMP=0x0000f7eb

@end

@interface ABUIStretchableImage : ABUIImage
{
    int leftCapWidth;	// 8 = 0x8
    int topCapHeight;	// 12 = 0xc
    ABUIImage *slices[9];	// 16 = 0x10
    struct {
        unsigned int haveSlices:1;
    } _flags;	// 52 = 0x34
}

- (void)dealloc;	// IMP=0x00010188
- (long)leftCapWidth;	// IMP=0x0000fba6
- (long)topCapHeight;	// IMP=0x0000fbb1
- (void)drawInRect:(struct CGRect)arg1 blendMode:(int)arg2 alpha:(float)arg3;	// IMP=0x000101d9

@end

@interface ABUIImage : NSObject
{
    struct CGImage *_imageRef;	// 4 = 0x4
}

+ (id)_imageWithABImage:(id)arg1;	// IMP=0x0000fe29
+ (id)imageNamed:(id)arg1 cache:(BOOL)arg2;	// IMP=0x0000fd0c
+ (id)imageNamed:(id)arg1;	// IMP=0x0000fcde
+ (id)imageWithData:(id)arg1;	// IMP=0x0000fc4f
+ (id)imageWithCGImage:(struct CGImage *)arg1;	// IMP=0x0000fc05
- (id)initWithCGImage:(struct CGImage *)arg1;	// IMP=0x0000fbbc
- (void)dealloc;	// IMP=0x0001014a
- (struct CGSize)size;	// IMP=0x000100ea
- (struct CGImage *)CGImage;	// IMP=0x0000fb8d
- (void)drawAtPoint:(struct CGPoint)arg1;	// IMP=0x000100a5
- (void)drawAtPoint:(struct CGPoint)arg1 blendMode:(int)arg2 alpha:(float)arg3;	// IMP=0x00010031
- (void)drawInRect:(struct CGRect)arg1;	// IMP=0x0000ffec
- (void)drawInRect:(struct CGRect)arg1 blendMode:(int)arg2 alpha:(float)arg3;	// IMP=0x0000ff72
- (long)leftCapWidth;	// IMP=0x0000fb98
- (long)topCapHeight;	// IMP=0x0000fb9f
- (id)stretchableImageWithLeftCapWidth:(long)arg1 topCapHeight:(long)arg2;	// IMP=0x0000ff37
- (id)dataRepresentationForType:(id)arg1 compression:(float)arg2;	// IMP=0x0000fe61

@end

@interface ABUILabel : ABUIView
{
    ABUITextRenderer *renderer;	// 80 = 0x50
    struct {
        unsigned int selectable:1;
    } _textLabelFlags;	// 84 = 0x54
}

- (id)initWithFrame:(struct CGRect)arg1;	// IMP=0x00010b1c
- (void)dealloc;	// IMP=0x00010efd
- (id)menuForEvent:(id)arg1;	// IMP=0x00010db3
- (void)copyText:(id)arg1;	// IMP=0x00010d10
- (void)drawRect:(struct CGRect)arg1;	// IMP=0x00010c4e
- (id)attributedString;	// IMP=0x00010c2b
- (void)_update;	// IMP=0x00010c0c
- (void)setAttributedString:(id)arg1;	// IMP=0x00010bcf
- (BOOL)isSelectable;	// IMP=0x00010ae9
- (void)setSelectable:(BOOL)arg1;	// IMP=0x00010af9
- (id)renderer;	// IMP=0x00010b11

@end

@interface ABUIFont : NSObject
{
    struct __CTFont *_ctFont;	// 4 = 0x4
}

+ (void)initialize;	// IMP=0x000113c0
+ (id)fontWithName:(id)arg1 size:(float)arg2;	// IMP=0x0001127e
+ (id)systemFontOfSize:(float)arg1;	// IMP=0x00011206
+ (id)boldSystemFontOfSize:(float)arg1;	// IMP=0x0001118e
+ (void)loadFontData:(id)arg1;	// IMP=0x00011094
+ (void)loadBundledFonts;	// IMP=0x00010f98
- (id)initWithCTFont:(struct __CTFont *)arg1;	// IMP=0x00010f53
- (void)dealloc;	// IMP=0x00011846
- (id)familyName;	// IMP=0x0001181b
- (id)fontName;	// IMP=0x000117f0
- (float)pointSize;	// IMP=0x000117d7
- (float)ascender;	// IMP=0x000117be
- (float)descender;	// IMP=0x000117a5
- (float)leading;	// IMP=0x0001178c
- (float)capHeight;	// IMP=0x00011773
- (float)xHeight;	// IMP=0x0001175a
- (id)fontWithSize:(float)arg1;	// IMP=0x00010f41
- (struct __CTFont *)ctFont;	// IMP=0x00010f48

@end

@interface ABUINSWindow : NSWindow <NSWindowDelegate>
{
    ABUINSView *nsView;	// 132 = 0x84
    NSMutableArray *altUINSViews;	// 136 = 0x88
    int makeFirstResponderCount;	// 140 = 0x8c
}

+ (long)windowMask;	// IMP=0x00011f24
- (float)toolbarHeight;	// IMP=0x00011f2b
- (BOOL)useCustomContentView;	// IMP=0x00011f36
- (id)initWithContentRect:(struct CGRect)arg1;	// IMP=0x0001237f
- (void)dealloc;	// IMP=0x00012165
- (void)drawBackground:(struct CGRect)arg1;	// IMP=0x00012307
- (id)currentResponderChain;	// IMP=0x00011fa0
- (BOOL)containsObjectInResponderChain:(id)arg1;	// IMP=0x0001200d
- (void)setEverythingNeedsDisplay;	// IMP=0x00012054
- (void)becomeKeyWindow;	// IMP=0x000122c7
- (void)resignKeyWindow;	// IMP=0x00012267
- (long)futureMakeFirstResponderRequestToken;	// IMP=0x00011f3d
- (BOOL)makeFirstResponder:(id)arg1 withFutureRequestToken:(long)arg2;	// IMP=0x0001221f
- (BOOL)makeFirstResponder:(id)arg1;	// IMP=0x000121ac
- (BOOL)makeFirstResponderIfNotAlreadyInResponderChain:(id)arg1;	// IMP=0x000120c9
- (BOOL)makeFirstResponderIfNotAlreadyInResponderChain:(id)arg1 withFutureRequestToken:(long)arg2;	// IMP=0x00012113
- (id)altUINSViews;	// IMP=0x00011f4b
- (id)nsView;	// IMP=0x00011f59

@end

@interface ABUINSWindowFrame : NSView
{
    ABUINSWindow *w;	// 80 = 0x50
}

- (void)drawRect:(struct CGRect)arg1;	// IMP=0x00011f67

@end

@interface ABUIImageView : ABUIView
{
    ABUIImage *_image;	// 80 = 0x50
}

- (id)initWithImage:(id)arg1;	// IMP=0x00012744
- (void)dealloc;	// IMP=0x00012809
- (id)image;	// IMP=0x00012739
- (void)setImage:(id)arg1;	// IMP=0x000127ba
- (void)drawRect:(struct CGRect)arg1;	// IMP=0x0001284d

@end

@interface ABUITextRenderer : ABUIResponder
{
    NSAttributedString *attributedString;	// 8 = 0x8
    struct CGRect frame;	// 12 = 0xc
    ABUIView *view;	// 28 = 0x1c
    struct __CTFramesetter *_ct_framesetter;	// 32 = 0x20
    struct CGPath *_ct_path;	// 36 = 0x24
    struct __CTFrame *_ct_frame;	// 40 = 0x28
    int _selectionStart;	// 44 = 0x2c
    int _selectionEnd;	// 48 = 0x30
    int _selectionAffinity;	// 52 = 0x34
    id <ABUITextRendererDelegate> delegate;	// 56 = 0x38
    id <ABActiveTextRange> hitRange;	// 60 = 0x3c
    struct CGSize shadowOffset;	// 64 = 0x40
    float shadowBlur;	// 72 = 0x48
    ABUIColor *shadowColor;	// 76 = 0x4c
    struct {
        unsigned int drawMaskDragSelection:1;
    } _flags;	// 80 = 0x50
}

- (void)_resetFramesetter;	// IMP=0x00012991
- (void)dealloc;	// IMP=0x00012d5a
- (void)_buildFramesetter;	// IMP=0x00013563
- (struct __CTFramesetter *)ctFramesetter;	// IMP=0x000129e3
- (struct __CTFrame *)ctFrame;	// IMP=0x00012a07
- (struct CGPath *)ctPath;	// IMP=0x00012a2b
- (long)_clampToValidRange:(long)arg1;	// IMP=0x00012a4f
- (struct _NSRange)_wordRangeAtIndex:(long)arg1;	// IMP=0x00012a85
- (struct _NSRange)_lineRangeAtIndex:(long)arg1;	// IMP=0x00012ac7
- (struct _NSRange)_paragraphRangeAtIndex:(long)arg1;	// IMP=0x00012b0b
- (CDStruct_1ef3fb1f)_selectedRange;	// IMP=0x00012b4f
- (struct _NSRange)selectedRange;	// IMP=0x00012bfb
- (void)setSelection:(struct _NSRange)arg1;	// IMP=0x00012c1a
- (id)selectedString;	// IMP=0x00012c50
- (void)draw;	// IMP=0x0001353a
- (void)drawInContext:(struct CGContext *)arg1;	// IMP=0x00012f44
- (struct CGSize)size;	// IMP=0x00012ef6
- (void)setAttributedString:(id)arg1;	// IMP=0x00012ca4
- (void)setFrame:(struct CGRect)arg1;	// IMP=0x00012cf3
- (void)reset;	// IMP=0x00012d3b
- (struct CGRect)firstRectForCharacterRange:(CDStruct_1ef3fb1f)arg1;	// IMP=0x00012e51
- (float)shadowBlur;	// IMP=0x000128dc
- (void)setShadowBlur:(float)arg1;	// IMP=0x000128e7
- (struct CGSize)shadowOffset;	// IMP=0x000128f9
- (void)setShadowOffset:(struct CGSize)arg1;	// IMP=0x00012907
- (id)shadowColor;	// IMP=0x00012923
- (void)setShadowColor:(id)arg1;	// IMP=0x00012e15
- (id)hitRange;	// IMP=0x0001292e
- (void)setHitRange:(id)arg1;	// IMP=0x00012dd9
- (id)view;	// IMP=0x00012939
- (void)setView:(id)arg1;	// IMP=0x00012944
- (struct CGRect)frame;	// IMP=0x00012952
- (id)attributedString;	// IMP=0x00012986

@end

@interface ABUIAttributedString : NSMutableAttributedString
{
}

+ (id)stringWithString:(id)arg1;	// IMP=0x00014e8e

@end

@interface ABUIScrollKnob : ABUIView
{
    ABUIScrollView *scrollView;	// 80 = 0x50
    ABUIView *knob;	// 84 = 0x54
    struct CGPoint _mouseDown;	// 88 = 0x58
    struct CGRect _knobStartFrame;	// 96 = 0x60
    struct {
        unsigned int hover:1;
        unsigned int active:1;
        unsigned int trackingInsideKnob:1;
    } _scrollKnobFlags;	// 112 = 0x70
}

- (id)initWithFrame:(struct CGRect)arg1;	// IMP=0x00015425
- (void)dealloc;	// IMP=0x00015eef
- (BOOL)isVertical;	// IMP=0x00015eb7
- (void)_updateKnob;	// IMP=0x00015c11
- (void)layoutSubviews;	// IMP=0x00015bf2
- (void)flash;	// IMP=0x00015a68
- (void)_updateKnobColor:(float)arg1;	// IMP=0x0001599e
- (void)mouseEntered:(id)arg1;	// IMP=0x00015972
- (void)mouseExited:(id)arg1;	// IMP=0x00015946
- (void)mouseDown:(id)arg1;	// IMP=0x00015791
- (void)mouseUp:(id)arg1;	// IMP=0x00015765
- (void)mouseDragged:(id)arg1;	// IMP=0x00015590
- (id)knob;	// IMP=0x00015401
- (id)scrollView;	// IMP=0x0001540c
- (void)setScrollView:(id)arg1;	// IMP=0x00015417

@end

@interface ABUIViewAnimation : NSObject <CAAction>
{
    void *context;	// 4 = 0x4
    NSString *animationID;	// 8 = 0x8
    id delegate;	// 12 = 0xc
    SEL animationWillStartSelector;	// 16 = 0x10
    SEL animationDidStopSelector;	// 20 = 0x14
    id animationCompletionBlock;	// 24 = 0x18
    CABasicAnimation *basicAnimation;	// 28 = 0x1c
}

- (id)init;	// IMP=0x00016020
- (void)dealloc;	// IMP=0x00016294
- (void)runActionForKey:(id)arg1 object:(id)arg2 arguments:(id)arg3;	// IMP=0x00016216
- (void)animationDidStart:(id)arg1;	// IMP=0x000161ba
- (void)animationDidStop:(id)arg1 finished:(BOOL)arg2;	// IMP=0x000160fb
- (id)basicAnimation;	// IMP=0x00015f33
- (id)animationCompletionBlock;	// IMP=0x00015f3e
- (void)setAnimationCompletionBlock:(id)arg1;	// IMP=0x000160bf
- (SEL)animationDidStopSelector;	// IMP=0x00015f49
- (void)setAnimationDidStopSelector:(SEL)arg1;	// IMP=0x00015f54
- (SEL)animationWillStartSelector;	// IMP=0x00015f62
- (void)setAnimationWillStartSelector:(SEL)arg1;	// IMP=0x00015f6d
- (id)delegate;	// IMP=0x00015f7b
- (void)setDelegate:(id)arg1;	// IMP=0x00015f86
- (id)animationID;	// IMP=0x00015f94
- (void)setAnimationID:(id)arg1;	// IMP=0x00016083
- (void *)context;	// IMP=0x00015f9f
- (void)setContext:(void *)arg1;	// IMP=0x00015faa

@end

@interface ABUIButton : ABUIControl
{
    NSMutableDictionary *_contentLookup;	// 88 = 0x58
    struct ABUIEdgeInsets _titleEdgeInsets;	// 92 = 0x5c
    struct ABUIEdgeInsets _imageEdgeInsets;	// 108 = 0x6c
    ABUIImageView *_imageView;	// 124 = 0x7c
    ABUILabel *_titleView;	// 128 = 0x80
    NSMenu *popUpMenu;	// 132 = 0x84
    struct {
        unsigned int dimsInBackground:1;
        unsigned int buttonType:8;
    } _buttonFlags;	// 136 = 0x88
}

+ (id)button;	// IMP=0x00016d31
+ (id)buttonWithType:(int)arg1;	// IMP=0x00016cd3
- (id)initWithFrame:(struct CGRect)arg1;	// IMP=0x00016c2b
- (void)dealloc;	// IMP=0x000175ba
- (BOOL)acceptsFirstResponder;	// IMP=0x00016a3f
- (void)setImageEdgeInsets:(struct ABUIEdgeInsets)arg1;	// IMP=0x00016a46
- (struct ABUIEdgeInsets)imageEdgeInsets;	// IMP=0x00016a76
- (void)setTitleEdgeInsets:(struct ABUIEdgeInsets)arg1;	// IMP=0x00016aaa
- (struct ABUIEdgeInsets)titleEdgeInsets;	// IMP=0x00016ada
- (int)buttonType;	// IMP=0x00016b0e
- (id)titleLabel;	// IMP=0x000174c3
- (id)imageView;	// IMP=0x00017411
- (BOOL)dimsInBackground;	// IMP=0x00016b22
- (void)setDimsInBackground:(BOOL)arg1;	// IMP=0x00016b34
- (struct CGRect)backgroundRectForBounds:(struct CGRect)arg1;	// IMP=0x00016b59
- (struct CGRect)contentRectForBounds:(struct CGRect)arg1;	// IMP=0x00016b8a
- (struct CGRect)titleRectForContentRect:(struct CGRect)arg1;	// IMP=0x00016bbb
- (struct CGRect)imageRectForContentRect:(struct CGRect)arg1;	// IMP=0x00016bec
- (void)drawRect:(struct CGRect)arg1;	// IMP=0x00016fe5
- (void)mouseDown:(id)arg1;	// IMP=0x00016e3f
- (void)mouseUp:(id)arg1;	// IMP=0x00016d94
- (id)popUpMenu;	// IMP=0x00016c1d
- (void)setPopUpMenu:(id)arg1;	// IMP=0x00016d58

@end

@interface ABUIControl : ABUIView
{
    NSMutableArray *_targetActions;	// 80 = 0x50
    struct {
        unsigned int disabled:1;
        unsigned int acceptsFirstMouse:1;
        unsigned int tracking:1;
    } _controlFlags;	// 84 = 0x54
}

- (void)dealloc;	// IMP=0x00017774
- (BOOL)isEnabled;	// IMP=0x0001769d
- (void)setEnabled:(BOOL)arg1;	// IMP=0x000176af
- (BOOL)isTracking;	// IMP=0x000176c9
- (unsigned long)state;	// IMP=0x00017708
- (BOOL)acceptsFirstMouse;	// IMP=0x000176dc
- (void)setAcceptsFirstMouse:(BOOL)arg1;	// IMP=0x000176ee
- (BOOL)acceptsFirstMouse:(id)arg1;	// IMP=0x00017752
- (void)mouseDown:(id)arg1;	// IMP=0x00017803
- (void)mouseUp:(id)arg1;	// IMP=0x000177b8

@end

@interface ABUIControlTargetAction : NSObject
{
    id target;	// 4 = 0x4
    SEL action;	// 8 = 0x8
    id block;	// 12 = 0xc
    unsigned int controlEvents;	// 16 = 0x10
}

- (void)dealloc;	// IMP=0x00017a96
- (unsigned long)controlEvents;	// IMP=0x0001784e
- (void)setControlEvents:(unsigned long)arg1;	// IMP=0x00017859
- (id)block;	// IMP=0x00017867
- (void)setBlock:(id)arg1;	// IMP=0x00017ada
- (SEL)action;	// IMP=0x00017872
- (void)setAction:(SEL)arg1;	// IMP=0x0001787d
- (id)target;	// IMP=0x0001788b
- (void)setTarget:(id)arg1;	// IMP=0x00017896

@end

@interface ABUIViewController : ABUIResponder <NSCopying>
{
    ABUIView *_view;	// 8 = 0x8
    ABUINavigationItem *_navigationItem;	// 12 = 0xc
    ABUIViewController *_parentViewController;	// 16 = 0x10
}

- (id)initWithNibName:(id)arg1 bundle:(id)arg2;	// IMP=0x000183c5
- (void)dealloc;	// IMP=0x00018673
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x000183e4
- (id)view;	// IMP=0x00018427
- (void)setView:(id)arg1;	// IMP=0x0001847c
- (id)setupStandardViewInnerClippingView;	// IMP=0x000184cf
- (id)clippingView;	// IMP=0x00018354
- (BOOL)performKeyEquivalent:(id)arg1;	// IMP=0x0001835f
- (void)loadView;	// IMP=0x00018366
- (void)viewDidLoad;	// IMP=0x0001836b
- (void)viewDidUnload;	// IMP=0x00018370
- (BOOL)isViewLoaded;	// IMP=0x00018375
- (void)viewWillAppear:(BOOL)arg1;	// IMP=0x00018387
- (void)viewDidAppear:(BOOL)arg1;	// IMP=0x0001838c
- (void)viewWillDisappear:(BOOL)arg1;	// IMP=0x00018391
- (void)viewDidDisappear:(BOOL)arg1;	// IMP=0x00018396
- (id)title;	// IMP=0x000185a1
- (void)setTitle:(id)arg1;	// IMP=0x000185d2
- (void)didReceiveMemoryWarning;	// IMP=0x0001860a
- (void)presentModalViewController:(id)arg1 animated:(BOOL)arg2;	// IMP=0x0001839b
- (void)dismissModalViewControllerAnimated:(BOOL)arg1;	// IMP=0x000183a0
- (id)modalViewController;	// IMP=0x000183a5
- (id)parentViewController;	// IMP=0x000183ac
- (void)setParentViewController:(id)arg1;	// IMP=0x000183b7
- (id)initialFirstResponder;	// IMP=0x00018650

@end

@interface ABUINavigationItem : NSObject
{
    NSString *_title;	// 4 = 0x4
    ABUINavigationBar *_navigationBar;	// 8 = 0x8
    ABUIView *titleView;	// 12 = 0xc
    ABUIView *backButtonView;	// 16 = 0x10
    ABUIView *_rightViewContainer;	// 20 = 0x14
    ABUIView *rightView;	// 24 = 0x18
}

+ (id)buttonBarButtonBackground;	// IMP=0x00018989
+ (id)buttonBarButtonActiveBackground;	// IMP=0x0001891d
+ (id)buttonBarButtonDimBackground;	// IMP=0x000188b1
+ (id)titleBarButtonWithImage:(id)arg1;	// IMP=0x00018802
+ (id)titleBarButtonWithTitle:(id)arg1;	// IMP=0x00018747
- (id)initWithTitle:(id)arg1;	// IMP=0x000186f7
- (void)dealloc;	// IMP=0x00018f0a
- (void)_setNavigationBar:(id)arg1;	// IMP=0x000186cc
- (void)setTitle:(id)arg1;	// IMP=0x00018e8d
- (id)titleView;	// IMP=0x00018d3e
- (id)attributedBackText;	// IMP=0x000186da
- (id)backButtonView;	// IMP=0x00018b74
- (void)back:(id)arg1;	// IMP=0x00018b32
- (id)rightViewContainer;	// IMP=0x00018abd
- (void)setRightView:(id)arg1;	// IMP=0x000189f5
- (id)rightView;	// IMP=0x000186e1
- (id)title;	// IMP=0x000186ec

@end

@interface ABUIBarButtonItem : ABUIBarItem
{
    NSString *_title;	// 4 = 0x4
    SEL _action;	// 8 = 0x8
    id _target;	// 12 = 0xc
    ABUIImage *_image;	// 16 = 0x10
    struct ABUIEdgeInsets _imageInsets;	// 20 = 0x14
    float _width;	// 36 = 0x24
    int _tag;	// 40 = 0x28
    struct {
        unsigned int enabled:1;
        unsigned int style:3;
    } _barButtonItemFlags;	// 44 = 0x2c
}

- (id)initWithTitle:(id)arg1 style:(int)arg2 target:(id)arg3 action:(SEL)arg4;	// IMP=0x00019970
- (id)initWithImage:(id)arg1 style:(int)arg2 target:(id)arg3 action:(SEL)arg4;	// IMP=0x00019b3f
- (void)dealloc;	// IMP=0x00019ae6
- (id)target;	// IMP=0x00019839
- (void)setTarget:(id)arg1;	// IMP=0x00019844
- (SEL)action;	// IMP=0x00019852
- (void)setAction:(SEL)arg1;	// IMP=0x0001985d
- (int)style;	// IMP=0x0001986b
- (void)setStyle:(int)arg1;	// IMP=0x0001987e
- (BOOL)isEnabled;	// IMP=0x00019898
- (void)setEnabled:(BOOL)arg1;	// IMP=0x000198a8
- (float)width;	// IMP=0x000198c0
- (void)setWidth:(float)arg1;	// IMP=0x000198cb
- (id)title;	// IMP=0x000198dd
- (void)setTitle:(id)arg1;	// IMP=0x00019aaa
- (id)image;	// IMP=0x000198e8
- (void)setImage:(id)arg1;	// IMP=0x00019a6c
- (struct ABUIEdgeInsets)imageInsets;	// IMP=0x000198f3
- (void)setImageInsets:(struct ABUIEdgeInsets)arg1;	// IMP=0x00019927
- (long)tag;	// IMP=0x00019957
- (void)setTag:(long)arg1;	// IMP=0x00019962

@end

@interface ABUIBarItem : NSObject
{
}

- (BOOL)isEnabled;	// IMP=0x00019b9d
- (void)setEnabled:(BOOL)arg1;	// IMP=0x00019ba7
- (id)title;	// IMP=0x00019bac
- (void)setTitle:(id)arg1;	// IMP=0x00019bb3
- (id)image;	// IMP=0x00019bb8
- (void)setImage:(id)arg1;	// IMP=0x00019bbf
- (struct ABUIEdgeInsets)imageInsets;	// IMP=0x00019bc4
- (void)setImageInsets:(struct ABUIEdgeInsets)arg1;	// IMP=0x00019bf9
- (long)tag;	// IMP=0x00019bfe
- (void)setTag:(long)arg1;	// IMP=0x00019c05

@end

@interface ABUINavigationController : ABUIViewController
{
    NSMutableArray *_viewControllers;	// 20 = 0x14
    id <ABUINavigationControllerDelegate> _delegate;	// 24 = 0x18
}

- (id)initWithRootViewController:(id)arg1;	// IMP=0x00019c28
- (void)dealloc;	// IMP=0x00019dcb
- (void)loadView;	// IMP=0x00019c0a
- (void)pushViewController:(id)arg1 animated:(BOOL)arg2;	// IMP=0x00019d0d
- (id)topViewController;	// IMP=0x00019cea
- (id)visibleViewController;	// IMP=0x00019cad
- (id)delegate;	// IMP=0x00019c0f
- (void)setDelegate:(id)arg1;	// IMP=0x00019c1a

@end

@interface ABImage : NSObject
{
}

+ (id)imageNamed:(id)arg1;	// IMP=0x0001a3fc
+ (id)imageWithData:(id)arg1;	// IMP=0x0001a47e
+ (id)imageWithCGImage:(struct CGImage *)arg1;	// IMP=0x0001a4cb
- (struct CGSize)size;	// IMP=0x00019e89
- (struct CGImage *)CGImage;	// IMP=0x00019e99
- (id)nsImage;	// IMP=0x00019ea0
- (id)imageData;	// IMP=0x00019ea7
- (id)stretchableImageWithLeftCapWidth:(long)arg1 topCapHeight:(long)arg2;	// IMP=0x00019eae
- (long)leftCapWidth;	// IMP=0x00019eb5
- (long)topCapHeight;	// IMP=0x00019ebc
- (void)drawInContext:(struct CGContext *)arg1 inRect:(struct CGRect)arg2 flipped:(BOOL)arg3;	// IMP=0x0001aea4
- (void)drawInContext:(struct CGContext *)arg1 inRect:(struct CGRect)arg2;	// IMP=0x0001a3b8

@end

@interface ABImageNinePartImage : ABImage
{
    ABImage *srcImage;	// 4 = 0x4
    int leftCapWidth;	// 8 = 0x8
    int topCapHeight;	// 12 = 0xc
    struct CGImage *topLeftCorner;	// 16 = 0x10
    struct CGImage *topEdgeFill;	// 20 = 0x14
    struct CGImage *topRightCorner;	// 24 = 0x18
    struct CGImage *leftEdgeFill;	// 28 = 0x1c
    struct CGImage *centerFill;	// 32 = 0x20
    struct CGImage *rightEdgeFill;	// 36 = 0x24
    struct CGImage *bottomLeftCorner;	// 40 = 0x28
    struct CGImage *bottomEdgeFill;	// 44 = 0x2c
    struct CGImage *bottomRightCorner;	// 48 = 0x30
}

- (void)dealloc;	// IMP=0x0001a518
- (void)drawInContext:(struct CGContext *)arg1 inRect:(struct CGRect)arg2 flipped:(BOOL)arg3;	// IMP=0x0001a9ce
- (void)drawInContext:(struct CGContext *)arg1 inRect:(struct CGRect)arg2;	// IMP=0x0001a2fd
- (id)initWithImage:(id)arg1 leftCapWidth:(long)arg2 topCapHeight:(long)arg3;	// IMP=0x0001a5bf
- (struct CGSize)size;	// IMP=0x0001a341
- (struct CGImage *)CGImage;	// IMP=0x0001a364
- (id)stretchableImageWithLeftCapWidth:(long)arg1 topCapHeight:(long)arg2;	// IMP=0x0001a387
- (long)leftCapWidth;	// IMP=0x00019e73
- (long)topCapHeight;	// IMP=0x00019e7e

@end

@interface ABConcreteImage : ABImage
{
    NSBitmapImageRep *bitmapRep;	// 4 = 0x4
    struct CGImage *CGImage;	// 8 = 0x8
}

- (id)init;	// IMP=0x00019ec3
- (id)initWithCGImage:(struct CGImage *)arg1;	// IMP=0x0001a2c6
- (id)initWithData:(id)arg1;	// IMP=0x0001a24b
- (void)dealloc;	// IMP=0x0001a1f2
- (struct CGSize)size;	// IMP=0x0001a192
- (struct CGImage *)CGImage;	// IMP=0x00019e5a
- (id)nsImage;	// IMP=0x0001a0da
- (id)imageData;	// IMP=0x0001a066
- (id)stretchableImageWithLeftCapWidth:(long)arg1 topCapHeight:(long)arg2;	// IMP=0x0001a00b
- (long)leftCapWidth;	// IMP=0x00019e65
- (long)topCapHeight;	// IMP=0x00019e6c
- (void)drawInContext:(struct CGContext *)arg1 inRect:(struct CGRect)arg2 flipped:(BOOL)arg3;	// IMP=0x00019f3a
- (void)drawInContext:(struct CGContext *)arg1 inRect:(struct CGRect)arg2;	// IMP=0x00019ef6

@end

@interface ABFileManager : NSObject
{
}

+ (id)createDirectoryIfNonExistent:(id)arg1;	// IMP=0x0001c11f
+ (id)directoryForSearchPath:(unsigned long)arg1;	// IMP=0x0001c3d6
+ (id)cachesDirectory;	// IMP=0x0001c1a7
+ (id)documentsDirectory;	// IMP=0x0001c1e6
+ (id)subCacheDirectory:(id)arg1;	// IMP=0x0001c225
+ (id)subDocumentsDirectory:(id)arg1;	// IMP=0x0001c275
+ (id)multipartPOSTDataDirectory;	// IMP=0x0001c2c5
+ (id)tweetieComposeAttachmentsDirectory;	// IMP=0x0001c2ec
+ (id)tweetieProfileImageCacheDirectory;	// IMP=0x0001c313
+ (id)databaseCacheDirectory;	// IMP=0x0001c33a
+ (id)miscCacheDirectory;	// IMP=0x0001c361
+ (id)applicationStateDirectory;	// IMP=0x0001c388
+ (id)storedStreamsDirectory;	// IMP=0x0001c3af

@end

@interface ABMutableMultiDictionary : NSObject <NSCoding, NSFastEnumeration>
{
    NSMutableDictionary *dictionary;	// 4 = 0x4
}

- (id)init;	// IMP=0x0001c4dc
- (void)dealloc;	// IMP=0x0001c83d
- (id)initWithCoder:(id)arg1;	// IMP=0x0001c7a4
- (void)encodeWithCoder:(id)arg1;	// IMP=0x0001c772
- (unsigned long)count;	// IMP=0x0001c74f
- (id)_mutableArrayForKey:(id)arg1;	// IMP=0x0001c6c0
- (id)objectsForKey:(id)arg1;	// IMP=0x0001c696
- (void)setObject:(id)arg1 forKey:(id)arg2;	// IMP=0x0001c650
- (void)addObject:(id)arg1 forKey:(id)arg2;	// IMP=0x0001c611
- (void)removeObject:(id)arg1 forKey:(id)arg2;	// IMP=0x0001c5d2
- (void)removeObjectsForKey:(id)arg1;	// IMP=0x0001c59a
- (unsigned long)countByEnumeratingWithState:(CDStruct_11f37819 *)arg1 objects:(id *)arg2 count:(unsigned long)arg3;	// IMP=0x0001c562
- (id)description;	// IMP=0x0001c53f

@end

@interface ABSimpleArchive : NSObject
{
}

+ (id)archivedDataWithRootObject:(id)arg1;	// IMP=0x0001d092
+ (id)unarchiveObjectWithData:(id)arg1;	// IMP=0x0001d2da

@end

@interface ABWeakProxy : ABProxy
{
}

+ (id)_weakProxyMap;	// IMP=0x00022b48
+ (id)proxyForObject:(id)arg1;	// IMP=0x00022d1f
+ (void)dissociateWeakProxyForObject:(id)arg1;	// IMP=0x00022e38
- (id)initWithObject:(id)arg1;	// IMP=0x00022936
- (void)dissociate;	// IMP=0x00022944
- (id)description;	// IMP=0x00022b13

@end

@interface ABWeakMap : NSObject
{
    NSMutableDictionary *dictionary;	// 4 = 0x4
}

- (id)init;	// IMP=0x00022ab0
- (void)dealloc;	// IMP=0x00022953
- (id)objectForKey:(id)arg1;	// IMP=0x00022a57
- (void)setObject:(id)arg1 forKey:(id)arg2;	// IMP=0x000229ea
- (void)removeObjectForKey:(id)arg1;	// IMP=0x000229a3
- (int)count;	// IMP=0x00022980

@end

@interface ABActiveTextRanges : NSObject
{
    NSArray *links;	// 4 = 0x4
    NSArray *hashtags;	// 8 = 0x8
    NSArray *usernames;	// 12 = 0xc
    NSArray *lists;	// 16 = 0x10
    NSArray *stockSymbols;	// 20 = 0x14
    NSArray *emailAddresses;	// 24 = 0x18
    NSArray *activeRanges;	// 28 = 0x1c
}

- (id)initWithString:(id)arg1;	// IMP=0x000241b5
- (void)dealloc;	// IMP=0x00024ca7
- (id)activeRanges;	// IMP=0x00023af2
- (id)emailAddresses;	// IMP=0x00023178
- (id)stockSymbols;	// IMP=0x00023183
- (id)lists;	// IMP=0x0002318e
- (id)usernames;	// IMP=0x00023199
- (id)hashtags;	// IMP=0x000231a4
- (id)links;	// IMP=0x000231af

@end

@interface ABFlavoredRange : NSObject <ABActiveTextRange>
{
    NSString *displayString;	// 4 = 0x4
    struct _NSRange rangeValue;	// 8 = 0x8
    int rangeFlavor;	// 16 = 0x10
}

+ (id)valueWithRange:(struct _NSRange)arg1;	// IMP=0x00023a8a
- (void)dealloc;	// IMP=0x00024119
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x00023a2f
- (id)description;	// IMP=0x0002415d
- (int)rangeFlavor;	// IMP=0x00023132
- (void)setRangeFlavor:(int)arg1;	// IMP=0x0002313d
- (id)displayString;	// IMP=0x0002314b
- (void)setDisplayString:(id)arg1;	// IMP=0x00023a4e
- (struct _NSRange)rangeValue;	// IMP=0x00023156
- (void)setRangeValue:(struct _NSRange)arg1;	// IMP=0x00023164

@end

@interface ABHTTPMultipartFormData : NSObject <NSCoding>
{
    NSMutableArray *parts;	// 4 = 0x4
    NSString *dataFile;	// 8 = 0x8
    int dataLength;	// 12 = 0xc
}

- (id)init;	// IMP=0x000253dc
- (void)dealloc;	// IMP=0x00025dd3
- (id)initWithCoder:(id)arg1;	// IMP=0x00025d07
- (void)encodeWithCoder:(id)arg1;	// IMP=0x00025cb0
- (void)addDataPart:(id)arg1 name:(id)arg2;	// IMP=0x00025c4a
- (void)addTextPart:(id)arg1 name:(id)arg2;	// IMP=0x00025c03
- (void)addImageFile:(id)arg1 name:(id)arg2;	// IMP=0x00025b7d
- (void)addVideoFile:(id)arg1 name:(id)arg2;	// IMP=0x00025af7
- (id)boundary;	// IMP=0x000253c7
- (id)contentTypeHeader;	// IMP=0x00025ab2
- (void)_writeData:(id)arg1 toFileHandle:(id)arg2;	// IMP=0x00025a6a
- (id)dataInputStream;	// IMP=0x000254a9
- (long)dataInputLength;	// IMP=0x000253d1
- (void)cleanup;	// IMP=0x0002543f

@end

@interface ABHTTPRequest : NSObject <NSCoding>
{
    NSURL *url;	// 4 = 0x4
    NSURL *finalURL;	// 8 = 0x8
    NSString *method;	// 12 = 0xc
    NSData *body;	// 16 = 0x10
    NSInputStream *bodyStream;	// 20 = 0x14
    ABMutableMultiDictionary *headers;	// 24 = 0x18
    ABHTTPMultipartFormData *multipartFormData;	// 28 = 0x1c
    NSString *username;	// 32 = 0x20
    NSString *password;	// 36 = 0x24
    NSString *oAuthConsumerKey;	// 40 = 0x28
    NSString *oAuthConsumerSecret;	// 44 = 0x2c
    NSString *oAuthToken;	// 48 = 0x30
    NSString *oAuthTokenSecret;	// 52 = 0x34
    long connectionTimeout;	// 56 = 0x38
    int maxRetries;	// 60 = 0x3c
    int retries;	// 64 = 0x40
    int autoRetries;	// 68 = 0x44
    ABCallback *responseCallback;	// 72 = 0x48
    ABCallback *progressCallback;	// 76 = 0x4c
    ABCallback *chunkCallback;	// 80 = 0x50
    int statusCode;	// 84 = 0x54
    NSMutableData *_data;	// 88 = 0x58
    NSError *error;	// 92 = 0x5c
    NSDictionary *responseHeaders;	// 96 = 0x60
    long long downloadContentLength;	// 100 = 0x64
    long long downloadedBytes;	// 108 = 0x6c
    long long uploadContentLength;	// 116 = 0x74
    long long uploadedBytes;	// 124 = 0x7c
    unsigned int _flags;	// 132 = 0x84
    int streamingState;	// 136 = 0x88
    int streamingBytesLeft;	// 140 = 0x8c
    NSMutableData *streamingBuffer;	// 144 = 0x90
    NSURLConnection *connection;	// 148 = 0x94
    double startTime;	// 152 = 0x98
    int networkStatus;	// 160 = 0xa0
}

+ (id)request;	// IMP=0x00026865
- (id)init;	// IMP=0x000267de
- (id)finalURL;	// IMP=0x000265cc
- (void)cancel;	// IMP=0x00027649
- (void)dealloc;	// IMP=0x00027470
- (id)initWithCoder:(id)arg1;	// IMP=0x000271cd
- (void)encodeWithCoder:(id)arg1;	// IMP=0x0002700b
- (void)addValue:(id)arg1 forHTTPHeaderField:(id)arg2;	// IMP=0x00026fda
- (void)setValue:(id)arg1 forHTTPHeaderField:(id)arg2;	// IMP=0x00026fa9
- (id)multipartFormData;	// IMP=0x000265e4
- (id)data;	// IMP=0x000265ef
- (void)setData:(id)arg1;	// IMP=0x00026f6d
- (void)setMultipartFormData:(id)arg1;	// IMP=0x00026e64
- (double)downloadProgress;	// IMP=0x000265fa
- (double)uploadProgress;	// IMP=0x00026666
- (void)startRequest;	// IMP=0x00026d8c
- (void)endRequest;	// IMP=0x00026c53
- (void)noteProgress;	// IMP=0x00026c2c
- (int)networkStatus;	// IMP=0x000266c7
- (double)startTime;	// IMP=0x000266d5
- (id)responseHeaders;	// IMP=0x000266e3
- (void)setResponseHeaders:(id)arg1;	// IMP=0x00026bf0
- (id)headers;	// IMP=0x000266ee
- (int)statusCode;	// IMP=0x000266f9
- (void)setStatusCode:(int)arg1;	// IMP=0x00026704
- (id)error;	// IMP=0x00026712
- (void)setError:(id)arg1;	// IMP=0x00026bb4
- (long)maxRetries;	// IMP=0x0002671d
- (void)setMaxRetries:(long)arg1;	// IMP=0x00026728
- (long)connectionTimeout;	// IMP=0x00026736
- (void)setConnectionTimeout:(long)arg1;	// IMP=0x00026741
- (id)chunkCallback;	// IMP=0x0002674f
- (void)setChunkCallback:(id)arg1;	// IMP=0x00026b78
- (id)progressCallback;	// IMP=0x0002675a
- (void)setProgressCallback:(id)arg1;	// IMP=0x00026b3c
- (id)responseCallback;	// IMP=0x00026765
- (void)setResponseCallback:(id)arg1;	// IMP=0x00026b00
- (id)oAuthTokenSecret;	// IMP=0x00026770
- (void)setOAuthTokenSecret:(id)arg1;	// IMP=0x00026ac4
- (id)oAuthToken;	// IMP=0x0002677b
- (void)setOAuthToken:(id)arg1;	// IMP=0x00026a88
- (id)oAuthConsumerSecret;	// IMP=0x00026786
- (void)setOAuthConsumerSecret:(id)arg1;	// IMP=0x00026a4c
- (id)oAuthConsumerKey;	// IMP=0x00026791
- (void)setOAuthConsumerKey:(id)arg1;	// IMP=0x00026a10
- (id)password;	// IMP=0x0002679c
- (void)setPassword:(id)arg1;	// IMP=0x000269d4
- (id)username;	// IMP=0x000267a7
- (void)setUsername:(id)arg1;	// IMP=0x00026998
- (id)bodyStream;	// IMP=0x000267b2
- (void)setBodyStream:(id)arg1;	// IMP=0x0002695c
- (id)body;	// IMP=0x000267bd
- (void)setBody:(id)arg1;	// IMP=0x00026920
- (id)method;	// IMP=0x000267c8
- (void)setMethod:(id)arg1;	// IMP=0x000268e4
- (id)url;	// IMP=0x000267d3
- (void)setUrl:(id)arg1;	// IMP=0x000268a8

@end

@interface ABNetworkCache : NSObject
{
}

+ (id)cachedDataForURL:(id)arg1 file:(id *)arg2;	// IMP=0x00027d07
+ (id)cachedDataForURL:(id)arg1;	// IMP=0x00027db1
+ (void)request:(id)arg1 callback:(id)arg2;	// IMP=0x00027eb9
+ (void)response:(id)arg1 info:(id)arg2;	// IMP=0x00027ddf

@end

@interface ABJSONParser : NSObject
{
    NSMutableArray *callbacks;	// 4 = 0x4
    BOOL canPushCallback;	// 8 = 0x8
    BOOL didPushCallback;	// 9 = 0x9
    NSString *key;	// 12 = 0xc
    int type;	// 16 = 0x10
    id value;	// 20 = 0x14
    NSDateFormatter *jsonTwitterDateFormatter;	// 24 = 0x18
    NSDateFormatter *httpLikeDateFormatter;	// 28 = 0x1c
}

+ (id)parseDataToPrimitives:(id)arg1;	// IMP=0x000283a4
+ (id)handleJSONObject:(id)arg1;	// IMP=0x000282c3
+ (void)parseArray:(id)arg1 info:(id)arg2;	// IMP=0x00028284
+ (void)parseDictionary:(id)arg1 info:(id)arg2;	// IMP=0x00028226
+ (void)parseToPrimitive:(id)arg1 info:(id)arg2;	// IMP=0x000281e7
+ (id)parseData:(id)arg1 withCallback:(id)arg2;	// IMP=0x00028179
- (id)init;	// IMP=0x00028116
- (void)dealloc;	// IMP=0x00028831
- (void)_triggerDelegate;	// IMP=0x000287f6
- (void)ignoreTag;	// IMP=0x000287a0
- (void)pushCallback:(id)arg1 repeatElement:(BOOL)arg2;	// IMP=0x00028742
- (void)_copyTopCallback;	// IMP=0x000286ff
- (void)_popCallback;	// IMP=0x000286dc
- (id)parseData:(id)arg1 withCallback:(id)arg2;	// IMP=0x00028587
- (id)stringValue;	// IMP=0x0002853c
- (id)boolValue;	// IMP=0x0002807b
- (id)numberValue;	// IMP=0x00028090
- (id)jsonTwitterDate;	// IMP=0x000284ce
- (id)httpLikeDate;	// IMP=0x00028460
- (BOOL)didPushCallback;	// IMP=0x000280a5
- (void)setDidPushCallback:(BOOL)arg1;	// IMP=0x000280b1
- (BOOL)canPushCallback;	// IMP=0x000280bf
- (void)setCanPushCallback:(BOOL)arg1;	// IMP=0x000280cb
- (id)value;	// IMP=0x000280d9
- (void)setValue:(id)arg1;	// IMP=0x000280e4
- (int)type;	// IMP=0x000280f2
- (void)setType:(int)arg1;	// IMP=0x000280fd
- (id)key;	// IMP=0x0002810b
- (void)setKey:(id)arg1;	// IMP=0x00028424

@end

@interface ABKeychain : NSObject
{
}

+ (id)setPassword:(id)arg1 forUsername:(id)arg2 serviceName:(id)arg3;	// IMP=0x0002b8f8
+ (id)passwordForUsername:(id)arg1 serviceName:(id)arg2 error:(id *)arg3;	// IMP=0x0002b8b6

@end

@interface OAuth : NSObject
{
}

+ (void)requestRequestToken:(id)arg1 consumerKey:(id)arg2 consumerSecret:(id)arg3 oAuthCallback:(id)arg4 callback:(id)arg5;	// IMP=0x0002bac1
+ (void)requestTokenResponse:(id)arg1 info:(id)arg2;	// IMP=0x0002bd8b
+ (void)requestAccessToken:(id)arg1 consumerKey:(id)arg2 consumerSecret:(id)arg3 unauthorizedToken:(id)arg4 unauthorizedSecret:(id)arg5 verifier:(id)arg6 callback:(id)arg7;	// IMP=0x0002bc0e
+ (void)requestAccessResponse:(id)arg1 info:(id)arg2;	// IMP=0x0002be03

@end

@interface ABMutableReference : NSObject
{
    id reference;	// 4 = 0x4
    BOOL retainsReference;	// 8 = 0x8
}

+ (id)retainedReference:(id)arg1;	// IMP=0x0002cce6
+ (id)nonRetainedReference:(id)arg1;	// IMP=0x0002cc94
- (id)initWithReference:(id)arg1 retainsReference:(BOOL)arg2;	// IMP=0x0002cc3f
- (void)dealloc;	// IMP=0x0002cd81
- (void)setReference:(id)arg1;	// IMP=0x0002cd38
- (id)reference;	// IMP=0x0002ca07

@end

@interface ABCallback : NSObject
{
    id target;	// 4 = 0x4
    SEL selector;	// 8 = 0x8
    id info;	// 12 = 0xc
}

+ (id)callbackWithTarget:(id)arg1 selector:(SEL)arg2 info:(id)arg3;	// IMP=0x0002ca82
- (id)initWithTarget:(id)arg1 selector:(SEL)arg2 info:(id)arg3;	// IMP=0x0002ca12
- (void)dealloc;	// IMP=0x0002cbe6
- (void)invoke:(id)arg1;	// IMP=0x0002cb8a
- (void)dissociateTarget;	// IMP=0x0002cb61
- (id)description;	// IMP=0x0002cada
- (id)info;	// IMP=0x0002c9e6
- (SEL)selector;	// IMP=0x0002c9f1
- (id)target;	// IMP=0x0002c9fc

@end

@interface ABDelayProxy : ABProxy
{
    double delay;	// 8 = 0x8
}

- (void)forwardInvocation:(id)arg1;	// IMP=0x0002cfda
- (void)performInvocationAfterDelay:(id)arg1;	// IMP=0x0002d029
- (double)delay;	// IMP=0x0002cdd6
- (void)setDelay:(double)arg1;	// IMP=0x0002cde1

@end

@interface ABMainThreadProxy : ABProxy
{
}

- (void)forwardInvocation:(id)arg1;	// IMP=0x0002cf22
- (void)performInvocationOnMainThread:(id)arg1;	// IMP=0x0002cf6d
- (id)description;	// IMP=0x0002cfa5

@end

@interface ABBackgroundProxy : ABProxy
{
    ABReturnProxy *returnProxy;	// 8 = 0x8
    int spinLock;	// 12 = 0xc
    BOOL invocationCount;	// 16 = 0x10
    BOOL hasReturnValue;	// 17 = 0x11
}

- (void)dealloc;	// IMP=0x0002d164
- (void)forwardInvocation:(id)arg1;	// IMP=0x0002d295
- (void)performInvocationInBackground:(id)arg1;	// IMP=0x0002d1a8

@end

@interface ABReturnProxy : NSObject
{
    ABCallback *callback;	// 4 = 0x4
}

- (void)dealloc;	// IMP=0x0002d109
- (id)callback:(id)arg1;	// IMP=0x0002ceba
- (void)returnValue:(id)arg1;	// IMP=0x0002cef8
- (void)cancel;	// IMP=0x0002d14d

@end

@interface ABProxy : NSObject
{
    id object;	// 4 = 0x4
}

+ (id)proxyForObject:(id)arg1;	// IMP=0x0002ce70
- (id)initWithObject:(id)arg1;	// IMP=0x0002cdf3
- (void)dealloc;	// IMP=0x0002d061
- (id)proxiedObject;	// IMP=0x0002cdcb
- (BOOL)respondsToSelector:(SEL)arg1;	// IMP=0x0002d0a5
- (void)forwardInvocation:(id)arg1;	// IMP=0x0002ce1c
- (id)methodSignatureForSelector:(SEL)arg1;	// IMP=0x0002ce46

@end

@interface ABCAAnimationCallbackDelegate : NSObject
{
    ABCallback *callback;	// 4 = 0x4
}

+ (id)delegateWithCallback:(id)arg1;	// IMP=0x0002d48b
- (id)initWithCallback:(id)arg1;	// IMP=0x0002d43c
- (void)dealloc;	// IMP=0x0002d4ff
- (void)animationDidStop:(id)arg1 finished:(BOOL)arg2;	// IMP=0x0002d4d5

@end

@interface RKLMatchEnumerator : NSEnumerator
{
    NSString *string;	// 4 = 0x4
    NSString *regex;	// 8 = 0x8
    unsigned int location;	// 12 = 0xc
}

- (id)initWithString:(id)arg1 regex:(id)arg2;	// IMP=0x00030166
- (id)nextObject;	// IMP=0x000301c3
- (void)dealloc;	// IMP=0x000302aa

@end

@interface ABGeocode : NSObject
{
    NSError *error;	// 4 = 0x4
    NSArray *geocodedLocations;	// 8 = 0x8
}

+ (void)geocode:(id)arg1 callback:(id)arg2;	// IMP=0x000306b7
- (void)dealloc;	// IMP=0x0003065e
- (void)parseXML:(id)arg1 info:(id)arg2;	// IMP=0x000309f1
- (void)geocodeResponse:(id)arg1 info:(id)arg2;	// IMP=0x0003090c
- (id)geocodedLocations;	// IMP=0x00030398
- (void)setGeocodedLocations:(id)arg1;	// IMP=0x000308d0
- (id)error;	// IMP=0x000303a3
- (void)setError:(id)arg1;	// IMP=0x00030894

@end

@interface ABGeocodeLocation : NSObject
{
    double latitude;	// 4 = 0x4
    double longitude;	// 12 = 0xc
    int accuracy;	// 20 = 0x14
    NSString *address;	// 24 = 0x18
}

- (void)dealloc;	// IMP=0x000303ae
- (void)parseXML:(id)arg1 info:(id)arg2;	// IMP=0x0003042e
- (double)accuracyInMeters;	// IMP=0x00030303
- (long)accuracy;	// IMP=0x0003033a
- (void)setAccuracy:(long)arg1;	// IMP=0x00030345
- (id)address;	// IMP=0x00030353
- (void)setAddress:(id)arg1;	// IMP=0x000303f2
- (double)longitude;	// IMP=0x0003035e
- (void)setLongitude:(double)arg1;	// IMP=0x00030369
- (double)latitude;	// IMP=0x0003037b
- (void)setLatitude:(double)arg1;	// IMP=0x00030386

@end

@interface ABLanguageTranslator : NSObject
{
    NSString *translatedText;	// 4 = 0x4
    NSError *error;	// 8 = 0x8
}

+ (id)apiKey;	// IMP=0x00030ae7
+ (id)apiRoot;	// IMP=0x00030af1
+ (void)translate:(id)arg1 from:(id)arg2 to:(id)arg3 callback:(id)arg4;	// IMP=0x00030caa
+ (void)translate:(id)arg1 from:(id)arg2 callback:(id)arg3;	// IMP=0x00030bb2
+ (void)translate:(id)arg1 callback:(id)arg2;	// IMP=0x00030c1c
- (void)dealloc;	// IMP=0x00030c51
- (void)translateResponse:(id)arg1 info:(id)arg2;	// IMP=0x00030ffe
- (void)parseJSON:(id)arg1 info:(id)arg2;	// IMP=0x00030b11
- (id)error;	// IMP=0x00030afb
- (void)setError:(id)arg1;	// IMP=0x00030fc2
- (id)translatedText;	// IMP=0x00030b06
- (void)setTranslatedText:(id)arg1;	// IMP=0x00030f86

@end

@interface FusionAd : NSObject
{
    NSString *text;	// 4 = 0x4
    NSURL *imageURL;	// 8 = 0x8
    NSURL *link;	// 12 = 0xc
    ABImage *image;	// 16 = 0x10
    struct {
        unsigned int loadingImage:1;
    } _flags;	// 20 = 0x14
}

- (void)dealloc;	// IMP=0x00031290
- (id)init;	// IMP=0x000315a4
- (void)adResponse:(id)arg1 info:(id)arg2;	// IMP=0x000314b8
- (id)image;	// IMP=0x00031457
- (void)imageResponse:(id)arg1 info:(id)arg2;	// IMP=0x000313c7
- (void)parseAdXML_1_0:(id)arg1 info:(id)arg2;	// IMP=0x000310f3
- (id)link;	// IMP=0x000310d2
- (void)setLink:(id)arg1;	// IMP=0x0003138b
- (id)imageURL;	// IMP=0x000310dd
- (void)setImageURL:(id)arg1;	// IMP=0x0003134f
- (id)text;	// IMP=0x000310e8
- (void)setText:(id)arg1;	// IMP=0x00031313

@end

@interface GeoRSSPoint : NSObject <NSCoding>
{
    BOOL didDecodePoint;	// 4 = 0x4
    double latitude;	// 8 = 0x8
    double longitude;	// 16 = 0x10
}

+ (id)geoPointWithDictionary:(id)arg1;	// IMP=0x00031a63
- (void)parseDictionary:(id)arg1;	// IMP=0x00031ac7
- (id)initWithCoder:(id)arg1;	// IMP=0x00031b70
- (void)encodeWithCoder:(id)arg1;	// IMP=0x000319c3
- (void)dealloc;	// IMP=0x00031dac
- (id)parseXMLCallback;	// IMP=0x00031ed9
- (id)parseJSONCallback;	// IMP=0x00031eb2
- (void)parseXML:(id)arg1 info:(id)arg2;	// IMP=0x00031bd6
- (void)parseJSON:(id)arg1 info:(id)arg2;	// IMP=0x00031dd9
- (void)parseJSONCoordinates:(id)arg1 info:(id)arg2;	// IMP=0x00031cfe
- (id)title;	// IMP=0x00031a20
- (BOOL)didDecodePoint;	// IMP=0x0003197d
- (double)longitude;	// IMP=0x00031989
- (void)setLongitude:(double)arg1;	// IMP=0x00031994
- (double)latitude;	// IMP=0x000319a6
- (void)setLatitude:(double)arg1;	// IMP=0x000319b1

@end

@interface GoogleStaticMap : NSObject
{
}

+ (id)apiKey;	// IMP=0x00031f00
+ (id)mapImageURLForLatitude:(double)arg1 longitude:(double)arg2 width:(int)arg3 height:(int)arg4;	// IMP=0x00031f0a

@end

@interface Instapaper : LinkQueue
{
}

+ (id)defaultLinkQueueName;	// IMP=0x0003261f
+ (id)defaultLinkQueueURLString;	// IMP=0x0003266b
+ (id)defaultLinkQueueLoginTitle;	// IMP=0x000326b7
+ (id)defaultLinkQueueLoginPlaceholder;	// IMP=0x00032703
+ (id)defaultLinkQueuePasswordPlaceholder;	// IMP=0x0003274f
- (long)defaultsIntegerValue;	// IMP=0x000325b0
- (void)verifyCredentials:(id)arg1;	// IMP=0x0003279b
- (void)verifyCredentialsResponse:(id)arg1 info:(id)arg2;	// IMP=0x000325b7
- (void)addURL:(id)arg1 summary:(id)arg2 status:(id)arg3 callback:(id)arg4;	// IMP=0x000328e2
- (void)addURLResponse:(id)arg1 info:(id)arg2;	// IMP=0x00032aec

@end

@interface LinkQueue : NSObject
{
    NSString *username;	// 4 = 0x4
    NSString *password;	// 8 = 0x8
}

+ (Class)preferredLinkQueueClass;	// IMP=0x00032e34
+ (id)defaultLinkQueue;	// IMP=0x00032d29
+ (id)defaultLinkQueueName;	// IMP=0x00032cf8
+ (id)defaultLinkQueueURLString;	// IMP=0x00032cc7
+ (id)defaultLinkQueueLoginTitle;	// IMP=0x00032c96
+ (id)defaultLinkQueueLoginPlaceholder;	// IMP=0x00032c65
+ (id)defaultLinkQueuePasswordPlaceholder;	// IMP=0x00032c34
- (id)initWithUsername:(id)arg1 password:(id)arg2;	// IMP=0x00032bcc
- (void)dealloc;	// IMP=0x00032f73
- (void)verifyCredentials:(id)arg1;	// IMP=0x00032bb8
- (void)addURL:(id)arg1 summary:(id)arg2 status:(id)arg3 callback:(id)arg4;	// IMP=0x00032bbd
- (long)defaultsIntegerValue;	// IMP=0x00032bc2
- (void)saveAsDefault;	// IMP=0x00032e95

@end

@interface ReadItLater : LinkQueue
{
}

+ (id)defaultLinkQueueName;	// IMP=0x000330ba
+ (id)defaultLinkQueueURLString;	// IMP=0x00033106
+ (id)defaultLinkQueueLoginTitle;	// IMP=0x00033152
+ (id)defaultLinkQueueLoginPlaceholder;	// IMP=0x00032fd6
+ (id)defaultLinkQueuePasswordPlaceholder;	// IMP=0x00032fe0
- (long)defaultsIntegerValue;	// IMP=0x00032fcc
- (void)verifyCredentials:(id)arg1;	// IMP=0x0003319e
- (void)verifyCredentialsResponse:(id)arg1 info:(id)arg2;	// IMP=0x00032fea
- (void)addURL:(id)arg1 summary:(id)arg2 status:(id)arg3 callback:(id)arg4;	// IMP=0x00033306
- (void)addURLResponse:(id)arg1 info:(id)arg2;	// IMP=0x00033052

@end

@interface Tagalus : NSObject
{
    NSString *hashtag;	// 4 = 0x4
    NSString *definition;	// 8 = 0x8
    NSError *error;	// 12 = 0xc
}

+ (id)_hashtag:(id)arg1;	// IMP=0x000335c8
+ (void)define:(id)arg1 callback:(id)arg2;	// IMP=0x000338e8
+ (id)apiKey;	// IMP=0x00033628
+ (void)define:(id)arg1 as:(id)arg2;	// IMP=0x0003371d
+ (void)defineDefinitionResponse:(id)arg1 info:(id)arg2;	// IMP=0x00033690
- (void)dealloc;	// IMP=0x000336af
- (void)defineResponse:(id)arg1 info:(id)arg2;	// IMP=0x00033ac8
- (void)parseJSON:(id)arg1 info:(id)arg2;	// IMP=0x00033539
- (id)error;	// IMP=0x00033518
- (void)setError:(id)arg1;	// IMP=0x00033a8c
- (id)definition;	// IMP=0x00033523
- (void)setDefinition:(id)arg1;	// IMP=0x00033a50
- (id)hashtag;	// IMP=0x0003352e
- (void)setHashtag:(id)arg1;	// IMP=0x00033a14

@end

@interface EmberImageService : ABImageService
{
}

+ (id)apiKey;	// IMP=0x00033d34
+ (void)requestUserTokenForUsername:(id)arg1 password:(id)arg2 callback:(id)arg3;	// IMP=0x000366e9
+ (void)requestUserTokenResponse:(id)arg1 info:(id)arg2;	// IMP=0x00036895
+ (void)parseEmberUserToken:(id)arg1 info:(id)arg2;	// IMP=0x000353a6
- (void)postImage:(id)arg1 associatedMessage:(id)arg2 fromAccount:(id)arg3 callback:(id)arg4;	// IMP=0x00036566
- (void)didPostImage:(id)arg1 info:(id)arg2;	// IMP=0x0003534a

@end

@interface CustomImageService : TwitPicCompatibleImageService
{
}

- (id)apiRoot;	// IMP=0x0003530c
- (id)messageParameterName;	// IMP=0x00033d2a

@end

@interface Pikchur : TwitPicCompatibleImageService
{
}

+ (id)fullSizeImageURLForURL:(id)arg1;	// IMP=0x00035228
+ (id)thumbnailImageURLForURL:(id)arg1;	// IMP=0x0003529a
- (id)apiRoot;	// IMP=0x00033d0c
- (id)apiKey;	// IMP=0x00033d16
- (id)apiKeyParameterName;	// IMP=0x00033d20

@end

@interface TweetPhoto : TwitPicCompatibleImageService
{
}

+ (id)thumbnailImageURLForURL:(id)arg1;	// IMP=0x00035162
+ (id)fullSizeImageURLForURL:(id)arg1;	// IMP=0x000351c5
- (id)OAuthEchoServiceProvider;	// IMP=0x00033cd5
- (void)addMoarStuff:(id)arg1;	// IMP=0x00033cdf
- (id)apiRoot;	// IMP=0x00033ce4
- (id)apiKeyParameterName;	// IMP=0x00033cee
- (id)apiKey;	// IMP=0x00033cf8
- (id)mediaURLResponseTag;	// IMP=0x00033d02

@end

@interface Mobypicture : ABImageService
{
}

+ (id)adjustedImageURLForURL:(id)arg1 insertPath:(id)arg2;	// IMP=0x0003508a
+ (id)fullSizeImageURLForURL:(id)arg1;	// IMP=0x00035106
+ (id)thumbnailImageURLForURL:(id)arg1;	// IMP=0x00035134
- (id)apiRoot;	// IMP=0x00033cb7
- (id)apiKey;	// IMP=0x00033cc1
- (id)OAuthEchoServiceProvider;	// IMP=0x00033ccb
- (void)_postMedia:(id)arg1 associatedMessage:(id)arg2 fromAccount:(id)arg3 callback:(id)arg4;	// IMP=0x00036181
- (void)postImage:(id)arg1 associatedMessage:(id)arg2 fromAccount:(id)arg3 callback:(id)arg4;	// IMP=0x00034f70
- (void)postVideo:(id)arg1 associatedMessage:(id)arg2 fromAccount:(id)arg3 callback:(id)arg4;	// IMP=0x00034fab
- (void)didPostMedia:(id)arg1 info:(id)arg2;	// IMP=0x00036413
- (void)parseMobyXML:(id)arg1 info:(id)arg2;	// IMP=0x00034fe6

@end

@interface PixIm : TwitPicCompatibleImageService
{
}

+ (id)fullSizeImageURLForURL:(id)arg1;	// IMP=0x00034eaa
+ (id)thumbnailImageURLForURL:(id)arg1;	// IMP=0x00034f0d
- (id)apiRoot;	// IMP=0x00033c99
- (id)mediaParameterName;	// IMP=0x00033ca3
- (id)mediaURLResponseTag;	// IMP=0x00033cad

@end

@interface ImgLy : TwitPicCompatibleImageService
{
}

+ (id)adjustedImageURLForURL:(id)arg1 insertPath:(id)arg2;	// IMP=0x00034dd5
+ (id)fullSizeImageURLForURL:(id)arg1;	// IMP=0x00034e4e
+ (id)thumbnailImageURLForURL:(id)arg1;	// IMP=0x00034e7c
- (id)apiRoot;	// IMP=0x00033c8f

@end

@interface Posterous : TwitPicCompatibleImageService
{
}

- (id)apiRoot;	// IMP=0x00033c5d
- (id)messageParameterName;	// IMP=0x00033c67
- (id)mediaURLResponseTag;	// IMP=0x00033c71
- (BOOL)useOAuthEcho;	// IMP=0x00033c7b
- (id)OAuthEchoServiceProvider;	// IMP=0x00033c85

@end

@interface Twitgoo : TwitPicCompatibleImageService
{
}

+ (id)fullSizeImageURLForURL:(id)arg1;	// IMP=0x00034d0f
+ (id)thumbnailImageURLForURL:(id)arg1;	// IMP=0x00034d72
- (id)apiRoot;	// IMP=0x00033c53

@end

@interface yFrog : TwitPicCompatibleImageService
{
}

+ (id)fullSizeImageURLForURL:(id)arg1;	// IMP=0x00034c49
+ (id)thumbnailImageURLForURL:(id)arg1;	// IMP=0x00034cac
- (id)apiKey;	// IMP=0x00033c2b
- (id)apiRoot;	// IMP=0x00033c35
- (BOOL)useOAuthEcho;	// IMP=0x00033c3f
- (id)OAuthEchoServiceProvider;	// IMP=0x00033c49

@end

@interface TwitPic : TwitPicCompatibleImageService
{
}

+ (id)adjustedImageURLForURL:(id)arg1 insertPath:(id)arg2;	// IMP=0x00034b74
+ (id)fullSizeImageURLForURL:(id)arg1;	// IMP=0x00034bed
+ (id)thumbnailImageURLForURL:(id)arg1;	// IMP=0x00034c1b
- (id)apiRoot;	// IMP=0x00033bef
- (id)messageParameterName;	// IMP=0x00033bf9
- (id)apiKey;	// IMP=0x00033c03
- (id)apiKeyParameterName;	// IMP=0x00033c0d
- (id)mediaURLResponseTag;	// IMP=0x00033c17
- (BOOL)useOAuthEcho;	// IMP=0x00033c21

@end

@interface TwitPicCompatibleImageService : ABImageService
{
}

+ (id)identifierForURL:(id)arg1 base:(id)arg2;	// IMP=0x00034b05
- (id)apiRoot;	// IMP=0x00033d6c
- (id)apiKey;	// IMP=0x00033b9c
- (id)apiKeyParameterName;	// IMP=0x00033ba3
- (id)mediaParameterName;	// IMP=0x00033bad
- (id)mediaURLResponseTag;	// IMP=0x00033bb7
- (id)messageParameterName;	// IMP=0x00033bc1
- (BOOL)useBasicAuth;	// IMP=0x00033bc8
- (BOOL)useOAuthEcho;	// IMP=0x00033bcf
- (id)OAuthEchoServiceProvider;	// IMP=0x00033bd9
- (id)OAuthEchoAuthorizationHeaderForAccount:(id)arg1;	// IMP=0x0003556c
- (void)addMoarStuff:(id)arg1;	// IMP=0x00033be3
- (BOOL)OAuthEchoInPOST;	// IMP=0x00033be8
- (void)postImage:(id)arg1 associatedMessage:(id)arg2 fromAccount:(id)arg3 callback:(id)arg4;	// IMP=0x000358d8
- (void)postVideo:(id)arg1 associatedMessage:(id)arg2 fromAccount:(id)arg3 callback:(id)arg4;	// IMP=0x00035c4f
- (void)didPostImage:(id)arg1 info:(id)arg2;	// IMP=0x00036014
- (void)parseYFrogXML:(id)arg1 info:(id)arg2;	// IMP=0x00034a4f

@end

@interface ABImageService : NSObject
{
}

+ (id)service;	// IMP=0x00033d85
+ (id)fullSizeImageURLForURL:(id)arg1;	// IMP=0x00033dc8
+ (id)thumbnailImageURLForURL:(id)arg1;	// IMP=0x00033f55
+ (BOOL)isImageServiceLink:(id)arg1;	// IMP=0x000340bf
+ (BOOL)entitiesMightContainMedia:(id)arg1;	// IMP=0x0003559a
+ (BOOL)stringMightContainMedia:(id)arg1;	// IMP=0x000341d0
+ (id)isVideoServiceLink:(id)arg1;	// IMP=0x00034384
+ (BOOL)isMediaLink:(id)arg1;	// IMP=0x00034426
+ (BOOL)isHotLink:(id)arg1;	// IMP=0x00034478
+ (BOOL)isYFrogImageLink:(id)arg1;	// IMP=0x0003450f
+ (BOOL)isTwitPicLink:(id)arg1;	// IMP=0x000345fe
+ (BOOL)isTwitgooLink:(id)arg1;	// IMP=0x00034697
+ (BOOL)isImglyLink:(id)arg1;	// IMP=0x000346b2
+ (BOOL)isPixImLink:(id)arg1;	// IMP=0x000346cd
+ (BOOL)isTweetphotoLink:(id)arg1;	// IMP=0x000346e8
+ (BOOL)isPikchurLink:(id)arg1;	// IMP=0x00034703
+ (BOOL)isMobypictureLink:(id)arg1;	// IMP=0x0003471e
+ (id)currentService;	// IMP=0x00034739
+ (long)approximateImageLinkLength;	// IMP=0x00034837
+ (long)approximateVideoLinkLength;	// IMP=0x00034918
+ (void)postImage:(id)arg1 associatedMessage:(id)arg2 fromAccount:(id)arg3 callback:(id)arg4;	// IMP=0x00034938
+ (id)currentVideoService;	// IMP=0x00034985
+ (void)postVideo:(id)arg1 associatedMessage:(id)arg2 fromAccount:(id)arg3 callback:(id)arg4;	// IMP=0x00034a02
- (void)postImage:(id)arg1 associatedMessage:(id)arg2 fromAccount:(id)arg3 callback:(id)arg4;	// IMP=0x00033d3e
- (void)postVideo:(id)arg1 associatedMessage:(id)arg2 fromAccount:(id)arg3 callback:(id)arg4;	// IMP=0x00033d55

@end

@interface VodPod : TwitPicCompatibleImageService
{
}

- (id)apiRoot;	// IMP=0x000369f8
- (id)OAuthEchoServiceProvider;	// IMP=0x00036a02
- (id)messageParameterName;	// IMP=0x00036a0c
- (BOOL)OAuthEchoInPOST;	// IMP=0x00036a16

@end

@interface Vidly : TwitPicCompatibleImageService
{
}

- (id)apiRoot;	// IMP=0x000369c6
- (id)mediaParameterName;	// IMP=0x000369d0
- (id)mediaURLResponseTag;	// IMP=0x000369da
- (id)messageParameterName;	// IMP=0x000369e4
- (BOOL)useBasicAuth;	// IMP=0x000369ee

@end

@interface TwitVid : ABImageService
{
}

- (void)authenticateWithAccount:(id)arg1 callback:(id)arg2;	// IMP=0x00036c82
- (id)parseAuthenticationData:(id)arg1;	// IMP=0x00036df0
- (void)parseAuthenticationXML:(id)arg1 info:(id)arg2;	// IMP=0x00036a20
- (void)authenticateResponse:(id)arg1 info:(id)arg2;	// IMP=0x00036ac4
- (void)_postVideo:(id)arg1 message:(id)arg2 callback:(id)arg3;	// IMP=0x00036eb1
- (id)parseVideoResponse:(id)arg1;	// IMP=0x00037042
- (void)parseVideoResponseXML:(id)arg1 info:(id)arg2;	// IMP=0x00036b51
- (void)postVideoResponse:(id)arg1 info:(id)arg2;	// IMP=0x00036bf5
- (void)postVideo:(id)arg1 associatedMessage:(id)arg2 fromAccount:(id)arg3 callback:(id)arg4;	// IMP=0x0003711f
- (void)postVideoAuthenticationResponse:(id)arg1 info:(id)arg2;	// IMP=0x000371e5

@end

@interface FollowCost : NSObject
{
    id <FollowCostDelegate> delegate;	// 4 = 0x4
    BOOL loading;	// 8 = 0x8
    TwitterUser *user;	// 12 = 0xc
    NSString *averageTweetsPerDay;	// 16 = 0x10
    NSString *averageTweetsPerDayRecently;	// 20 = 0x14
    NSString *atReplyIndex;	// 24 = 0x18
    NSString *goldenIndex;	// 28 = 0x1c
    NSString *politicalIndex;	// 32 = 0x20
}

- (void)_load;	// IMP=0x0003754b
- (void)_didLoad:(id)arg1 info:(id)arg2;	// IMP=0x00037640
- (id)initWithTwitterUser:(id)arg1;	// IMP=0x00037736
- (void)dealloc;	// IMP=0x000378c2
- (void)parseJSON:(id)arg1 info:(id)arg2;	// IMP=0x000373c8
- (id)politicalIndex;	// IMP=0x0003736c
- (void)setPoliticalIndex:(id)arg1;	// IMP=0x00037886
- (id)goldenIndex;	// IMP=0x00037377
- (void)setGoldenIndex:(id)arg1;	// IMP=0x0003784a
- (id)atReplyIndex;	// IMP=0x00037382
- (void)setAtReplyIndex:(id)arg1;	// IMP=0x0003780e
- (id)averageTweetsPerDayRecently;	// IMP=0x0003738d
- (void)setAverageTweetsPerDayRecently:(id)arg1;	// IMP=0x000377d2
- (id)averageTweetsPerDay;	// IMP=0x00037398
- (void)setAverageTweetsPerDay:(id)arg1;	// IMP=0x00037796
- (BOOL)loading;	// IMP=0x000373a3
- (id)delegate;	// IMP=0x000373af
- (void)setDelegate:(id)arg1;	// IMP=0x000373ba

@end

@interface StatusIDSync : NSObject
{
}

+ (void)setValue:(id)arg1 forKey:(id)arg2;	// IMP=0x00037a87
+ (void)setResponse:(id)arg1 info:(id)arg2;	// IMP=0x00037a2b
+ (void)requestValueForKey:(id)arg1 callback:(id)arg2;	// IMP=0x00037cb9
+ (void)requestResponse:(id)arg1 info:(id)arg2;	// IMP=0x00037dd5
+ (void)parseResponseXML:(id)arg1 info:(id)arg2;	// IMP=0x00037980

@end

@interface TListsPerson : TwitterUser
{
    float tweetsPerDay;	// 84 = 0x54
}

- (void)parseSearchTweeter:(id)arg1 info:(id)arg2;	// IMP=0x0003839a
- (float)tweetsPerDay;	// IMP=0x00037f50
- (void)setTweetsPerDay:(float)arg1;	// IMP=0x00037f5b

@end

@interface TLists : NSObject
{
}

+ (void)searchTweeters:(id)arg1 page:(id)arg2 callback:(id)arg3;	// IMP=0x00037f6d
+ (void)searchTweetersResponse:(id)arg1 info:(id)arg2;	// IMP=0x0003829a
+ (void)parseSearchTweetersJSON:(id)arg1 info:(id)arg2;	// IMP=0x0003812f
+ (void)parseSearchTweeterJSON:(id)arg1 info:(id)arg2;	// IMP=0x000381e2

@end

@interface TweetBlocker : NSObject
{
    id <TweetBlockerDelegate> delegate;	// 4 = 0x4
    TwitterUser *user;	// 8 = 0x8
    BOOL loading;	// 12 = 0xc
    NSString *score;	// 16 = 0x10
    NSString *grade;	// 20 = 0x14
    NSURL *gradeImageURL;	// 24 = 0x18
}

- (id)apiRoot;	// IMP=0x00038457
- (id)apiKey;	// IMP=0x00038461
- (void)_loadRating;	// IMP=0x000385f2
- (void)reportSpammer;	// IMP=0x00038735
- (void)reportSpamResponse:(id)arg1 info:(id)arg2;	// IMP=0x0003846b
- (void)_loadRatingResponse:(id)arg1 info:(id)arg2;	// IMP=0x0003881e
- (id)initWithTwitterUser:(id)arg1;	// IMP=0x000388fb
- (void)dealloc;	// IMP=0x00038a0f
- (void)parseJSON:(id)arg1 info:(id)arg2;	// IMP=0x000384b6
- (id)gradeImageURL;	// IMP=0x00038470
- (void)setGradeImageURL:(id)arg1;	// IMP=0x000389d3
- (id)score;	// IMP=0x0003847b
- (void)setScore:(id)arg1;	// IMP=0x00038997
- (id)grade;	// IMP=0x00038486
- (void)setGrade:(id)arg1;	// IMP=0x0003895b
- (BOOL)loading;	// IMP=0x00038491
- (id)delegate;	// IMP=0x0003849d
- (void)setDelegate:(id)arg1;	// IMP=0x000384a8

@end

@interface Tweetshrink : NSObject
{
    int difference;	// 4 = 0x4
    NSString *text;	// 8 = 0x8
}

+ (void)shrink:(id)arg1 callback:(id)arg2;	// IMP=0x00038cc8
+ (void)didShrink:(id)arg1 info:(id)arg2;	// IMP=0x00038bc4
- (void)dealloc;	// IMP=0x00038b80
- (void)parseXML:(id)arg1 info:(id)arg2;	// IMP=0x00038aa8
- (int)difference;	// IMP=0x00038a92
- (id)text;	// IMP=0x00038a9d
- (void)setText:(id)arg1;	// IMP=0x00038e2b

@end

@interface CustomURLShorteningService : URLShorteningService
{
}

- (id)apiEndpoint;	// IMP=0x00039bec
- (void)shortenURLString:(id)arg1 callback:(id)arg2;	// IMP=0x0003abe3
- (void)shortenURLResponse:(id)arg1 info:(id)arg2;	// IMP=0x00039c2a

@end

@interface DiggBarShortener : URLShorteningService
{
}

- (void)shortenURLString:(id)arg1 callback:(id)arg2;	// IMP=0x0003a948
- (void)shortenURLResponse:(id)arg1 info:(id)arg2;	// IMP=0x0003aaaa
- (void)parseShortenXML:(id)arg1 info:(id)arg2;	// IMP=0x00039b41

@end

@interface LongURLShortener : URLShorteningService
{
}

- (void)expandURLString:(id)arg1 callback:(id)arg2;	// IMP=0x0003a6ac
- (void)expandURLResponse:(id)arg1 info:(id)arg2;	// IMP=0x0003a80f
- (void)parseExpandJSON:(id)arg1 info:(id)arg2;	// IMP=0x00039a9d

@end

@interface TrImShortener : URLShorteningService
{
}

- (void)shortenURLString:(id)arg1 callback:(id)arg2;	// IMP=0x0003a56b
- (void)shortenURLResponse:(id)arg1 info:(id)arg2;	// IMP=0x000399b5

@end

@interface IsGdShortener : URLShorteningService
{
}

- (void)shortenURLString:(id)arg1 callback:(id)arg2;	// IMP=0x0003a42a
- (void)shortenURLResponse:(id)arg1 info:(id)arg2;	// IMP=0x000398fc

@end

@interface LinkyyShortener : TinyURLCompatibleShortener
{
}

- (id)apiRoot;	// IMP=0x00039290

@end

@interface UNUShortener : TinyURLCompatibleShortener
{
}

- (id)apiRoot;	// IMP=0x00039286

@end

@interface TinyURLShortener : TinyURLCompatibleShortener
{
}

- (id)apiRoot;	// IMP=0x0003927c

@end

@interface TinyURLCompatibleShortener : URLShorteningService
{
}

+ (id)parseTinyURLResponseData:(id)arg1;	// IMP=0x00039841
- (id)apiRoot;	// IMP=0x00039275
- (void)shortenURLString:(id)arg1 callback:(id)arg2;	// IMP=0x0003a2d6
- (void)shortenURLResponse:(id)arg1 info:(id)arg2;	// IMP=0x000397b1

@end

@interface LinkSpreaderShortener : BitlyCompatibleShorteningService
{
}

- (id)apiKey;	// IMP=0x0003924d
- (id)apiRoot;	// IMP=0x00039257
- (id)apikeyParameterName;	// IMP=0x00039261
- (id)longurlParameterName;	// IMP=0x0003926b

@end

@interface BitlyShortener : BitlyCompatibleShorteningService
{
}

- (id)login;	// IMP=0x000396e1
- (id)apiKey;	// IMP=0x00039749
- (id)apiRoot;	// IMP=0x00039239
- (BOOL)addBitlyParameters;	// IMP=0x00039243

@end

@interface BitlyCompatibleShorteningService : URLShorteningService
{
}

+ (id)parseBitlyResponseData:(id)arg1;	// IMP=0x0003a223
+ (void)parseShortenJSON:(id)arg1 info:(id)arg2;	// IMP=0x0003961f
- (id)apiKey;	// IMP=0x00039209
- (id)login;	// IMP=0x00039210
- (id)apiRoot;	// IMP=0x00039217
- (id)apikeyParameterName;	// IMP=0x0003921e
- (id)longurlParameterName;	// IMP=0x00039228
- (BOOL)addBitlyParameters;	// IMP=0x00039232
- (void)shortenURLString:(id)arg1 callback:(id)arg2;	// IMP=0x00039f74
- (void)shortenURLResponse:(id)arg1 info:(id)arg2;	// IMP=0x0003958f

@end

@interface TCOURLShortener : URLShorteningService
{
}

- (void)shortenURLString:(id)arg1 fromAccount:(id)arg2 callback:(id)arg3;	// IMP=0x00039550

@end

@interface URLShorteningService : NSObject
{
}

+ (id)shortener;	// IMP=0x000392df
+ (id)currentService;	// IMP=0x00039322
+ (BOOL)isShortURLString:(id)arg1;	// IMP=0x00039344
+ (void)shortenURLString:(id)arg1 callback:(id)arg2;	// IMP=0x0003946f
+ (void)shortenURLString:(id)arg1 fromAccount:(id)arg2 callback:(id)arg3;	// IMP=0x000394a4
+ (void)expandURLString:(id)arg1 callback:(id)arg2;	// IMP=0x00039d02
+ (void)expandURLResponse:(id)arg1 info:(id)arg2;	// IMP=0x00039e43
+ (void)parseLongURLPleaseJSON:(id)arg1 info:(id)arg2;	// IMP=0x000394ea
- (void)shortenURLString:(id)arg1 callback:(id)arg2;	// IMP=0x0003929a
- (void)shortenURLString:(id)arg1 fromAccount:(id)arg2 callback:(id)arg3;	// IMP=0x000392b1
- (void)expandURLString:(id)arg1 callback:(id)arg2;	// IMP=0x000392c8

@end

@interface TwitterAPI : NSObject
{
    NSString *apiRoot;	// 4 = 0x4
    TwitterAccount *authenticateWithAccount;	// 8 = 0x8
    ABCallback *responseCallback;	// 12 = 0xc
}

+ (id)requestWithAPIRoot:(id)arg1 callback:(id)arg2;	// IMP=0x00046678
+ (id)authenticatedRequestWithAPIRoot:(id)arg1 account:(id)arg2 callback:(id)arg3;	// IMP=0x0004660e
- (id)initWithAccount:(id)arg1 apiRoot:(id)arg2 callback:(id)arg3;	// IMP=0x0004658d
- (void)dealloc;	// IMP=0x000466e3

@end

@interface TwitterSearchAPI : NSObject
{
    NSString *apiRoot;	// 4 = 0x4
    ABCallback *responseCallback;	// 8 = 0x8
}

+ (id)requestWithAPIRoot:(id)arg1 callback:(id)arg2;	// IMP=0x000467ce
- (id)initWithAPIRoot:(id)arg1 callback:(id)arg2;	// IMP=0x00046766
- (void)dealloc;	// IMP=0x00046ca1
- (id)apiRoot;	// IMP=0x00046751
- (void)search:(id)arg1 count:(id)arg2 page:(id)arg3 sinceID:(id)arg4 geocode:(id)arg5 via:(id)arg6;	// IMP=0x000468f6
- (void)searchResponse:(id)arg1 info:(id)arg2;	// IMP=0x00046822

@end

@interface Twitter : NSObject <NSCoding>
{
    NSMutableArray *accounts;	// 4 = 0x4
    TwitterAccount *duckie;	// 8 = 0x8
    NSTimer *scribeTimer;	// 12 = 0xc
    NSTimer *heartbeatTimer;	// 16 = 0x10
    NSTimer *cachePruningTimer;	// 20 = 0x14
    double clockDelta;	// 24 = 0x18
}

+ (id)sharedTwitter;	// IMP=0x000470b4
- (void)heartbeat:(id)arg1;	// IMP=0x00046d27
- (void)pruneCaches:(id)arg1;	// IMP=0x000470f6
- (id)init;	// IMP=0x000481f9
- (id)initWithCoder:(id)arg1;	// IMP=0x00048000
- (void)encodeWithCoder:(id)arg1;	// IMP=0x00046d81
- (void)dealloc;	// IMP=0x00047d1b
- (void)saveStreams;	// IMP=0x00047200
- (void)shutdown;	// IMP=0x00046cfa
- (id)accounts;	// IMP=0x00046cff
- (void)signInWithUsername:(id)arg1 password:(id)arg2 callback:(id)arg3;	// IMP=0x00047f17
- (void)didSignIn:(id)arg1 info:(id)arg2;	// IMP=0x00047e07
- (void)addAccount:(id)arg1;	// IMP=0x00046dfc
- (void)removeAccount:(id)arg1;	// IMP=0x00046e96
- (BOOL)containsAccount:(id)arg1;	// IMP=0x00046ed3
- (id)accountWithUsername:(id)arg1;	// IMP=0x000472ea
- (id)defaultAccount;	// IMP=0x00046f00
- (void)reorderAccountFromIndex:(long)arg1 toIndex:(long)arg2;	// IMP=0x00046f4a
- (void)flushScribe:(id)arg1;	// IMP=0x00047013
- (void)flushScribeInBackground;	// IMP=0x00047431
- (id)duckie;	// IMP=0x00047044
- (void)refresh;	// IMP=0x00047557
- (BOOL)hasFreshMessages;	// IMP=0x00047690
- (BOOL)hasFreshAnythingApplicableToStatusItem;	// IMP=0x0004778c
- (BOOL)hasFreshAnythingApplicableToDockBadge;	// IMP=0x00047888
- (BOOL)hasAnythingUnread;	// IMP=0x00047984
- (void)markAllAsRead;	// IMP=0x00047087
- (id)cachedUsers;	// IMP=0x00047a80
- (BOOL)canBlock:(id)arg1;	// IMP=0x00047bbb
- (double)clockDelta;	// IMP=0x00046d0a
- (void)setClockDelta:(double)arg1;	// IMP=0x00046d15

@end

@interface TwitterAccount : NSObject <NSCoding>
{
    id <TwitterAccountDelegate> delegate;	// 4 = 0x4
    NSString *username;	// 8 = 0x8
    NSString *password;	// 12 = 0xc
    NSString *oAuthToken;	// 16 = 0x10
    NSString *oAuthTokenSecret;	// 20 = 0x14
    NSMutableDictionary *usersByID;	// 24 = 0x18
    NSMutableDictionary *usersByUsername;	// 28 = 0x1c
    NSMutableDictionary *statusesByID;	// 32 = 0x20
    NSMutableDictionary *directMessagesByID;	// 36 = 0x24
    NSMutableSet *friendIDs;	// 40 = 0x28
    NSMutableSet *blockIDs;	// 44 = 0x2c
    NSMutableSet *ignoreRetweetsIDs;	// 48 = 0x30
    NSString *apiRoot;	// 52 = 0x34
    NSString *searchAPIRoot;	// 56 = 0x38
    BOOL needToSavePassword;	// 60 = 0x3c
    TwitterUser *user;	// 64 = 0x40
    TwitterTimelineStream *timelineStream;	// 68 = 0x44
    TwitterRepliesStream *repliesStream;	// 72 = 0x48
    TwitterDirectMessagesConversationManager *directMessagesManager;	// 76 = 0x4c
    unsigned int notificationOptions;	// 80 = 0x50
    NSDate *freshTweets;	// 84 = 0x54
    NSDate *freshMentions;	// 88 = 0x58
    NSDate *freshMessages;	// 92 = 0x5c
    NSDate *freshSearches;	// 96 = 0x60
    NSMutableArray *savedSearches;	// 100 = 0x64
    NSMutableArray *lists;	// 104 = 0x68
    NSMutableArray *listSubscriptions;	// 108 = 0x6c
    NSArray *_followingLists;	// 112 = 0x70
    NSString *localTrendGPSToken;	// 116 = 0x74
    NSDate *lastTrendUpdate;	// 120 = 0x78
    NSArray *trends;	// 124 = 0x7c
    TwitterTrendLocation *currentTrendLocation;	// 128 = 0x80
    NSArray *topTweets;	// 132 = 0x84
    NSArray *sulCategories;	// 136 = 0x88
    NSMutableArray *drafts;	// 140 = 0x8c
    NSMutableArray *outbox;	// 144 = 0x90
    TwitterSettings *settings;	// 148 = 0x94
    TwitterConfiguration *twitterConfiguration;	// 152 = 0x98
    TwitterApplePushDestination *applePushDestination;	// 156 = 0x9c
    BOOL disableUserStream;	// 160 = 0xa0
    ABHTTPRequest *userStream;	// 164 = 0xa4
    BOOL droppedLastUserStreamConnection;	// 168 = 0xa8
    float userStreamReconnectDelay;	// 172 = 0xac
    NSDate *lastUserStreamEvent;	// 176 = 0xb0
    int scribeSpinLock;	// 180 = 0xb4
    TwitterScribe *scribe;	// 184 = 0xb8
    NSCache *userDetailsStreamsCache;	// 188 = 0xbc
    struct {
        unsigned int staleUser:1;
        unsigned int staleSavedSearches:1;
        unsigned int staleLists:1;
        unsigned int loadingUser:1;
        unsigned int loadingTrends:1;
        unsigned int loadingTopTweets:1;
        unsigned int loadingSavedSearches:1;
        unsigned int loadingLists:1;
        unsigned int loadingListSubscriptions:1;
        unsigned int loadingSULCategories:1;
        unsigned int loadingXAuthTokens:1;
        unsigned int lastGeotaggingState:1;
    } _flags;	// 192 = 0xc0
}

- (id)init;	// IMP=0x0004b1c6
- (id)initWithUsername:(id)arg1 password:(id)arg2 apiRoot:(id)arg3 searchAPIRoot:(id)arg4;	// IMP=0x0004fbf0
- (id)initWithUsername:(id)arg1 password:(id)arg2;	// IMP=0x0004fbb3
- (id)autosaveName;	// IMP=0x0004fb40
- (unsigned long)hash;	// IMP=0x0004fb1d
- (BOOL)isEqual:(id)arg1;	// IMP=0x0004fa01
- (void)saveStreams;	// IMP=0x0004f9c7
- (id)keychainService;	// IMP=0x0004b02e
- (void)setNotificationOptions:(unsigned long)arg1;	// IMP=0x0004b038
- (id)initWithCoder:(id)arg1;	// IMP=0x0004ee7a
- (void)encodeWithCoder:(id)arg1;	// IMP=0x0004ebee
- (id)scribe;	// IMP=0x0004b049
- (id)twitterConfiguration;	// IMP=0x0004eba5
- (void)refreshTwitterConfiguration;	// IMP=0x0004eb17
- (void)didReceiveNewConfigurationSettings:(id)arg1 info:(id)arg2;	// IMP=0x0004ea64
- (void)pruneStatusCache;	// IMP=0x0004e8e7
- (void)pruneUserCache;	// IMP=0x0004e709
- (void)dealloc;	// IMP=0x0004e2f1
- (BOOL)hasPassword;	// IMP=0x0004b050
- (BOOL)isConnectedToUserStream;	// IMP=0x0004b06f
- (void)refreshTimelines;	// IMP=0x0004e212
- (void)refresh;	// IMP=0x0004e1eb
- (void)refreshForced:(BOOL)arg1;	// IMP=0x0004df1e
- (void)refreshSettings;	// IMP=0x0004deb9
- (void)didLoadSettings:(id)arg1 info:(id)arg2;	// IMP=0x0004de7b
- (void)refreshDMs;	// IMP=0x0004de28
- (void)refreshBlocks;	// IMP=0x0004ddc3
- (void)didReceiveBlocks:(id)arg1 info:(id)arg2;	// IMP=0x0004dd42
- (void)refreshIgnoreRetweets;	// IMP=0x0004dcdd
- (void)didReceiveIgnoreRetweets:(id)arg1 info:(id)arg2;	// IMP=0x0004dc5c
- (void)setPassword:(id)arg1;	// IMP=0x0004dc1c
- (void)setOAuthTokenSecret:(id)arg1;	// IMP=0x0004dbdc
- (long)compare:(id)arg1;	// IMP=0x0004db6b
- (id)user;	// IMP=0x0004dae6
- (BOOL)lastGeotaggingState;	// IMP=0x0004b084
- (void)setLastGeotaggingState:(BOOL)arg1;	// IMP=0x0004b099
- (void)_postAccountDidUpdateNotification;	// IMP=0x0004da9f
- (void)myUserResponse:(id)arg1 info:(id)arg2;	// IMP=0x0004d9ad
- (void)myUserDidUpdate:(id)arg1;	// IMP=0x0004d98e
- (id)request:(id)arg1;	// IMP=0x0004d958
- (id)authenticatedRequest:(id)arg1;	// IMP=0x0004d91c
- (void)verifyCredentials:(id)arg1;	// IMP=0x0004d8e4
- (void)requestUserWithID:(id)arg1 callback:(id)arg2;	// IMP=0x0004d83b
- (void)unauthenticatedUserForIDResponse:(id)arg1 info:(id)arg2;	// IMP=0x0004d73e
- (void)authenticatedUserForIDResponse:(id)arg1 info:(id)arg2;	// IMP=0x0004d67f
- (void)requestUserWithUsername:(id)arg1 callback:(id)arg2;	// IMP=0x0004d5d6
- (void)unauthenticatedUserForUsernameResponse:(id)arg1 info:(id)arg2;	// IMP=0x0004d4d9
- (void)authenticatedUserForUsernameResponse:(id)arg1 info:(id)arg2;	// IMP=0x0004d41a
- (void)findUsers:(id)arg1 callback:(id)arg2;	// IMP=0x0004d39f
- (void)findUsersResponse:(id)arg1 info:(id)arg2;	// IMP=0x0004d319
- (void)requestStatusWithID:(id)arg1 callback:(id)arg2;	// IMP=0x0004d270
- (void)unauthenticatedStatusResponse:(id)arg1 info:(id)arg2;	// IMP=0x0004d17f
- (void)authenticatedStatusResponse:(id)arg1 info:(id)arg2;	// IMP=0x0004d0e7
- (id)timelineStream;	// IMP=0x0004d010
- (id)repliesStream;	// IMP=0x0004cf59
- (id)aggregateTimelineAndMentionsStream;	// IMP=0x0004cea0
- (id)directMessagesManager;	// IMP=0x0004ce01
- (BOOL)isAuthorOfStatus:(id)arg1;	// IMP=0x0004cd7b
- (BOOL)isAuthorOfDirectMessage:(id)arg1;	// IMP=0x0004ccf5
- (BOOL)isMentionedInStatus:(id)arg1;	// IMP=0x0004b0c2
- (void)favoriteStatus:(id)arg1;	// IMP=0x0004ccaf
- (void)addStatusToFavorites:(id)arg1;	// IMP=0x0004cc89
- (void)unfavoriteStatus:(id)arg1;	// IMP=0x0004cc43
- (void)removeStatusFromFavorites:(id)arg1;	// IMP=0x0004cc1d
- (BOOL)isFavoriteStatus:(id)arg1;	// IMP=0x0004b0d4
- (void)removeStatusFromStreams:(id)arg1;	// IMP=0x0004cbaa
- (void)deleteStatus:(id)arg1;	// IMP=0x0004cae1
- (void)deleteDirectMessage:(id)arg1;	// IMP=0x0004cab7
- (void)deleteDirectMessageConversation:(id)arg1;	// IMP=0x0004ca8d
- (void)deleteStatusResponse:(id)arg1 info:(id)arg2;	// IMP=0x0004b0e6
- (void)removeStatusFromCacheWithStatusID:(id)arg1;	// IMP=0x0004ca63
- (BOOL)hasFreshTweets;	// IMP=0x0004ca08
- (BOOL)hasFreshMentions;	// IMP=0x0004c9ad
- (BOOL)hasFreshMessages;	// IMP=0x0004c987
- (BOOL)hasFreshSearches;	// IMP=0x0004c879
- (BOOL)hasAnythingUnread;	// IMP=0x0004c81f
- (BOOL)hasFreshAnythingApplicableToStatusItem;	// IMP=0x0004c7ab
- (BOOL)hasFreshAnythingApplicableToDockBadge;	// IMP=0x0004c737
- (void)markAllAsRead;	// IMP=0x0004c5d1
- (void)noteFreshTweets;	// IMP=0x0004c55f
- (void)noteFreshMentions;	// IMP=0x0004c4ed
- (void)noteFreshMessages;	// IMP=0x0004c48d
- (void)noteFreshSearches;	// IMP=0x0004c46e
- (void)noteDirectMessagesUnreadStateDidChange;	// IMP=0x0004c438
- (id)unNotifiedStatuses:(id)arg1;	// IMP=0x0004c2c6
- (id)unNotifiedMessages;	// IMP=0x0004bfbf
- (void)somethingDidUpdate:(id)arg1;	// IMP=0x0004bf5d
- (void)setDeviceNotifications:(BOOL)arg1 forUser:(id)arg2;	// IMP=0x0004bef9
- (void)retweet:(id)arg1 callback:(id)arg2;	// IMP=0x0004beba
- (id)drafts;	// IMP=0x0004b0eb
- (void)saveDraft:(id)arg1;	// IMP=0x0004be19
- (void)removeDraft:(id)arg1;	// IMP=0x0004bdc8
- (void)_processOutbox;	// IMP=0x0004bcc5
- (void)didSend:(id)arg1 directMessage:(id)arg2;	// IMP=0x0004bc59
- (void)didSend:(id)arg1;	// IMP=0x0004bbf7
- (void)send:(id)arg1;	// IMP=0x0004bb95
- (void)sendDirectMessage:(id)arg1 to:(id)arg2 callback:(id)arg3;	// IMP=0x0004bae6
- (void)didMessage:(id)arg1 info:(id)arg2;	// IMP=0x0004ba6d
- (void)_errorPostingComposition:(id)arg1 message:(id)arg2 error:(id)arg3;	// IMP=0x0004b925
- (void)error:(id)arg1 shorteningURLsForComposition:(id)arg2;	// IMP=0x0004b8b2
- (void)error:(id)arg1 uploadingAttachment:(id)arg2 forComposition:(id)arg3;	// IMP=0x0004b83f
- (void)sendCompletedComposition:(id)arg1;	// IMP=0x0004b778
- (void)didSendCompletedComposition:(id)arg1 info:(id)arg2;	// IMP=0x0004b624
- (BOOL)isDuckie;	// IMP=0x0004b0f9
- (BOOL)disableUserStream;	// IMP=0x0004b100
- (void)setDisableUserStream:(BOOL)arg1;	// IMP=0x0004b10f
- (id)lastUserStreamEvent;	// IMP=0x0004b120
- (void)setLastUserStreamEvent:(id)arg1;	// IMP=0x0004b5e8
- (id)blockIDs;	// IMP=0x0004b12e
- (void)setBlockIDs:(id)arg1;	// IMP=0x0004b5ac
- (id)friendIDs;	// IMP=0x0004b139
- (void)setFriendIDs:(id)arg1;	// IMP=0x0004b570
- (void)setUser:(id)arg1;	// IMP=0x0004b534
- (id)applePushDestination;	// IMP=0x0004b144
- (void)setApplePushDestination:(id)arg1;	// IMP=0x0004b4f8
- (id)settings;	// IMP=0x0004b152
- (void)setSettings:(id)arg1;	// IMP=0x0004b4bc
- (unsigned long)notificationOptions;	// IMP=0x0004b160
- (id)searchAPIRoot;	// IMP=0x0004b16b
- (id)apiRoot;	// IMP=0x0004b176
- (id)oAuthTokenSecret;	// IMP=0x0004b181
- (id)oAuthToken;	// IMP=0x0004b18c
- (void)setOAuthToken:(id)arg1;	// IMP=0x0004b480
- (id)password;	// IMP=0x0004b197
- (id)username;	// IMP=0x0004b1a2
- (id)delegate;	// IMP=0x0004b1ad
- (void)setDelegate:(id)arg1;	// IMP=0x0004b1b8

@end

@interface TwitterAccountStream : TwitterConcreteStatusesStream <NSCoding>
{
    TwitterAccount *account;	// 52 = 0x34
    struct {
        unsigned int didRequestTopStatusID:1;
    } _accountStreamFlags;	// 56 = 0x38
}

- (id)initWithCoder:(id)arg1;	// IMP=0x00050100
- (void)encodeWithCoder:(id)arg1;	// IMP=0x000500a7
- (void)dealloc;	// IMP=0x0004fc9f
- (id)newestStatusThatIsNotMine;	// IMP=0x0004ff77
- (id)definitiveStatuses:(id)arg1;	// IMP=0x0004ff49
- (id)autosaveName;	// IMP=0x0004fed7
- (id)_statusIDSyncKey;	// IMP=0x0004fe61
- (void)noteNewTopStatusID:(id)arg1;	// IMP=0x0004fdf4
- (void)requestTopStatusID;	// IMP=0x0004fd76
- (void)requestTopStatusIDResponse:(id)arg1 info:(id)arg2;	// IMP=0x0004fccc
- (id)account;	// IMP=0x0004fc86
- (void)setAccount:(id)arg1;	// IMP=0x0004fc91

@end

@interface TwitterComposition : NSDocument <NSCoding>
{
    NSString *text;	// 52 = 0x34
    TwitterUser *replyToUser;	// 56 = 0x38
    TwitterUser *directMessageUser;	// 60 = 0x3c
    TwitterStatus *replyToStatus;	// 64 = 0x40
    BOOL isDraft;	// 68 = 0x44
    NSMutableArray *attachments;	// 72 = 0x48
    GeoRSSPoint *geotag;	// 76 = 0x4c
    TwitterPlace *place;	// 80 = 0x50
    NSMutableArray *placeEntities;	// 84 = 0x54
    ABCallback *didSendCallback;	// 88 = 0x58
    BOOL dirty;	// 92 = 0x5c
    BOOL hadFailedSend;	// 93 = 0x5d
    struct {
        unsigned int didBeginSend:1;
        unsigned int isSending:1;
    } _flags;	// 96 = 0x60
    int urlLength;	// 100 = 0x64
}

- (id)init;	// IMP=0x00050287
- (id)initWithCoder:(id)arg1;	// IMP=0x00051e72
- (void)encodeWithCoder:(id)arg1;	// IMP=0x00051d11
- (void)dealloc;	// IMP=0x00051c3a
- (BOOL)isSending;	// IMP=0x00050193
- (void)_beginSend;	// IMP=0x00051be7
- (void)_endSend:(BOOL)arg1;	// IMP=0x00051bc0
- (id)replyToUser;	// IMP=0x00051b8e
- (int)compositionType;	// IMP=0x00051b49
- (BOOL)isGeoTaggable;	// IMP=0x00051b22
- (BOOL)isDirectMessage;	// IMP=0x00051afa
- (BOOL)isPublicReply;	// IMP=0x00051ad2
- (void)_addUsernamePrefixIfNeeded;	// IMP=0x000519b0
- (BOOL)_removePrefix:(id)arg1;	// IMP=0x000518d2
- (void)_removeUsernamePrefix;	// IMP=0x000517de
- (void)switchToPublicReply;	// IMP=0x00051767
- (void)switchToDirectMessage;	// IMP=0x000516f0
- (long)characterLimit;	// IMP=0x000501a3
- (int)urlLength;	// IMP=0x000501ad
- (long)attachmentsLength;	// IMP=0x000516b4
- (long)remainingCharacters;	// IMP=0x00051622
- (BOOL)isWorthSaving;	// IMP=0x000515d9
- (BOOL)isWorthSending;	// IMP=0x0005157a
- (BOOL)containsMoreThanMentions;	// IMP=0x00051413
- (BOOL)isDocumentEdited;	// IMP=0x000513de
- (id)appropriateTitle;	// IMP=0x0005126e
- (id)appropriateDraftTitle;	// IMP=0x000510fe
- (id)appropriateImage;	// IMP=0x000510a2
- (BOOL)matchesSearchString:(id)arg1;	// IMP=0x00051014
- (void)addAttachment:(id)arg1;	// IMP=0x00050fc9
- (void)removeAttachment:(id)arg1;	// IMP=0x00050f6d
- (id)attachments;	// IMP=0x000501c2
- (BOOL)hasRoomForAnotherAttachment;	// IMP=0x00050f42
- (void)willDiscard;	// IMP=0x00050e58
- (id)textWithAttachments;	// IMP=0x00050d49
- (void)_sendFromAccount:(id)arg1;	// IMP=0x00050d10
- (void)didSend:(id)arg1;	// IMP=0x00050ce3
- (void)errorSending;	// IMP=0x00050cb7
- (long)numberOfAttachmentsPendingUpload;	// IMP=0x00050c78
- (BOOL)hasPendingAttachments;	// IMP=0x00050c51
- (void)sendFromAccount:(id)arg1;	// IMP=0x00050aaa
- (float)sendProgress;	// IMP=0x00050a03
- (void)didUploadAttachment:(id)arg1 info:(id)arg2;	// IMP=0x00050920
- (id)displayName;	// IMP=0x000501cd
- (id)fileURL;	// IMP=0x000501d7
- (void)trimEntities;	// IMP=0x0005072f
- (int)_updatedIndex:(int)arg1 range:(struct _NSRange)arg2 newText:(id)arg3;	// IMP=0x000506e8
- (void)reindexEntitiesWithRange:(struct _NSRange)arg1 replacementText:(id)arg2;	// IMP=0x000504fd
- (void)setUrlLength:(int)arg1;	// IMP=0x000501de
- (BOOL)hadFailedSend;	// IMP=0x000501ec
- (void)setHadFailedSend:(BOOL)arg1;	// IMP=0x000501f8
- (BOOL)dirty;	// IMP=0x00050206
- (void)setDirty:(BOOL)arg1;	// IMP=0x00050212
- (id)didSendCallback;	// IMP=0x00050220
- (void)setDidSendCallback:(id)arg1;	// IMP=0x000504c1
- (id)placeEntities;	// IMP=0x0005022b
- (void)setPlaceEntities:(id)arg1;	// IMP=0x00050485
- (id)place;	// IMP=0x00050236
- (void)setPlace:(id)arg1;	// IMP=0x00050449
- (id)geotag;	// IMP=0x00050241
- (void)setGeotag:(id)arg1;	// IMP=0x0005040d
- (BOOL)isDraft;	// IMP=0x0005024c
- (void)setIsDraft:(BOOL)arg1;	// IMP=0x00050258
- (id)text;	// IMP=0x00050266
- (void)setText:(id)arg1;	// IMP=0x000503d1
- (id)directMessageUser;	// IMP=0x00050271
- (void)setDirectMessageUser:(id)arg1;	// IMP=0x00050395
- (id)replyToStatus;	// IMP=0x0005027c
- (void)setReplyToStatus:(id)arg1;	// IMP=0x00050359
- (void)setReplyToUser:(id)arg1;	// IMP=0x0005031d

@end

@interface TwitterCompositionVideoAttachment : TwitterCompositionAttachment
{
}

- (id)title;	// IMP=0x00052948
- (id)thumbnail;	// IMP=0x0005211c
- (void)_uploadFromAccount:(id)arg1 associatedMessage:(id)arg2 callback:(id)arg3;	// IMP=0x00052b17
- (void)didUploadVideo:(id)arg1 info:(id)arg2;	// IMP=0x00052a16
- (int)type;	// IMP=0x00052123

@end

@interface TwitterCompositionImageAttachment : TwitterCompositionAttachment
{
}

- (id)title;	// IMP=0x000528fc
- (void)_uploadFromAccount:(id)arg1 associatedMessage:(id)arg2 callback:(id)arg3;	// IMP=0x00052a98
- (void)didUploadImage:(id)arg1 info:(id)arg2;	// IMP=0x00052994
- (id)thumbnail;	// IMP=0x00052107
- (int)type;	// IMP=0x00052112

@end

@interface TwitterCompositionAttachment : NSObject <NSCoding>
{
    NSString *localFile;	// 4 = 0x4
    NSURL *localURL;	// 8 = 0x8
    BOOL ownsLocalFile;	// 12 = 0xc
    NSString *sourceDescription;	// 16 = 0x10
    NSURL *remoteURL;	// 20 = 0x14
    int size;	// 24 = 0x18
    struct {
        unsigned int isUploading:1;
    } _flags;	// 28 = 0x1c
    ABImage *thumbnail;	// 32 = 0x20
    NSError *uploadError;	// 36 = 0x24
}

- (id)initWithCoder:(id)arg1;	// IMP=0x0005212d
- (void)dealloc;	// IMP=0x0005284f
- (void)encodeWithCoder:(id)arg1;	// IMP=0x00052795
- (void)setLocalFile:(id)arg1;	// IMP=0x000526b1
- (void)setLocalURL:(id)arg1;	// IMP=0x000525ca
- (void)setData:(id)arg1;	// IMP=0x0005253d
- (id)localFile;	// IMP=0x000520a8
- (id)data;	// IMP=0x0005249f
- (BOOL)isPendingUpload;	// IMP=0x000520b3
- (void)_uploadFromAccount:(id)arg1 associatedMessage:(id)arg2 callback:(id)arg3;	// IMP=0x000520c5
- (void)uploadFromAccount:(id)arg1 associatedMessage:(id)arg2 callback:(id)arg3;	// IMP=0x00052412
- (void)didUpload:(id)arg1 info:(id)arg2;	// IMP=0x000523e5
- (void)cleanup;	// IMP=0x00052342
- (id)title;	// IMP=0x000522f6
- (id)thumbnail;	// IMP=0x000520ca
- (int)type;	// IMP=0x000520d1
- (id)sourceDescription;	// IMP=0x000520db
- (void)setSourceDescription:(id)arg1;	// IMP=0x000522ba
- (long)size;	// IMP=0x000520e6
- (id)uploadError;	// IMP=0x000520f1
- (void)setUploadError:(id)arg1;	// IMP=0x0005227e
- (id)remoteURL;	// IMP=0x000520fc
- (void)setRemoteURL:(id)arg1;	// IMP=0x00052242

@end

@interface TwitterDummyGapStatus : TwitterDummyStatus
{
    struct {
        unsigned int isLoading:1;
        unsigned int shouldRemove:1;
    } _gapFlags;	// 112 = 0x70
}

- (id)initWithCoder:(id)arg1;	// IMP=0x000549cd
- (void)encodeWithCoder:(id)arg1;	// IMP=0x00054b50
- (BOOL)isGap;	// IMP=0x00052c57
- (BOOL)isEqual:(id)arg1;	// IMP=0x00054a8e
- (BOOL)loading;	// IMP=0x00052c61
- (void)setLoading:(BOOL)arg1;	// IMP=0x00054a37
- (BOOL)_shouldFilterOutOfStream;	// IMP=0x00052c71

@end

@interface TwitterDummyErrorStatus : TwitterDummyStatus
{
    NSError *error;	// 112 = 0x70
    ABCallback *callback;	// 116 = 0x74
}

- (void)dealloc;	// IMP=0x000548fc
- (id)callback;	// IMP=0x00052c41
- (void)setCallback:(id)arg1;	// IMP=0x00054991
- (id)error;	// IMP=0x00052c4c
- (void)setError:(id)arg1;	// IMP=0x00054955

@end

@interface TwitterDummyEmptyStreamStatus : TwitterDummyStatus
{
}

@end

@interface TwitterDummyHeaderStatus : TwitterDummyStatus
{
}

@end

@interface TwitterDummyEndOfStreamStatus : TwitterDummyStatus
{
}

@end

@interface TwitterDummyLoadingStatus : TwitterDummyStatus
{
}

+ (id)dummyLoadingStatus;	// IMP=0x00054883

@end

@interface TwitterDummyStatus : TwitterStatus
{
    NSString *messageText;	// 108 = 0x6c
}

- (BOOL)isNotADummyStatus;	// IMP=0x00052c2f
- (void)dealloc;	// IMP=0x00054753
- (unsigned long)hash;	// IMP=0x0005484a
- (BOOL)isEqual:(id)arg1;	// IMP=0x000547d3
- (id)messageText;	// IMP=0x00052c36
- (void)setMessageText:(id)arg1;	// IMP=0x00054797

@end

@interface TwitterConcreteStatusesStream : TwitterStream <NSCoding>
{
    NSString *guid;	// 12 = 0xc
    NSArray *statuses;	// 16 = 0x10
    NSDate *lastUpdated;	// 20 = 0x14
    TwitterDummyHeaderStatus *dummyHeader;	// 24 = 0x18
    TwitterDummyEndOfStreamStatus *dummyEndOfStream;	// 28 = 0x1c
    TwitterDummyLoadingStatus *dummyLoading;	// 32 = 0x20
    TwitterStatus *_newestStatus;	// 36 = 0x24
    NSError *loadNewerError;	// 40 = 0x28
    NSError *loadOlderError;	// 44 = 0x2c
    struct {
        unsigned int isLoadingNewer:1;
        unsigned int isLoadingOlder:1;
        unsigned int isAtEnd:1;
        unsigned int loadingOlderLessThan20Count:5;
        unsigned int needsToLoadFromDisk:1;
        unsigned int needsToWriteToDisk:1;
        unsigned int loadConservatively:1;
    } _flags;	// 48 = 0x30
}

- (id)init;	// IMP=0x00052c83
- (id)guid;	// IMP=0x000546e5
- (id)storedStreamPath;	// IMP=0x00054695
- (id)autosaveName;	// IMP=0x00052b9d
- (void)_readFromDisk;	// IMP=0x00054612
- (void)_writeToDisk;	// IMP=0x0005457b
- (void)saveStream;	// IMP=0x0005455c
- (id)initWithCoder:(id)arg1;	// IMP=0x00054469
- (void)encodeWithCoder:(id)arg1;	// IMP=0x000543ad
- (void)dealloc;	// IMP=0x00054283
- (id)errorStatusForError:(id)arg1;	// IMP=0x00054110
- (id)statuses;	// IMP=0x00053e3a
- (id)newestStatus;	// IMP=0x00053caf
- (id)oldestStatus;	// IMP=0x00053bf0
- (id)newestStatusID;	// IMP=0x00053bbf
- (id)oldestStatusID;	// IMP=0x00053b8e
- (id)lastUpdated;	// IMP=0x00052ba7
- (void)postStatusesChangedNotification;	// IMP=0x00053b45
- (void)setStatuses:(id)arg1;	// IMP=0x00053af6
- (void)setLoadConservatively:(BOOL)arg1;	// IMP=0x00052bb2
- (BOOL)loadConservatively;	// IMP=0x00052bd5
- (BOOL)hasData;	// IMP=0x00053acb
- (id)definitiveStatuses:(id)arg1;	// IMP=0x00052be7
- (void)addStatus:(id)arg1;	// IMP=0x00053a89
- (int)maxCount;	// IMP=0x00052bef
- (BOOL)shouldIndexUsersInAutocomplete;	// IMP=0x00052bf9
- (void)addStatuses:(id)arg1;	// IMP=0x00053769
- (void)_deleteStatus:(id)arg1;	// IMP=0x000536c7
- (void)deleteStatusNotification:(id)arg1;	// IMP=0x0005367a
- (void)_postError:(id)arg1;	// IMP=0x000535fd
- (long)minStatusesToConsiderBeingGap;	// IMP=0x00052c00
- (void)statusesResponse:(id)arg1 couldBeGap:(BOOL)arg2 isFromFillingInGap:(BOOL)arg3;	// IMP=0x0005330d
- (void)loadNewerResponse:(id)arg1 info:(id)arg2;	// IMP=0x00053251
- (void)markAtEnd;	// IMP=0x0005321a
- (void)loadOlderResponse:(id)arg1 info:(id)arg2;	// IMP=0x000530de
- (void)fillInGapResponse:(id)arg1 info:(id)arg2;	// IMP=0x00053075
- (void)_loadNewer;	// IMP=0x0005305e
- (void)_loadOlder;	// IMP=0x00053047
- (void)loadNewer;	// IMP=0x00053017
- (BOOL)isLoadingNewer;	// IMP=0x00052c0a
- (void)loadOlder;	// IMP=0x00052fbe
- (void)retryLoadOlder;	// IMP=0x00052f81
- (void)_loadBeforeGap:(id)arg1;	// IMP=0x00052f63
- (void)fillInGap:(id)arg1;	// IMP=0x00052f0b
- (id)loadNewerResponseCallback;	// IMP=0x00052ee4
- (id)loadOlderResponseCallback;	// IMP=0x00052ebd
- (id)fillInGapResponseCallback:(id)arg1;	// IMP=0x00052e97
- (id)loadNewerError;	// IMP=0x00052c19
- (void)setLoadNewerError:(id)arg1;	// IMP=0x00052e5b
- (id)loadOlderError;	// IMP=0x00052c24
- (void)setLoadOlderError:(id)arg1;	// IMP=0x00052e1f

@end

@interface TwitterConversationStream : TwitterAccountStream <NSCoding>
{
    TwitterStatus *baseStatus;	// 60 = 0x3c
    TwitterStatus *_nextStatus;	// 64 = 0x40
}

- (id)initWithCoder:(id)arg1;	// IMP=0x00054bba
- (void)dealloc;	// IMP=0x00055204
- (void)encodeWithCoder:(id)arg1;	// IMP=0x000551ab
- (BOOL)scourForRelatedCachedTweets;	// IMP=0x00055039
- (void)markAtEnd;	// IMP=0x00054f22
- (void)potentialConversationSourceDidUpdate:(id)arg1;	// IMP=0x00054f03
- (void)getNext;	// IMP=0x00054e1c
- (void)handleStatus:(id)arg1;	// IMP=0x00054d9e
- (void)gotNext:(id)arg1 info:(id)arg2;	// IMP=0x00054c8f
- (void)setBaseStatus:(id)arg1;	// IMP=0x00054c16
- (void)_loadNewer;	// IMP=0x00054b90
- (void)_loadOlder;	// IMP=0x00054b95
- (BOOL)canLoadNewer;	// IMP=0x00054b9a
- (BOOL)supportsFillingInGaps;	// IMP=0x00054ba1
- (id)autosaveName;	// IMP=0x00054ba8
- (id)baseStatus;	// IMP=0x00054baf

@end

@interface TwitterDirectMessage : NSObject <NSCoding>
{
    NSString *messageID;	// 4 = 0x4
    NSString *text;	// 8 = 0x8
    NSString *originalText;	// 12 = 0xc
    NSDate *date;	// 16 = 0x10
    TwitterUser *sender;	// 20 = 0x14
    TwitterUser *recipient;	// 24 = 0x18
    ABActiveTextRanges *originalTextRanges;	// 28 = 0x1c
    ABActiveTextRanges *activeTextRanges;	// 32 = 0x20
    TwitterComposition *composition;	// 36 = 0x24
    struct {
        unsigned int didGlobalNotification:1;
        unsigned int read:1;
    } _flags;	// 40 = 0x28
}

+ (id)messageWithDictionary:(id)arg1;	// IMP=0x00055b3c
+ (id)messageWithXML:(id)arg1;	// IMP=0x00055e41
+ (id)messagesWithXML:(id)arg1;	// IMP=0x00055dbf
- (void)dealloc;	// IMP=0x00055cd3
- (id)initWithCoder:(id)arg1;	// IMP=0x00056012
- (void)encodeWithCoder:(id)arg1;	// IMP=0x000556d6
- (id)description;	// IMP=0x00055804
- (unsigned long)hash;	// IMP=0x00055851
- (BOOL)isEqual:(id)arg1;	// IMP=0x00055874
- (long)compare:(id)arg1;	// IMP=0x0005590b
- (id)originalText;	// IMP=0x00055948
- (void)setOriginalText:(id)arg1;	// IMP=0x000559be
- (void)setText:(id)arg1;	// IMP=0x00055a46
- (BOOL)didGlobalNotification;	// IMP=0x0005562a
- (void)setDidGlobalNotification:(BOOL)arg1;	// IMP=0x0005563a
- (BOOL)read;	// IMP=0x00055652
- (void)setRead:(BOOL)arg1;	// IMP=0x00055664
- (BOOL)matchesSearchString:(id)arg1;	// IMP=0x00055ace
- (id)composition;	// IMP=0x0005567e
- (void)setComposition:(id)arg1;	// IMP=0x00055fd6
- (id)activeTextRanges;	// IMP=0x00055689
- (id)originalTextRanges;	// IMP=0x00055694
- (id)recipient;	// IMP=0x0005569f
- (void)setRecipient:(id)arg1;	// IMP=0x00055f9a
- (id)sender;	// IMP=0x000556aa
- (void)setSender:(id)arg1;	// IMP=0x00055f5e
- (id)date;	// IMP=0x000556b5
- (void)setDate:(id)arg1;	// IMP=0x00055f22
- (id)text;	// IMP=0x000556c0
- (id)messageID;	// IMP=0x000556cb
- (void)setMessageID:(id)arg1;	// IMP=0x00055ee6

@end

@interface TwitterDirectMessageConversation : NSObject <NSCoding>
{
    TwitterUser *correspondent;	// 4 = 0x4
    NSMutableArray *_messages;	// 8 = 0x8
    NSMutableArray *_toRemove;	// 12 = 0xc
    TwitterComposition *composition;	// 16 = 0x10
    struct {
        unsigned int didAddMessage:1;
        unsigned int needsFullCorrespondant:1;
    } _flags;	// 20 = 0x14
}

- (id)init;	// IMP=0x0005621b
- (BOOL)needsFullCorrespondant;	// IMP=0x000561cd
- (void)setNeedsFullCorrespondant:(BOOL)arg1;	// IMP=0x000561df
- (id)initWithCoder:(id)arg1;	// IMP=0x00056f43
- (void)encodeWithCoder:(id)arg1;	// IMP=0x00056eec
- (void)dealloc;	// IMP=0x00056e58
- (id)composition;	// IMP=0x00056dc3
- (id)messages;	// IMP=0x000561f9
- (void)setMessages:(id)arg1;	// IMP=0x00056d87
- (id)mostRecentMessage;	// IMP=0x00056d40
- (id)newestMessageNotFrom:(id)arg1;	// IMP=0x00056cdb
- (long)compare:(id)arg1;	// IMP=0x00056c8e
- (void)beginAddingMessages;	// IMP=0x00056204
- (void)addMessage:(id)arg1;	// IMP=0x00056b8e
- (void)endAddingMessages;	// IMP=0x00056ac1
- (void)deleteMessage:(id)arg1;	// IMP=0x00056a76
- (BOOL)isRepliedTo;	// IMP=0x00056a1f
- (BOOL)hasUnreadMessages;	// IMP=0x00056923
- (void)markAsRead;	// IMP=0x00056831
- (BOOL)matchesSearchString:(id)arg1;	// IMP=0x00056722
- (void)sendFromAccount:(id)arg1;	// IMP=0x0005652d
- (void)_didSend:(id)arg1 info:(id)arg2;	// IMP=0x00056516
- (void)replaceComposition:(id)arg1 withSentMessage:(id)arg2;	// IMP=0x000562f6
- (void)setComposition:(id)arg1;	// IMP=0x000562ba
- (id)correspondent;	// IMP=0x00056210
- (void)setCorrespondent:(id)arg1;	// IMP=0x0005627e

@end

@interface TwitterDirectMessagesConversationManager : NSObject <NSCoding>
{
    TwitterReceivedDirectMessagesStream *receivedStream;	// 4 = 0x4
    TwitterSentDirectMessagesStream *sentStream;	// 8 = 0x8
    NSMutableArray *_conversations;	// 12 = 0xc
    struct {
        unsigned int hasUnreadMessages:1;
        unsigned int unreadBitIsFresh:1;
    } _flags;	// 16 = 0x10
}

- (void)_setupNotifications;	// IMP=0x00057001
- (id)initWithAccount:(id)arg1;	// IMP=0x000573dd
- (id)initWithCoder:(id)arg1;	// IMP=0x00057f73
- (void)encodeWithCoder:(id)arg1;	// IMP=0x000570ac
- (void)setAccount:(id)arg1;	// IMP=0x00057124
- (void)dealloc;	// IMP=0x00057ed8
- (void)refresh;	// IMP=0x0005716b
- (void)loadOlder;	// IMP=0x000571a5
- (id)conversations;	// IMP=0x00056fcf
- (id)conversationWith:(id)arg1;	// IMP=0x00057d44
- (void)_postDidUpdateNotification;	// IMP=0x000571df
- (void)_addStubConversation:(id)arg1;	// IMP=0x00057226
- (void)addMessages:(id)arg1 fromMe:(BOOL)arg2;	// IMP=0x00057b72
- (void)sentDidUpdate:(id)arg1;	// IMP=0x00057282
- (void)receivedDidUpdate:(id)arg1;	// IMP=0x000572c5
- (id)newestMessageDate;	// IMP=0x00057308
- (id)newestMessageNotFromMe;	// IMP=0x00057a52
- (id)newestMessageDateNotFromMe;	// IMP=0x00057376
- (void)_deleteMessage:(id)arg1;	// IMP=0x00057996
- (void)deleteMessage:(id)arg1;	// IMP=0x0005787a
- (void)didDeleteMessage:(id)arg1 info:(id)arg2;	// IMP=0x00056fda
- (void)deleteConversation:(id)arg1;	// IMP=0x00057723
- (BOOL)hasUnreadMessages;	// IMP=0x00057606
- (void)markAllAsRead;	// IMP=0x000574de
- (void)clearCachedUnreadState;	// IMP=0x00056fdf
- (id)conversationsMatching:(id)arg1;	// IMP=0x000573a7
- (id)sentStream;	// IMP=0x00056feb
- (id)receivedStream;	// IMP=0x00056ff6

@end

@interface TwitterDirectMessagesStream : TwitterStream <NSCoding>
{
    TwitterAccount *account;	// 12 = 0xc
    NSArray *messages;	// 16 = 0x10
    int page;	// 20 = 0x14
    struct {
        unsigned int isLoadingNewer:1;
        unsigned int isLoadingOlder:1;
        unsigned int isAtEnd:1;
    } _flags;	// 24 = 0x18
}

- (id)initWithCoder:(id)arg1;	// IMP=0x000582a1
- (void)encodeWithCoder:(id)arg1;	// IMP=0x00058956
- (void)dealloc;	// IMP=0x00058912
- (id)newestMessageID;	// IMP=0x000588b2
- (id)oldestMessageID;	// IMP=0x0005885a
- (void)setMessages:(id)arg1;	// IMP=0x000587e3
- (BOOL)forceReadBit;	// IMP=0x00058276
- (void)addMessages:(id)arg1;	// IMP=0x00058615
- (void)deleteMessage:(id)arg1;	// IMP=0x00058572
- (void)messagesResponse:(id)arg1 info:(id)arg2;	// IMP=0x000584ab
- (void)_loadNewer;	// IMP=0x00058494
- (void)_loadOlder;	// IMP=0x0005847d
- (void)loadNewer;	// IMP=0x0005844f
- (void)loadOlder;	// IMP=0x00058421
- (void)loadNewerResponse:(id)arg1 info:(id)arg2;	// IMP=0x000583ef
- (void)loadOlderResponse:(id)arg1 info:(id)arg2;	// IMP=0x00058389
- (id)loadNewerResponseCallback;	// IMP=0x00058362
- (id)loadOlderResponseCallback;	// IMP=0x0005833b
- (id)messages;	// IMP=0x0005827d
- (id)account;	// IMP=0x00058288
- (void)setAccount:(id)arg1;	// IMP=0x00058293

@end

@interface TwitterDuckieAccount : TwitterAccount
{
    NSString *fakePass;	// 196 = 0xc4
}

- (BOOL)isDuckie;	// IMP=0x000589c7
- (id)username;	// IMP=0x000589d1
- (id)oAuthToken;	// IMP=0x000589db
- (id)oAuthTokenSecret;	// IMP=0x000589e5
- (id)password;	// IMP=0x000589ef

@end

@interface TwitterEntity : NSObject <NSCoding, NSCopying, ABActiveTextRange>
{
    struct _NSRange range;	// 4 = 0x4
}

+ (void)parseEntityXML:(id)arg1 info:(id)arg2;	// IMP=0x0005a032
+ (void)setIndices:(id)arg1 parser:(id)arg2;	// IMP=0x00059f85
+ (void)parseEntitiesXML:(id)arg1 info:(id)arg2;	// IMP=0x00059b16
+ (void)parseEntityJSON:(id)arg1 info:(id)arg2;	// IMP=0x00059a7e
+ (void)parseEntitiesJSON:(id)arg1 info:(id)arg2;	// IMP=0x0005976f
- (id)initWithCoder:(id)arg1;	// IMP=0x000596fb
- (void)encodeWithCoder:(id)arg1;	// IMP=0x0005a2d5
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x0005a2b6
- (id)rangeNSValue;	// IMP=0x0005a280
- (id)displayString;	// IMP=0x00058a25
- (struct _NSRange)rangeValue;	// IMP=0x00058a2f
- (int)rangeFlavor;	// IMP=0x00058a3d
- (void)parseIndexJSON:(id)arg1 info:(id)arg2;	// IMP=0x0005a1df
- (void)parseEntityJSON:(id)arg1 info:(id)arg2;	// IMP=0x0005a106
- (void)parseDict:(id)arg1;	// IMP=0x0005a049
- (struct _NSRange)range;	// IMP=0x00058a44
- (void)setRange:(struct _NSRange)arg1;	// IMP=0x00058a52

@end

@interface TwitterEntitySet : NSObject <NSCoding>
{
    NSMutableArray *urls;	// 4 = 0x4
    NSMutableArray *mentions;	// 8 = 0x8
    NSMutableArray *hashtags;	// 12 = 0xc
    NSArray *activeRanges;	// 16 = 0x10
    TwitterEntityPromotedContent *promotedContent;	// 20 = 0x14
}

+ (id)entitiesWithDict:(id)arg1;	// IMP=0x00058b62
- (id)initWithCoder:(id)arg1;	// IMP=0x00058a66
- (void)encodeWithCoder:(id)arg1;	// IMP=0x00059662
- (id)description;	// IMP=0x000595e3
- (void)dealloc;	// IMP=0x00059560
- (id)promotedContent;	// IMP=0x000589f9
- (void)setPromotedContent:(id)arg1;	// IMP=0x00059524
- (id)hashtags;	// IMP=0x00058a04
- (void)setHashtags:(id)arg1;	// IMP=0x000594e8
- (id)mentions;	// IMP=0x00058a0f
- (void)setMentions:(id)arg1;	// IMP=0x000594ac
- (id)urls;	// IMP=0x00058a1a
- (void)setUrls:(id)arg1;	// IMP=0x00059470

@end

@interface TwitterEntityHashtag : TwitterEntity
{
    NSString *text;	// 12 = 0xc
}

+ (void)parseEntityXML:(id)arg1 info:(id)arg2;	// IMP=0x0005a6f7
- (id)initWithCoder:(id)arg1;	// IMP=0x0005a688
- (void)dealloc;	// IMP=0x0005aa04
- (void)encodeWithCoder:(id)arg1;	// IMP=0x0005a9ab
- (void)parseEntityJSON:(id)arg1 info:(id)arg2;	// IMP=0x0005a8f2
- (void)parseDict:(id)arg1;	// IMP=0x0005a88b
- (id)displayString;	// IMP=0x0005a856
- (id)description;	// IMP=0x0005a7d7
- (int)rangeFlavor;	// IMP=0x0005a673
- (id)text;	// IMP=0x0005a67d
- (void)setText:(id)arg1;	// IMP=0x0005a79b

@end

@interface TwitterEntityURL : TwitterEntity
{
    NSURL *url;	// 12 = 0xc
    NSURL *expandedURL;	// 16 = 0x10
    NSString *displayURL;	// 20 = 0x14
    struct _NSRange rangeInDisplayText;	// 24 = 0x18
}

+ (void)parseEntityXML:(id)arg1 info:(id)arg2;	// IMP=0x0005ab74
- (id)initWithCoder:(id)arg1;	// IMP=0x0005aaa3
- (void)encodeWithCoder:(id)arg1;	// IMP=0x0005b167
- (void)parseEntityJSON:(id)arg1 info:(id)arg2;	// IMP=0x0005affe
- (long)compare:(id)arg1;	// IMP=0x0005af7d
- (id)displayString;	// IMP=0x0005af4a
- (int)rangeFlavor;	// IMP=0x0005aa48
- (struct _NSRange)rangeValue;	// IMP=0x0005aa52
- (void)parseDict:(id)arg1;	// IMP=0x0005ae4b
- (id)description;	// IMP=0x0005adee
- (void)dealloc;	// IMP=0x0005ad80
- (struct _NSRange)rangeInDisplayText;	// IMP=0x0005aa60
- (void)setRangeInDisplayText:(struct _NSRange)arg1;	// IMP=0x0005aa6e
- (id)displayURL;	// IMP=0x0005aa82
- (void)setDisplayURL:(id)arg1;	// IMP=0x0005ad44
- (id)expandedURL;	// IMP=0x0005aa8d
- (void)setExpandedURL:(id)arg1;	// IMP=0x0005ad08
- (id)url;	// IMP=0x0005aa98
- (void)setUrl:(id)arg1;	// IMP=0x0005accc

@end

@interface TwitterEntityUserMention : TwitterEntity
{
    NSString *fullName;	// 12 = 0xc
    NSString *username;	// 16 = 0x10
    NSString *userID;	// 20 = 0x14
}

+ (void)parseEntityXML:(id)arg1 info:(id)arg2;	// IMP=0x0005b2fe
- (id)initWithCoder:(id)arg1;	// IMP=0x0005b22d
- (void)dealloc;	// IMP=0x0005b853
- (void)encodeWithCoder:(id)arg1;	// IMP=0x0005b7b8
- (void)parseEntityJSON:(id)arg1 info:(id)arg2;	// IMP=0x0005b683
- (void)parseDict:(id)arg1;	// IMP=0x0005b5be
- (id)displayString;	// IMP=0x0005b589
- (int)rangeFlavor;	// IMP=0x0005b202
- (id)description;	// IMP=0x0005b4d2
- (id)userID;	// IMP=0x0005b20c
- (void)setUserID:(id)arg1;	// IMP=0x0005b496
- (id)username;	// IMP=0x0005b217
- (void)setUsername:(id)arg1;	// IMP=0x0005b45a
- (id)fullName;	// IMP=0x0005b222
- (void)setFullName:(id)arg1;	// IMP=0x0005b41e

@end

@interface TwitterList : NSObject <NSCoding>
{
    TwitterAccount *account;	// 4 = 0x4
    NSString *listID;	// 8 = 0x8
    NSString *name;	// 12 = 0xc
    NSString *mode;	// 16 = 0x10
    NSString *slug;	// 20 = 0x14
    NSString *description;	// 24 = 0x18
    int subscriberCount;	// 28 = 0x1c
    int memberCount;	// 32 = 0x20
    TwitterUser *user;	// 36 = 0x24
    TwitterListStream *stream;	// 40 = 0x28
}

+ (id)listWithDictionary:(id)arg1;	// IMP=0x0005c224
+ (id)listWithXML:(id)arg1;	// IMP=0x0005c6cc
+ (id)listsWithXML:(id)arg1;	// IMP=0x0005c64a
+ (id)listWithSlug:(id)arg1 account:(id)arg2;	// IMP=0x0005c4ee
- (void)dealloc;	// IMP=0x0005c42c
- (id)initWithCoder:(id)arg1;	// IMP=0x0005c8d9
- (void)encodeWithCoder:(id)arg1;	// IMP=0x0005bdcc
- (void)assimilateList:(id)arg1;	// IMP=0x0005bee9
- (unsigned long)hash;	// IMP=0x0005c005
- (BOOL)isEqual:(id)arg1;	// IMP=0x0005c028
- (long)compare:(id)arg1;	// IMP=0x0005c0b0
- (id)fullName;	// IMP=0x0005c0fd
- (BOOL)isPrivate;	// IMP=0x0005c14f
- (id)stream;	// IMP=0x0005c17f
- (void)setAccount:(id)arg1;	// IMP=0x0005c1f7
- (id)user;	// IMP=0x0005bd4d
- (void)setUser:(id)arg1;	// IMP=0x0005c89d
- (long)memberCount;	// IMP=0x0005bd58
- (void)setMemberCount:(long)arg1;	// IMP=0x0005bd63
- (long)subscriberCount;	// IMP=0x0005bd71
- (void)setSubscriberCount:(long)arg1;	// IMP=0x0005bd7c
- (id)description;	// IMP=0x0005bd8a
- (void)setDescription:(id)arg1;	// IMP=0x0005c861
- (id)slug;	// IMP=0x0005bd95
- (void)setSlug:(id)arg1;	// IMP=0x0005c825
- (id)mode;	// IMP=0x0005bda0
- (void)setMode:(id)arg1;	// IMP=0x0005c7e9
- (id)name;	// IMP=0x0005bdab
- (void)setName:(id)arg1;	// IMP=0x0005c7ad
- (id)listID;	// IMP=0x0005bdb6
- (void)setListID:(id)arg1;	// IMP=0x0005c771
- (id)account;	// IMP=0x0005bdc1

@end

@interface TwitterListList : NSObject
{
    TwitterAccount *account;	// 4 = 0x4
    NSString *nextCursor;	// 8 = 0x8
    NSString *previousCursor;	// 12 = 0xc
    NSArray *lists;	// 16 = 0x10
    struct {
        unsigned int loadingNext:1;
    } _listListFlags;	// 20 = 0x14
}

- (void)dealloc;	// IMP=0x0005cb6d
- (id)lists;	// IMP=0x0005cac5
- (void)loadNextOnRequester:(id)arg1;	// IMP=0x0005ca91
- (void)loadNext;	// IMP=0x0005cc8f
- (void)didLoadNextListList:(id)arg1 info:(id)arg2;	// IMP=0x0005caf0
- (void)setLists:(id)arg1;	// IMP=0x0005cc53
- (id)previousCursor;	// IMP=0x0005ca96
- (void)setPreviousCursor:(id)arg1;	// IMP=0x0005cc17
- (id)nextCursor;	// IMP=0x0005caa1
- (void)setNextCursor:(id)arg1;	// IMP=0x0005cbdb
- (id)account;	// IMP=0x0005caac
- (void)setAccount:(id)arg1;	// IMP=0x0005cab7

@end

@interface TwitterListStream : TwitterAccountStream
{
    TwitterList *list;	// 60 = 0x3c
}

- (void)_loadNewer;	// IMP=0x0005cd22
- (void)_loadBeforeGap:(id)arg1;	// IMP=0x0005ce33
- (void)_loadOlder;	// IMP=0x0005cf4b
- (id)autosaveName;	// IMP=0x0005d05c
- (id)list;	// IMP=0x0005cd09
- (void)setList:(id)arg1;	// IMP=0x0005cd14

@end

@interface TwitterListUserList : NSObject
{
    TwitterList *list;	// 4 = 0x4
    NSString *nextCursor;	// 8 = 0x8
    NSString *previousCursor;	// 12 = 0xc
    NSArray *users;	// 16 = 0x10
}

- (void)dealloc;	// IMP=0x0005d108
- (id)users;	// IMP=0x0005d0ce
- (void)setUsers:(id)arg1;	// IMP=0x0005d1ee
- (id)previousCursor;	// IMP=0x0005d0d9
- (void)setPreviousCursor:(id)arg1;	// IMP=0x0005d1b2
- (id)nextCursor;	// IMP=0x0005d0e4
- (void)setNextCursor:(id)arg1;	// IMP=0x0005d176
- (id)list;	// IMP=0x0005d0ef
- (void)setList:(id)arg1;	// IMP=0x0005d0fa

@end

@interface TwitterPlace : NSObject <NSCoding>
{
    NSString *placeID;	// 4 = 0x4
    NSString *fullName;	// 8 = 0x8
    NSString *name;	// 12 = 0xc
    NSString *streetAddress;	// 16 = 0x10
    NSDate *timestamp;	// 20 = 0x14
    int placeType;	// 24 = 0x18
    NSNumber *latitude;	// 28 = 0x1c
    NSNumber *longitude;	// 32 = 0x20
    NSString *cityID;	// 36 = 0x24
    double accuracy;	// 40 = 0x28
    NSMutableArray *boundingBox;	// 48 = 0x30
    NSMutableArray *polylines;	// 52 = 0x34
    NSMutableArray *polygonPoints;	// 56 = 0x38
    NSMutableArray *containedWithin;	// 60 = 0x3c
    int geometryType;	// 64 = 0x40
    struct {
        unsigned int fullPlace:1;
    } _flags;	// 68 = 0x44
}

+ (id)nearByPlaces;	// IMP=0x0005dc30
+ (id)currentCoordinatePlace;	// IMP=0x0005d240
+ (void)saveAutocompletePlaces:(id)arg1;	// IMP=0x0005d24c
+ (void)placesDidLoad:(id)arg1 info:(id)arg2;	// IMP=0x0005db11
+ (void)nearbyPlacesDidLoad:(id)arg1 info:(id)arg2;	// IMP=0x0005da3d
+ (void)_refreshNearbyPlacesTimeout;	// IMP=0x0005d932
+ (id)placesWithJSON:(id)arg1;	// IMP=0x0005d8ac
+ (id)placeWithJSON:(id)arg1;	// IMP=0x0005d818
+ (void)parseJSON:(id)arg1 info:(id)arg2;	// IMP=0x0005d6e6
+ (void)parsePlacesJSON:(id)arg1 info:(id)arg2;	// IMP=0x0005d64b
+ (id)placeWithDictionary:(id)arg1;	// IMP=0x0005d3f1
+ (id)globalGeoSearchParams:(id)arg1;	// IMP=0x0005d388
- (void)saveAutocompletePlace;	// IMP=0x0005d247
- (id)init;	// IMP=0x0005d35b
- (id)initCoordinateWithLatitude:(double)arg1 andLongitude:(double)arg2;	// IMP=0x0005f7ef
- (id)initWithCoder:(id)arg1;	// IMP=0x0005f597
- (void)encodeWithCoder:(id)arg1;	// IMP=0x0005f3f1
- (void)dealloc;	// IMP=0x0005f2db
- (double)distanceToLatitude:(double)arg1 longitude:(double)arg2;	// IMP=0x0005f25f
- (double)distanceToPlace:(id)arg1;	// IMP=0x0005f1e7
- (void)parsePlaceXML:(id)arg1 info:(id)arg2;	// IMP=0x0005ef79
- (void)parsePlaceJSON:(id)arg1 info:(id)arg2;	// IMP=0x0005eb72
- (void)parsePolylines:(id)arg1 info:(id)arg2;	// IMP=0x0005eaeb
- (void)parseBoundingBoxJSON:(id)arg1 info:(id)arg2;	// IMP=0x0005e9e9
- (void)parseCoordinatesArrayJSON:(id)arg1 info:(id)arg2;	// IMP=0x0005e8e5
- (void)parseGeometryJSON:(id)arg1 info:(id)arg2;	// IMP=0x0005e74c
- (void)prepare;	// IMP=0x0005e663
- (void)parseCoordinatesJSON:(id)arg1 info:(id)arg2;	// IMP=0x0005e57f
- (id)name;	// IMP=0x0005d251
- (id)fullName;	// IMP=0x0005d269
- (id)description;	// IMP=0x0005e534
- (id)parseXMLCallback;	// IMP=0x0005e50d
- (void)parseXML:(id)arg1 info:(id)arg2;	// IMP=0x0005e40b
- (id)placeSubtext;	// IMP=0x0005e1a0
- (id)geoSearchParams;	// IMP=0x0005e0b9
- (id)geoSearchParamsWithAutocompleteQuery:(id)arg1;	// IMP=0x0005dfc3
- (id)reverseGeocodeParams;	// IMP=0x0005df43
- (id)topPlacesParams;	// IMP=0x0005df06
- (BOOL)isFullPlace;	// IMP=0x0005d281
- (void)setIsFullPlace:(BOOL)arg1;	// IMP=0x0005d291
- (id)containedWithin;	// IMP=0x0005d2a9
- (void)setContainedWithin:(id)arg1;	// IMP=0x0005deca
- (int)geometryType;	// IMP=0x0005d2b4
- (void)setGeometryType:(int)arg1;	// IMP=0x0005d2bf
- (id)polygonPoints;	// IMP=0x0005d2cd
- (void)setPolygonPoints:(id)arg1;	// IMP=0x0005de8e
- (id)polylines;	// IMP=0x0005d2d8
- (void)setPolylines:(id)arg1;	// IMP=0x0005de52
- (id)boundingBox;	// IMP=0x0005d2e3
- (void)setBoundingBox:(id)arg1;	// IMP=0x0005de16
- (id)timestamp;	// IMP=0x0005d2ee
- (void)setTimestamp:(id)arg1;	// IMP=0x0005ddda
- (double)accuracy;	// IMP=0x0005d2f9
- (void)setAccuracy:(double)arg1;	// IMP=0x0005d304
- (id)longitude;	// IMP=0x0005d316
- (void)setLongitude:(id)arg1;	// IMP=0x0005dd9e
- (id)latitude;	// IMP=0x0005d321
- (void)setLatitude:(id)arg1;	// IMP=0x0005dd62
- (int)placeType;	// IMP=0x0005d32c
- (void)setPlaceType:(int)arg1;	// IMP=0x0005d337
- (id)streetAddress;	// IMP=0x0005d345
- (void)setStreetAddress:(id)arg1;	// IMP=0x0005dd26
- (void)setName:(id)arg1;	// IMP=0x0005dcea
- (void)setFullName:(id)arg1;	// IMP=0x0005dcae
- (id)placeID;	// IMP=0x0005d350
- (void)setPlaceID:(id)arg1;	// IMP=0x0005dc72

@end

@interface TwitterPlaceResponse : NSObject
{
    NSString *token;	// 4 = 0x4
    NSMutableArray *places;	// 8 = 0x8
}

- (id)init;	// IMP=0x0005f8e7
- (void)dealloc;	// IMP=0x0005f9c2
- (id)places;	// IMP=0x0005d22a
- (void)setPlaces:(id)arg1;	// IMP=0x0005f986
- (id)token;	// IMP=0x0005d235
- (void)setToken:(id)arg1;	// IMP=0x0005f94a

@end

@interface TwitterReceivedDirectMessagesStream : TwitterDirectMessagesStream
{
}

- (void)_loadNewer;	// IMP=0x0005fa1b
- (void)_loadOlder;	// IMP=0x0005fa90

@end

@interface TwitterRepliesStream : TwitterAccountStream
{
}

- (BOOL)shouldIndexUsersInAutocomplete;	// IMP=0x0005fb16
- (void)_loadNewer;	// IMP=0x0005fb2a
- (void)_loadBeforeGap:(id)arg1;	// IMP=0x0005fbc6
- (void)_loadOlder;	// IMP=0x0005fc6a
- (id)autosaveName;	// IMP=0x0005fd52
- (long)minStatusesToConsiderBeingGap;	// IMP=0x0005fb20
- (id)emptyStreamMessage;	// IMP=0x0005fd06

@end

@interface TwitterRetweetedByMeStream : TwitterAccountStream
{
}

- (void)_loadNewer;	// IMP=0x0005fda5
- (void)_loadBeforeGap:(id)arg1;	// IMP=0x0005fe41
- (void)_loadOlder;	// IMP=0x0005fee5
- (id)autosaveName;	// IMP=0x0005ffcd
- (id)emptyStreamMessage;	// IMP=0x0005ff81

@end

@interface TwitterRetweetedToMeStream : TwitterAccountStream
{
}

- (void)_loadNewer;	// IMP=0x00060020
- (void)_loadBeforeGap:(id)arg1;	// IMP=0x000600bc
- (void)_loadOlder;	// IMP=0x00060160
- (id)autosaveName;	// IMP=0x00060248
- (id)emptyStreamMessage;	// IMP=0x000601fc

@end

@interface TwitterRetweetsOfMeStream : TwitterAccountStream
{
}

- (void)_loadNewer;	// IMP=0x0006029b
- (void)_loadBeforeGap:(id)arg1;	// IMP=0x00060337
- (void)_loadOlder;	// IMP=0x000603db
- (id)autosaveName;	// IMP=0x000604c3
- (id)emptyStreamMessage;	// IMP=0x00060477

@end

@interface TwitterSearch : NSObject <NSCoding>
{
    TwitterAccount *account;	// 4 = 0x4
    NSString *searchID;	// 8 = 0x8
    NSString *name;	// 12 = 0xc
    NSDate *createdAt;	// 16 = 0x10
    TwitterSearchStream *stream;	// 20 = 0x14
    ABHTTPRequest *liveStream;	// 24 = 0x18
    float liveSearchStreamReconnectDelay;	// 28 = 0x1c
    BOOL droppedLastLiveStreamConnection;	// 32 = 0x20
    BOOL supportsLiveStream;	// 33 = 0x21
    struct {
        unsigned int queryChanged:1;
    } _flags;	// 36 = 0x24
}

+ (id)searchQuery:(id)arg1 account:(id)arg2 via:(id)arg3;	// IMP=0x00060ba6
+ (id)searchQuery:(id)arg1 account:(id)arg2;	// IMP=0x00060bf1
+ (id)savedSearchesWithXML:(id)arg1;	// IMP=0x000612a8
+ (void)parseSavedSearchesXML:(id)arg1 info:(id)arg2;	// IMP=0x00061310
+ (id)savedSearchWithXML:(id)arg1;	// IMP=0x00061406
+ (id)restPrefixOperators;	// IMP=0x00060c6a
- (void)setSource:(id)arg1;	// IMP=0x00060554
- (BOOL)isConnectedToLiveSearchStream;	// IMP=0x00060516
- (void)loadNewerForced:(BOOL)arg1;	// IMP=0x0006058c
- (BOOL)supportsLiveStream;	// IMP=0x00060e00
- (void)openLiveSearchStream;	// IMP=0x000611a4
- (void)didDropStream:(id)arg1 info:(id)arg2;	// IMP=0x00061550
- (void)_scheduleSearchStreamReconnectAfterDelay:(float)arg1;	// IMP=0x000605da
- (void)_cancelSearchStreamReconnect;	// IMP=0x00060616
- (void)_reopenStream;	// IMP=0x00060651
- (void)didReceiveStreamSearchResult:(id)arg1 info:(id)arg2;	// IMP=0x00060670
- (void)closeLiveSearchStream;	// IMP=0x000606a8
- (void)parseSavedSearchXML:(id)arg1 info:(id)arg2;	// IMP=0x000606e9
- (id)initWithCoder:(id)arg1;	// IMP=0x00060891
- (void)encodeWithCoder:(id)arg1;	// IMP=0x00061493
- (unsigned long)hash;	// IMP=0x00060994
- (BOOL)isEqual:(id)arg1;	// IMP=0x000609b7
- (id)stream;	// IMP=0x00060a07
- (id)query;	// IMP=0x00060a66
- (void)setQuery:(id)arg1;	// IMP=0x00060a97
- (id)geocodeQuery;	// IMP=0x00060ad4
- (void)setGeocodeQuery:(id)arg1;	// IMP=0x00060b05
- (id)displayName;	// IMP=0x00060b3d
- (void)setAccount:(id)arg1;	// IMP=0x00060b75
- (void)dealloc;	// IMP=0x0006173f
- (id)account;	// IMP=0x00060528
- (id)createdAt;	// IMP=0x00060533
- (void)setCreatedAt:(id)arg1;	// IMP=0x0006184b
- (id)searchID;	// IMP=0x0006053e
- (void)setSearchID:(id)arg1;	// IMP=0x0006180f
- (id)name;	// IMP=0x00060549
- (void)setName:(id)arg1;	// IMP=0x000617d3

@end

@interface TwitterSearchStream : TwitterAccountStream
{
    NSString *query;	// 60 = 0x3c
    NSDictionary *source;	// 64 = 0x40
    NSString *geocodeQuery;	// 68 = 0x44
    int page;	// 72 = 0x48
    NSDate *freshDate;	// 76 = 0x4c
    NSArray *searchResults;	// 80 = 0x50
    NSArray *promotedSearchResults;	// 84 = 0x54
    struct {
        unsigned int ignoreNewestStatusID:1;
    } _searchFlags;	// 88 = 0x58
}

- (void)dealloc;	// IMP=0x00061d7c
- (unsigned long)hash;	// IMP=0x0006198e
- (BOOL)isEqual:(id)arg1;	// IMP=0x000619b1
- (void)reload;	// IMP=0x00061a17
- (void)loadedSearch:(id)arg1 info:(id)arg2;	// IMP=0x00061a40
- (void)loadedPromotedSearch:(id)arg1 info:(id)arg2;	// IMP=0x00061ac8
- (void)resultsDidReturn;	// IMP=0x000620b8
- (void)_loadNewer;	// IMP=0x00061f7c
- (BOOL)supportsFillingInGaps;	// IMP=0x0006195e
- (void)_loadOlder;	// IMP=0x00061b3d
- (void)didLoadOlder;	// IMP=0x00061f4a
- (long)unseenStatusCount;	// IMP=0x00061c2f
- (BOOL)hasFreshStatuses;	// IMP=0x00061c52
- (void)noteFreshStatuses;	// IMP=0x00061ca9
- (id)autosaveName;	// IMP=0x00061eee
- (id)definitiveStatuses:(id)arg1;	// IMP=0x00061965
- (id)emptyStreamMessage;	// IMP=0x00061d06
- (id)source;	// IMP=0x0006196d
- (void)setSource:(id)arg1;	// IMP=0x00061eb2
- (id)geocodeQuery;	// IMP=0x00061978
- (void)setGeocodeQuery:(id)arg1;	// IMP=0x00061e76
- (id)query;	// IMP=0x00061983
- (void)setQuery:(id)arg1;	// IMP=0x00061e3a

@end

@interface TwitterSentDirectMessagesStream : TwitterDirectMessagesStream
{
}

- (void)_loadNewer;	// IMP=0x0006256c
- (void)_loadOlder;	// IMP=0x000625e1
- (BOOL)forceReadBit;	// IMP=0x00062562

@end

@interface TwitterSettings : NSObject
{
    BOOL geoEnabled;	// 4 = 0x4
    NSDate *lastUpdated;	// 8 = 0x8
}

+ (id)settingsWithXML:(id)arg1;	// IMP=0x0006283e
- (void)parseSettingsXML:(id)arg1 info:(id)arg2;	// IMP=0x0006268c
- (id)initWithCoder:(id)arg1;	// IMP=0x00062729
- (void)encodeWithCoder:(id)arg1;	// IMP=0x000627a2
- (void)dealloc;	// IMP=0x000627fa
- (id)lastUpdated;	// IMP=0x00062667
- (void)setLastUpdated:(id)arg1;	// IMP=0x000628f9
- (BOOL)geoEnabled;	// IMP=0x00062672
- (void)setGeoEnabled:(BOOL)arg1;	// IMP=0x0006267e

@end

@interface TwitterStatus : NSObject
{
    NSDate *lastUpdated;	// 4 = 0x4
    NSString *statusID;	// 8 = 0x8
    NSString *originalText;	// 12 = 0xc
    NSString *text;	// 16 = 0x10
    NSString *displayText;	// 20 = 0x14
    NSString *source;	// 24 = 0x18
    ABActiveTextRanges *originalTextRanges;	// 28 = 0x1c
    ABActiveTextRanges *activeTextRanges;	// 32 = 0x20
    NSArray *displayTextRanges;	// 36 = 0x24
    NSDate *date;	// 40 = 0x28
    NSDate *fakeDate;	// 44 = 0x2c
    TwitterUser *fromUser;	// 48 = 0x30
    NSMutableArray *contributors;	// 52 = 0x34
    NSString *inReplyToStatusID;	// 56 = 0x38
    GeoRSSPoint *location;	// 60 = 0x3c

    TwitterPlace *place;	// 64 = 0x40
    TwitterStatus *retweetedStatus;	// 68 = 0x44
    TwitterStatus *retweetingStatus;	// 72 = 0x48
    int recentRetweets;	// 76 = 0x4c
    TwitterEntitySet *entities;	// 80 = 0x50
    struct {
        NSArray *links;
        NSString *sourceName;
        NSString *sourceLink;
        NSString *accessibilityText;
    } _derived;	// 84 = 0x54
    struct {
        unsigned short _476;
    } _height;	// 100 = 0x64
    struct {
        unsigned int didPrepare:1;
        unsigned int isPartialStatus:1;
        unsigned int isRead:1;
        unsigned int wasSeen:1;
        unsigned int didGlobalNotification:1;
        unsigned int containsMedia:1;
        unsigned int containsMusic:1;
        unsigned int containsRED:1;
        unsigned int contains4SQ:1;
        unsigned int mentionsLoadingAccount:1;
        unsigned int favoritedByLoadingAccount:1;
        unsigned int searchResultType:2;
        unsigned int isPromoted:1;
        unsigned int hasRecordedImpression:1;
    } _flags;	// 104 = 0x68
}

+ (id)statusWithDictionary:(id)arg1;	// IMP=0x00065ffa
+ (id)statusWithXML:(id)arg1;	// IMP=0x00066f29
+ (id)statusWithJSON:(id)arg1;	// IMP=0x00066e73
+ (id)statusesWithXML:(id)arg1;	// IMP=0x00066dd6
+ (id)promotedStatusesWithJSON:(id)arg1;	// IMP=0x00066d39
+ (id)statusesWithJSON:(id)arg1;	// IMP=0x00066c9c
+ (id)statusesWithSearchJSON:(id)arg1;	// IMP=0x00066bff
- (void)setHasRecordedImpression:(BOOL)arg1;	// IMP=0x000646c3
- (BOOL)hasRecordedImpression;	// IMP=0x000646e6
- (id)originalText;	// IMP=0x000649cb
- (void)_parseEntities;	// IMP=0x0006605e
- (id)entities;	// IMP=0x00064a51
- (void)parseDictionary:(id)arg1;	// IMP=0x00064a75
- (id)init;	// IMP=0x00066b82
- (void)dealloc;	// IMP=0x000676f8
- (id)description;	// IMP=0x00064e47
- (unsigned long)hash;	// IMP=0x00064eb6
- (BOOL)isEqual:(id)arg1;	// IMP=0x00064ed9
- (id)comparableDate;	// IMP=0x00064f9a
- (long)compare:(id)arg1;	// IMP=0x00064ff8
- (void)_assimilateStatus:(id)arg1;	// IMP=0x000650c0
- (void)assimilateStatus:(id)arg1;	// IMP=0x00065330
- (int)buoyancy;	// IMP=0x000646f8
- (BOOL)isPromoted;	// IMP=0x0006470a
- (BOOL)isPopular;	// IMP=0x0006471c
- (BOOL)isNotPromoted;	// IMP=0x00064735
- (id)text;	// IMP=0x00065416
- (id)displayText;	// IMP=0x00065458
- (void)_renderDisplayText;	// IMP=0x00067399
- (id)originalTextRanges;	// IMP=0x000654b5
- (id)activeTextRanges;	// IMP=0x00065517
- (void)_updateFlags;	// IMP=0x00065579
- (void)_renderAccessibilityText;	// IMP=0x000656e1
- (void)_prepare;	// IMP=0x00065784
- (id)accessibilityText;	// IMP=0x0006474a
- (void)setText:(id)arg1;	// IMP=0x000658df
- (void)setEntities:(id)arg1;	// IMP=0x0006593b
- (BOOL)isPartialStatus;	// IMP=0x00064755
- (void)setIsPartialStatus:(BOOL)arg1;	// IMP=0x00064766
- (BOOL)isRead;	// IMP=0x00064786
- (void)setIsRead:(BOOL)arg1;	// IMP=0x00064798
- (BOOL)wasSeen;	// IMP=0x000647b9
- (void)setWasSeen:(BOOL)arg1;	// IMP=0x000647cb
- (id)twitterURL;	// IMP=0x00065979
- (BOOL)isNotADummyStatus;	// IMP=0x000647ec
- (BOOL)didGlobalNotification;	// IMP=0x000647f6
- (void)setDidGlobalNotification:(BOOL)arg1;	// IMP=0x00064808
- (BOOL)containsMedia;	// IMP=0x00064829
- (BOOL)isMusicLink;	// IMP=0x0006483b
- (BOOL)containsRED;	// IMP=0x0006484d
- (BOOL)contains4SQ;	// IMP=0x0006485f
- (BOOL)favoritedByLoadingAccount;	// IMP=0x00064871
- (BOOL)mentionsLoadingAccount;	// IMP=0x00064883
- (BOOL)isRetweet;	// IMP=0x00064895
- (BOOL)hasSubtext;	// IMP=0x000648a7
- (BOOL)isGap;	// IMP=0x000648d3
- (id)retweetedBy;	// IMP=0x00065a20
- (id)representedStatus;	// IMP=0x000648da
- (int)searchResultType;	// IMP=0x000648ea
- (void)setSearchResultType:(int)arg1;	// IMP=0x000648fc
- (BOOL)matchesSearchString:(id)arg1;	// IMP=0x00065a43
- (id)arrayOfStringsForRanges:(id)arg1 inString:(id)arg2 chopLeading:(id)arg3;	// IMP=0x000669de
- (id)links;	// IMP=0x00065ac3
- (id)usernames;	// IMP=0x00065b49
- (id)hashtags;	// IMP=0x00065bb3
- (void)_parseSource;	// IMP=0x000672ec
- (void)parseSourceXML:(id)arg1 info:(id)arg2;	// IMP=0x00065c1d
- (id)sourceName;	// IMP=0x00065d5d
- (id)sourceLink;	// IMP=0x00065d88
- (id)inReplyToUsername;	// IMP=0x00065db2
- (id)displayTextRanges;	// IMP=0x00065e07
- (void)setDisplayText:(id)arg1;	// IMP=0x000672b0
- (long)recentRetweets;	// IMP=0x00064920
- (void)setRecentRetweets:(long)arg1;	// IMP=0x0006492b
- (void)setOriginalText:(id)arg1;	// IMP=0x00067274
- (id)retweetingStatus;	// IMP=0x00064939
- (void)setRetweetingStatus:(id)arg1;	// IMP=0x00064944
- (id)retweetedStatus;	// IMP=0x00064952
- (void)setRetweetedStatus:(id)arg1;	// IMP=0x00067238
- (id)place;	// IMP=0x0006495d
- (void)setPlace:(id)arg1;	// IMP=0x000671fc
- (id)location;	// IMP=0x00064968
- (void)setLocation:(id)arg1;	// IMP=0x000671c0
- (id)inReplyToStatusID;	// IMP=0x00064973
- (void)setInReplyToStatusID:(id)arg1;	// IMP=0x00067184
- (id)contributors;	// IMP=0x0006497e
- (void)setContributors:(id)arg1;	// IMP=0x00067148
- (id)fromUser;	// IMP=0x00064989
- (void)setFromUser:(id)arg1;	// IMP=0x0006710c
- (id)fakeDate;	// IMP=0x00064994
- (void)setFakeDate:(id)arg1;	// IMP=0x000670d0
- (id)date;	// IMP=0x0006499f
- (void)setDate:(id)arg1;	// IMP=0x00067094
- (id)statusID;	// IMP=0x000649aa
- (void)setStatusID:(id)arg1;	// IMP=0x00067058
- (id)source;	// IMP=0x000649b5
- (void)setSource:(id)arg1;	// IMP=0x0006701c
- (id)lastUpdated;	// IMP=0x000649c0
- (void)setLastUpdated:(id)arg1;	// IMP=0x00066fe0

@end

@interface TwitterStatusStreamFilterUserListFilter : TwitterStatusStreamFilter
{
    NSArray *users;	// 4 = 0x4
}

- (void)dealloc;	// IMP=0x00067a9d
- (BOOL)validStatus:(id)arg1;	// IMP=0x000679ba
- (id)users;	// IMP=0x0006790a
- (void)setUsers:(id)arg1;	// IMP=0x00067ae1

@end

@interface TwitterStatusStreamFilterSimpleSearchFilter : TwitterStatusStreamFilter
{
    NSString *query;	// 4 = 0x4
}

- (BOOL)validStatus:(id)arg1;	// IMP=0x00067957
- (void)dealloc;	// IMP=0x00067a1d
- (id)query;	// IMP=0x000678ff
- (void)setQuery:(id)arg1;	// IMP=0x00067a61

@end

@interface TwitterStatusStreamFilter : NSObject
{
}

+ (id)defaultStatusStreamFilter;	// IMP=0x00067915
- (BOOL)validStatus:(id)arg1;	// IMP=0x000678f5

@end

@interface TwitterStream : NSObject
{
    double cacheTime;	// 4 = 0x4
}

- (id)statuses;	// IMP=0x00067b7c
- (void)setStatuses:(id)arg1;	// IMP=0x00067b95
- (BOOL)canLoadNewer;	// IMP=0x00067b1d
- (void)loadNewer;	// IMP=0x00067bac
- (void)loadOlder;	// IMP=0x00067bc3
- (void)fillInGap:(id)arg1;	// IMP=0x00067bda
- (BOOL)supportsFillingInGaps;	// IMP=0x00067b27
- (BOOL)hasData;	// IMP=0x00067b31
- (void)didLoadOlder;	// IMP=0x00067b38
- (id)lastUpdated;	// IMP=0x00067b3d
- (BOOL)isLoadingNewer;	// IMP=0x00067b44
- (id)autosaveName;	// IMP=0x00067b4b
- (void)noteNewTopStatusID:(id)arg1;	// IMP=0x00067b55
- (void)requestTopStatusID;	// IMP=0x00067b5a
- (id)emptyStreamMessage;	// IMP=0x00067bf1
- (double)cacheTime;	// IMP=0x00067b5f
- (void)setCacheTime:(double)arg1;	// IMP=0x00067b6a

@end

@interface TwitterSULCategory : NSObject
{
    NSString *slug;	// 4 = 0x4
    NSString *name;	// 8 = 0x8
    NSArray *users;	// 12 = 0xc
    TwitterAccount *account;	// 16 = 0x10
    struct {
        unsigned int loadingUsers:1;
    } _flags;	// 20 = 0x14
}

+ (id)parseCategoriesJSON:(id)arg1;	// IMP=0x00067e86
+ (void)parseCategoriesJSON:(id)arg1 info:(id)arg2;	// IMP=0x00067dce
- (void)dealloc;	// IMP=0x00067d60
- (void)parseCategoryJSON:(id)arg1 info:(id)arg2;	// IMP=0x00067c5e
- (void)updateUsers;	// IMP=0x00068027
- (void)didUpdateUsers:(id)arg1 info:(id)arg2;	// IMP=0x00067fdb
- (id)users;	// IMP=0x00067d35
- (id)account;	// IMP=0x00067c3d
- (void)setAccount:(id)arg1;	// IMP=0x00067f9f
- (void)setUsers:(id)arg1;	// IMP=0x00067f63
- (id)name;	// IMP=0x00067c48
- (void)setName:(id)arg1;	// IMP=0x00067f27
- (id)slug;	// IMP=0x00067c53
- (void)setSlug:(id)arg1;	// IMP=0x00067eeb

@end

@interface TwitterTimelineStream : TwitterAccountStream
{
    NSDate *lastAdDate;	// 60 = 0x3c
}

- (BOOL)shouldIndexUsersInAutocomplete;	// IMP=0x000680d6
- (void)dealloc;	// IMP=0x00068192
- (void)addStatuses:(id)arg1;	// IMP=0x000684c7
- (void)_loadNewer;	// IMP=0x000683f9
- (void)_loadBeforeGap:(id)arg1;	// IMP=0x00068351
- (void)_loadOlder;	// IMP=0x000682b1
- (id)autosaveName;	// IMP=0x0006825e
- (id)emptyStreamMessage;	// IMP=0x00068212
- (id)lastAdDate;	// IMP=0x000680e0
- (void)setLastAdDate:(id)arg1;	// IMP=0x000681d6

@end

@interface TwitterDummyAdStatus : TwitterStatus
{
    FusionAd *ad;	// 108 = 0x6c
}

- (id)init;	// IMP=0x000680eb
- (void)dealloc;	// IMP=0x0006814e
- (id)ad;	// IMP=0x000680cb

@end

@interface TwitterUser : NSObject
{
    NSDate *lastUpdated;	// 4 = 0x4
    NSString *userID;	// 8 = 0x8
    NSString *username;	// 12 = 0xc
    NSURL *profileImageURL;	// 16 = 0x10
    NSString *fullName;	// 20 = 0x14
    NSString *location;	// 24 = 0x18
    NSString *bio;	// 28 = 0x1c
    NSURL *url;	// 32 = 0x20
    NSURL *expandedURL;	// 36 = 0x24
    NSNumber *protected;	// 40 = 0x28
    NSNumber *verified;	// 44 = 0x2c
    NSNumber *numberOfFollowers;	// 48 = 0x30
    NSNumber *numberOfStatuses;	// 52 = 0x34
    NSNumber *numberOfFollowing;	// 56 = 0x38
    NSNumber *numberOfFavorites;	// 60 = 0x3c
    NSDate *createdAt;	// 64 = 0x40
    NSNumber *following;	// 68 = 0x44
    ABImage *profileImage;	// 72 = 0x48
    ABUIImage *sidebarProfileImage;	// 76 = 0x4c
    struct {
        unsigned int isPartialUser:1;
        unsigned int isLoadingProfileImage:1;
        unsigned int geoEnabled:1;
    } _flags;	// 80 = 0x50
}

+ (id)userWithDictionary:(id)arg1;	// IMP=0x0006b2dc
+ (id)userWithXML:(id)arg1;	// IMP=0x0006b237
+ (id)userWithJSON:(id)arg1;	// IMP=0x0006b192
+ (id)usersWithXML:(id)arg1;	// IMP=0x0006b106
+ (id)parseUsersJSONCallback:(id)arg1;	// IMP=0x0006b0e0
+ (id)parseUsersXMLCallback:(id)arg1;	// IMP=0x0006b0ba
+ (id)usersWithJSON:(id)arg1;	// IMP=0x0006b038
+ (void)saveAutocompleteUsers:(id)arg1;	// IMP=0x0006ae88
- (id)init;	// IMP=0x0006ae25
- (id)parseUserXMLCallback;	// IMP=0x0006c588
- (void)dealloc;	// IMP=0x0006c3ca
- (id)_profileImage;	// IMP=0x0006ad26
- (void)_assimilateUser:(id)arg1;	// IMP=0x0006c0b8
- (void)assimilateUser:(id)arg1;	// IMP=0x0006bf68
- (id)description;	// IMP=0x0006bf0e
- (id)fullName;	// IMP=0x0006ad31
- (long)compare:(id)arg1;	// IMP=0x0006be9d
- (long)compareByLastUpdated:(id)arg1;	// IMP=0x0006be50
- (unsigned long)hash;	// IMP=0x0006be2d
- (BOOL)isEqual:(id)arg1;	// IMP=0x0006bd2a
- (id)largeProfileImageURL;	// IMP=0x0006bcaa
- (BOOL)isPartialUser;	// IMP=0x0006ad43
- (void)setIsPartialUser:(BOOL)arg1;	// IMP=0x0006ad53
- (id)lowercaseUsername;	// IMP=0x0006bc87
- (BOOL)isNotADummyUser;	// IMP=0x0006ad6b
- (id)searchSpace;	// IMP=0x0006bc38
- (BOOL)matchesSearchString:(id)arg1;	// IMP=0x0006bbfd
- (id)twitterURL;	// IMP=0x0006bb88
- (id)following;	// IMP=0x0006ad75
- (void)setFollowing:(id)arg1;	// IMP=0x0006bb4c
- (id)createdAt;	// IMP=0x0006ad80
- (void)setCreatedAt:(id)arg1;	// IMP=0x0006bb10
- (id)numberOfFavorites;	// IMP=0x0006ad8b
- (void)setNumberOfFavorites:(id)arg1;	// IMP=0x0006bad4
- (id)numberOfFollowing;	// IMP=0x0006ad96
- (void)setNumberOfFollowing:(id)arg1;	// IMP=0x0006ba98
- (id)numberOfStatuses;	// IMP=0x0006ada1
- (void)setNumberOfStatuses:(id)arg1;	// IMP=0x0006ba5c
- (id)numberOfFollowers;	// IMP=0x0006adac
- (void)setNumberOfFollowers:(id)arg1;	// IMP=0x0006ba20
- (id)verified;	// IMP=0x0006adb7
- (void)setVerified:(id)arg1;	// IMP=0x0006b9e4
- (id)protected;	// IMP=0x0006adc2
- (void)setProtected:(id)arg1;	// IMP=0x0006b9a8
- (id)expandedURL;	// IMP=0x0006adcd
- (void)setExpandedURL:(id)arg1;	// IMP=0x0006b96c
- (id)url;	// IMP=0x0006add8
- (void)setUrl:(id)arg1;	// IMP=0x0006b930
- (id)bio;	// IMP=0x0006ade3
- (void)setBio:(id)arg1;	// IMP=0x0006b8f4
- (id)location;	// IMP=0x0006adee
- (void)setLocation:(id)arg1;	// IMP=0x0006b8b8
- (void)setFullName:(id)arg1;	// IMP=0x0006b87c
- (id)profileImageURL;	// IMP=0x0006adf9
- (void)setProfileImageURL:(id)arg1;	// IMP=0x0006b840
- (id)username;	// IMP=0x0006ae04
- (void)setUsername:(id)arg1;	// IMP=0x0006b804
- (id)userID;	// IMP=0x0006ae0f
- (void)setUserID:(id)arg1;	// IMP=0x0006b7c8
- (id)lastUpdated;	// IMP=0x0006ae1a
- (void)setLastUpdated:(id)arg1;	// IMP=0x0006b78c

@end

@interface TwitterUserFavoritesStream : TwitterUserStream
{
    int page;	// 64 = 0x40
}

- (void)_loadNewer;	// IMP=0x0006c631
- (void)_loadOlder;	// IMP=0x0006c6f4
- (void)didLoadOlder;	// IMP=0x0006c811
- (BOOL)supportsFillingInGaps;	// IMP=0x0006c62a
- (id)autosaveName;	// IMP=0x0006c84f
- (id)emptyStreamMessage;	// IMP=0x0006c7c5

@end

@interface TwitterUserFollowersList : TwitterUserUserList
{
}

- (void)_loadMore;	// IMP=0x0006c8a2
- (id)emptyStreamMessage;	// IMP=0x0006c924

@end

@interface TwitterUserFollowingList : TwitterUserUserList
{
}

- (void)_loadMore;	// IMP=0x0006c970
- (id)emptyStreamMessage;	// IMP=0x0006c9f2

@end

@interface TwitterUserList : NSObject
{
}

- (id)users;	// IMP=0x0006ca3e
- (void)loadMore;	// IMP=0x0006ca45

@end

@interface TwitterUserListList : TwitterListList
{
    TwitterUser *user;	// 24 = 0x18
}

- (void)dealloc;	// IMP=0x0006ca55
- (id)user;	// IMP=0x0006ca4a
- (void)setUser:(id)arg1;	// IMP=0x0006ca99

@end

@interface TwitterUserListListFollowing : TwitterUserListList
{
}

- (void)loadNextOnRequester:(id)arg1;	// IMP=0x0006cad5

@end

@interface TwitterUserListListFollows : TwitterUserListList
{
}

- (void)loadNextOnRequester:(id)arg1;	// IMP=0x0006cb11

@end

@interface TwitterUserListListLists : TwitterUserListList
{
}

- (void)loadNextOnRequester:(id)arg1;	// IMP=0x0006cb4d

@end

@interface TwitterUserRecommendation : NSObject
{
    TwitterUser *user;	// 4 = 0x4
    NSString *token;	// 8 = 0x8
    NSArray *connections;	// 12 = 0xc
}

+ (id)parseRecommendationsXML:(id)arg1;	// IMP=0x0006cf26
+ (void)parseRecommendationsXML:(id)arg1 info:(id)arg2;	// IMP=0x0006ce30
- (void)dealloc;	// IMP=0x0006cdc2
- (id)description;	// IMP=0x0006cbaa
- (void)parseRecommendationXML:(id)arg1 info:(id)arg2;	// IMP=0x0006cbf1
- (id)connections;	// IMP=0x0006cb89
- (void)setConnections:(id)arg1;	// IMP=0x0006d003
- (id)token;	// IMP=0x0006cb94
- (void)setToken:(id)arg1;	// IMP=0x0006cfc7
- (id)user;	// IMP=0x0006cb9f
- (void)setUser:(id)arg1;	// IMP=0x0006cf8b

@end

@interface TwitterUserStream : TwitterAccountStream
{
    TwitterUser *user;	// 60 = 0x3c
}

- (void)dealloc;	// IMP=0x0006d058
- (id)autosaveName;	// IMP=0x0006d0d1
- (id)emptyStreamMessage;	// IMP=0x0006d085
- (id)user;	// IMP=0x0006d03f
- (void)setUser:(id)arg1;	// IMP=0x0006d04a

@end

@interface TwitterUserTimelineStream : TwitterUserStream
{
}

- (void)_loadNewer;	// IMP=0x0006d1a3
- (void)_loadBeforeGap:(id)arg1;	// IMP=0x0006d25e
- (void)_loadOlder;	// IMP=0x0006d322
- (id)autosaveName;	// IMP=0x0006d3dd

@end

@interface TwitterDummyHeaderUser : TwitterDummyUser
{
}

@end

@interface TwitterDummyEndUser : TwitterDummyUser
{
}

@end

@interface TwitterDummyProgressUser : TwitterDummyUser
{
}

@end

@interface TwitterDummyLoadingUser : TwitterDummyUser
{
}

@end

@interface TwitterDummyUser : TwitterUser
{
}

- (BOOL)isNotADummyUser;	// IMP=0x0006d472

@end

@interface TwitterUserUserList : TwitterUserList
{
    TwitterAccount *account;	// 4 = 0x4
    TwitterUser *user;	// 8 = 0x8
    NSArray *users;	// 12 = 0xc
    NSString *cursor;	// 16 = 0x10
    int page;	// 20 = 0x14
    struct {
        unsigned int isLoading:1;
        unsigned int isAtEnd:1;
        unsigned int loadMoreLessThanMinCount:5;
    } _flags;	// 24 = 0x18
}

- (void)dealloc;	// IMP=0x0006d764
- (id)page;	// IMP=0x0006d479
- (id)receiveUsersCallback;	// IMP=0x0006d8b1
- (id)users;	// IMP=0x0006d4b5
- (void)_addUsers:(id)arg1;	// IMP=0x0006d5c3
- (void)_markAtEnd;	// IMP=0x0006d6b3
- (void)markAtEnd;	// IMP=0x0006d700
- (void)receiveUsers:(id)arg1 info:(id)arg2;	// IMP=0x0006d7a8
- (void)loadMore;	// IMP=0x0006d731
- (void)_loadMore;	// IMP=0x0006d430
- (id)cursor;	// IMP=0x0006d435
- (id)user;	// IMP=0x0006d440
- (void)setUser:(id)arg1;	// IMP=0x0006d44b
- (id)account;	// IMP=0x0006d459
- (void)setAccount:(id)arg1;	// IMP=0x0006d464

@end

@interface ABXMLParser : NSObject
{
    NSMutableArray *errors;	// 4 = 0x4
    NSMutableArray *callbacks;	// 8 = 0x8
    NSMutableString *_characters;	// 12 = 0xc
    BOOL canPushCallback;	// 16 = 0x10
    BOOL didPushCallback;	// 17 = 0x11
    NSString *elementName;	// 20 = 0x14
    NSDictionary *attributes;	// 24 = 0x18
    NSDateFormatter *httpLikeDateFormatter;	// 28 = 0x1c
}

+ (id)parseData:(id)arg1 withCallback:(id)arg2;	// IMP=0x0006d951
- (id)init;	// IMP=0x0006d8ee
- (void)dealloc;	// IMP=0x0006df4d
- (id)parseData:(id)arg1 withCallback:(id)arg2;	// IMP=0x0006de32
- (void)pushCallback:(id)arg1 repeatElement:(BOOL)arg2;	// IMP=0x0006ddc4
- (void)ignoreTag;	// IMP=0x0006dd6e
- (id)characters;	// IMP=0x0006dd11
- (void)startElement:(id)arg1 attributes:(id)arg2;	// IMP=0x0006dc73
- (void)endElement:(id)arg1;	// IMP=0x0006db8b
- (void)characters:(id)arg1;	// IMP=0x0006db2d
- (void)error:(id)arg1;	// IMP=0x0006dacf
- (BOOL)boolAttributeForKey:(id)arg1;	// IMP=0x0006da75
- (id)httpLikeDate;	// IMP=0x0006da07
- (id)attributes;	// IMP=0x0006d8d8
- (id)elementName;	// IMP=0x0006d8e3

@end

@interface TMStatusTableView : ABUITableView
{
    TMStatusListViewController *statusListViewController;	// 300 = 0x12c
}

- (void)viewDidEndLiveResize;	// IMP=0x00074098
- (void)mouseUp:(id)arg1 fromSubview:(id)arg2;	// IMP=0x000740df

@end

@interface TMStatusListViewController : ABUIViewController <ABUITableViewDelegate, ABUITableViewDataSource, ABUITextViewDelegate>
{
    TwitterAccount *account;	// 20 = 0x14
    NSArray *statuses;	// 24 = 0x18
    NSArray *setStatusesAfterTrackingEnds;	// 28 = 0x1c
    NSArray *unfilteredStatuses;	// 32 = 0x20
    ABUITableView *_tableView;	// 36 = 0x24
    ABUIView *_findView;	// 40 = 0x28
    ABUITextField *textField;	// 44 = 0x2c
    BOOL derepeaterEnabled;	// 48 = 0x30
    BOOL dimMentions;	// 49 = 0x31
    BOOL disableMyMentionsHighlighting;	// 50 = 0x32
    ABUIView *toolbar;	// 52 = 0x34
    struct {
        unsigned int state:5;
        ABUIImageView *arrow;
        ABUIImageView *refresh;
        ABUIActivityIndicatorView *spinner;
    } pullToRefresh;	// 56 = 0x38
    struct {
        float relativeOffset;
        NSString *statusID;
    } saveScrollPosition;	// 72 = 0x48
    struct {
        unsigned int findMode:1;
        unsigned int isSettingStatuses:1;
    } _flags;	// 80 = 0x50
    double lastMoveTime;	// 84 = 0x54
    NSDate *lastViewedTime;	// 92 = 0x5c
    NSTimer *refreshTimer;	// 96 = 0x60
}

+ (id)standardPullDownView;	// IMP=0x00070f91
- (void)dealloc;	// IMP=0x00071582
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x00073fb7
- (id)tableView;	// IMP=0x0006e225
- (id)toolbar;	// IMP=0x0006e230
- (id)initialFirstResponder;	// IMP=0x0006e319
- (void)loadOlder:(id)arg1;	// IMP=0x0006e23b
- (void)loadNewer:(id)arg1;	// IMP=0x0006e240
- (void)fillInGap:(id)arg1;	// IMP=0x0006e245
- (void)viewedMostRecent:(id)arg1;	// IMP=0x0006e24a
- (BOOL)isLoadingNewer;	// IMP=0x0006e24f
- (id)lastUpdated;	// IMP=0x0006e256
- (id)autosaveName;	// IMP=0x0006e25d
- (BOOL)showToolbar;	// IMP=0x0006e264
- (void)setupToolbar;	// IMP=0x0006e26b
- (void)popBack;	// IMP=0x0006e33c
- (BOOL)bleedsToTopOfWindow;	// IMP=0x0006e375
- (BOOL)bleedsToBottomOfWindow;	// IMP=0x0006e3d8
- (id)viewForRootBounce;	// IMP=0x0006e270
- (BOOL)canPullToRefresh;	// IMP=0x0006e27b
- (id)pullDownView;	// IMP=0x0006e45b
- (void)loadView;	// IMP=0x000737fc
- (id)_defaultsScrollPositionKey;	// IMP=0x0006e981
- (BOOL)savePositionEnabled;	// IMP=0x0006e282
- (void)_saveStatusID:(id)arg1 relativeOffset:(float)arg2;	// IMP=0x0006e9c6
- (void)_getStatusID:(id *)arg1 relativeOffset:(float *)arg2;	// IMP=0x0007139c
- (void)savePosition;	// IMP=0x000735af
- (void)_reloadData;	// IMP=0x0007339b
- (void)_startFind;	// IMP=0x0006eacb
- (void)_updateDisplayStatuses;	// IMP=0x0006ede7
- (void)textViewDidChange:(id)arg1;	// IMP=0x0006ee80
- (void)_endFind;	// IMP=0x0006eea7
- (void)performFindPanelAction:(id)arg1;	// IMP=0x0006f193
- (BOOL)textFieldShouldClear:(id)arg1;	// IMP=0x0006f233
- (id)selectedStatus;	// IMP=0x0006f282
- (void)setSelectedStatus:(id)arg1 animated:(BOOL)arg2 scrollPosition:(int)arg3;	// IMP=0x0006f30b
- (void)_tabToTable;	// IMP=0x0006f394
- (BOOL)textFieldShouldReturn:(id)arg1;	// IMP=0x0006f439
- (BOOL)textFieldShouldTabToNext:(id)arg1;	// IMP=0x0006f45d
- (id)visibleStatuses;	// IMP=0x00073226
- (BOOL)headerCellIsVisible;	// IMP=0x0006f481
- (BOOL)loadOlderCellIsVisible;	// IMP=0x000730e3
- (float)pollInterval;	// IMP=0x0006e294
- (BOOL)_prefShouldScrollToTop;	// IMP=0x0006f4e8
- (void)jumpToTop:(id)arg1;	// IMP=0x0006f527
- (void)jumpToBottom:(id)arg1;	// IMP=0x0006f552
- (void)_startTimer;	// IMP=0x00071491
- (void)_cancelTimer;	// IMP=0x0006f57d
- (void)fontDidChange:(id)arg1;	// IMP=0x0006f5c2
- (void)viewWillAppear:(BOOL)arg1;	// IMP=0x00072fd3
- (void)viewWillDisappear:(BOOL)arg1;	// IMP=0x00072f39
- (void)viewWillBeObscured:(BOOL)arg1;	// IMP=0x0006f622
- (void)viewDidAppear:(BOOL)arg1;	// IMP=0x00072f04
- (void)viewWillBeUnobscured:(BOOL)arg1;	// IMP=0x00072e7a
- (void)_endWaitSetStatuses;	// IMP=0x0006f702
- (void)setStatuses:(id)arg1;	// IMP=0x00072b1e
- (long)tableView:(id)arg1 numberOfRowsInSection:(long)arg2;	// IMP=0x0006f78e
- (float)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;	// IMP=0x0007152c
- (BOOL)isConversationList;	// IMP=0x0006e29b
- (BOOL)canViewConversation:(id)arg1;	// IMP=0x0006f7b1
- (void)viewConversation:(id)arg1;	// IMP=0x0006f807
- (id)hoveredStatusCell;	// IMP=0x000729c3
- (id)hoveredStatus;	// IMP=0x0006f94d
- (id)doViewStatusAction:(id)arg1;	// IMP=0x0006f97e
- (id)menuItemWithTitle:(id)arg1 action:(id)arg2;	// IMP=0x0006f9ab
- (BOOL)_addActiveRanges:(id)arg1 forStatus:(id)arg2 toMenu:(id)arg3;	// IMP=0x00072835
- (BOOL)_addOpenAllLinksItem:(id)arg1 toMenu:(id)arg2;	// IMP=0x0006faa6
- (BOOL)_addUserDetailsItem:(id)arg1 toMenu:(id)arg2;	// IMP=0x0006fd8f
- (BOOL)_addViewConversationItem:(id)arg1 toMenu:(id)arg2;	// IMP=0x0006ff43
- (void)addMenuItemsForStatus:(id)arg1 toMenu:(id)arg2;	// IMP=0x0007012f
- (id)actionsForStatus:(id)arg1;	// IMP=0x00070504
- (void)magicStatusDetailsForStatusCell:(id)arg1;	// IMP=0x00072507
- (void)jumpToBestStatusEntity:(id)arg1;	// IMP=0x0007059f
- (void)showStatusEntitiesMenu:(id)arg1;	// IMP=0x000705f1
- (BOOL)validateMenuItem:(id)arg1;	// IMP=0x0007228c
- (void)swipeForward:(id)arg1;	// IMP=0x00070651
- (void)doubleClickStatusCell:(id)arg1;	// IMP=0x000706e4
- (void)_setPullToRefreshState:(int)arg1;	// IMP=0x00071b7c
- (void)_updatePullToRefresh;	// IMP=0x0007071c
- (void)scrollViewDidScroll:(id)arg1;	// IMP=0x00071b39
- (void)scrollViewDidEndDragging:(id)arg1;	// IMP=0x00070841
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;	// IMP=0x0006e2a2
- (void)tableView:(id)arg1 didClickRowAtIndexPath:(id)arg2 withEvent:(id)arg3;	// IMP=0x000708b2
- (BOOL)isSpecialStatus:(id)arg1;	// IMP=0x0006e2a7
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;	// IMP=0x0007097c
- (id)topFullyVisibleStatusCell;	// IMP=0x000718ac
- (id)adjacentIndexPath:(id)arg1 direction:(long)arg2;	// IMP=0x0006e2ae
- (void)selectObjectWithID:(id)arg1;	// IMP=0x00070d24
- (void)_moveSelection:(int)arg1;	// IMP=0x000716c2
- (void)moveUp:(id)arg1;	// IMP=0x00070d76
- (void)moveDown:(id)arg1;	// IMP=0x00070d9d
- (BOOL)willPopViewController;	// IMP=0x00070dc4
- (BOOL)performKeyAction:(id)arg1;	// IMP=0x00070df3
- (BOOL)disableMyMentionsHighlighting;	// IMP=0x0006e2b5
- (void)setDisableMyMentionsHighlighting:(BOOL)arg1;	// IMP=0x0006e2c1
- (BOOL)dimMentions;	// IMP=0x0006e2cf
- (void)setDimMentions:(BOOL)arg1;	// IMP=0x0006e2db
- (BOOL)derepeaterEnabled;	// IMP=0x0006e2e9
- (void)setDerepeaterEnabled:(BOOL)arg1;	// IMP=0x0006e2f5
- (id)statuses;	// IMP=0x0006e303
- (id)account;	// IMP=0x0006e30e
- (void)setAccount:(id)arg1;	// IMP=0x00071686

@end

@interface TMEndOfStreamCell : ABUITableViewCell
{
}

- (void)drawRect:(struct CGRect)arg1;	// IMP=0x00071124

@end

@interface TweetieAccountPreferencesController : NSObject
{
    NSWindow *window;	// 4 = 0x4
    NSTableView *accountTableView;	// 8 = 0x8
    NSTextField *usernameTextField;	// 12 = 0xc
    NSTextField *passwordTextField;	// 16 = 0x10
    NSButton *accountOptionsButton;	// 20 = 0x14
    NSPanel *addAccountPanel;	// 24 = 0x18
    NSTextField *addAccountUsernameTextField;	// 28 = 0x1c
    NSTextField *addAccountPasswordTextField;	// 32 = 0x20
    NSButton *addAccountButton;	// 36 = 0x24
    NSProgressIndicator *addAccountProgressIndicator;	// 40 = 0x28
    NSButton *accountDetailsButton;	// 44 = 0x2c
    NSPanel *accountDetailsPanel;	// 48 = 0x30
    NSButton *accountFiltersButton;	// 52 = 0x34
    NSPanel *accountFiltersPanel;	// 56 = 0x38
}

- (void)accountSetDidChange:(id)arg1;	// IMP=0x00074502
- (void)awakeFromNib;	// IMP=0x000745d7
- (void)doubleClick:(id)arg1;	// IMP=0x00075025
- (long)numberOfRowsInTableView:(id)arg1;	// IMP=0x000746aa
- (id)accountForRow:(long)arg1;	// IMP=0x000746f0
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long)arg3;	// IMP=0x00074747
- (id)selectedAccount;	// IMP=0x0007483e
- (BOOL)tableView:(id)arg1 writeRows:(id)arg2 toPasteboard:(id)arg3;	// IMP=0x00074879
- (BOOL)tableView:(id)arg1 shouldEditTableColumn:(id)arg2 row:(long)arg3;	// IMP=0x00074389
- (BOOL)tableObjectsSupportCopying;	// IMP=0x00074390
- (unsigned long)tableView:(id)arg1 validateDrop:(id)arg2 proposedRow:(long)arg3 proposedDropOperation:(unsigned long)arg4;	// IMP=0x000748f2
- (BOOL)tableView:(id)arg1 acceptDrop:(id)arg2 row:(long)arg3 dropOperation:(unsigned long)arg4;	// IMP=0x00075097
- (void)_updateSelection;	// IMP=0x0007497e
- (void)tableViewSelectionDidChange:(id)arg1;	// IMP=0x00074a0f
- (void)_updateAddAccountButton;	// IMP=0x00074a2e
- (void)controlTextDidChange:(id)arg1;	// IMP=0x00074ab6
- (void)addAccount:(id)arg1;	// IMP=0x00074ad5
- (void)removeAccount:(id)arg1;	// IMP=0x00074b8d
- (void)_resetRootViewController;	// IMP=0x00074e70
- (void)removeAccountSheetDidEnd:(id)arg1 returnCode:(long)arg2 contextInfo:(id)arg3;	// IMP=0x00074ec8
- (void)accountOptions:(id)arg1;	// IMP=0x000751c7
- (void)addAccountButtonAction:(id)arg1;	// IMP=0x000754f0
- (void)cancelAddAccountButtonAction:(id)arg1;	// IMP=0x00074fb5
- (void)accountUserDidUpdate:(id)arg1;	// IMP=0x00075002
- (void)didSignIn:(id)arg1 info:(id)arg2;	// IMP=0x00075228
- (void)configureAccountFilters:(id)arg1;	// IMP=0x000759ab
- (void)dealloc;	// IMP=0x00075a19
- (id)accountTableView;	// IMP=0x0007439a

@end

@interface TweetieAccountPreferencesCell : NSTextFieldCell
{
}

- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;	// IMP=0x000743a5

@end

@interface TweetieAdvancedPreferencesController : NSObject
{
    NSButton *showAdsCheckbox;	// 4 = 0x4
}

@end

@interface TweetiePreferencesWindowController : NSWindowController
{
    SRRecorderControl *showTweetieRecorder;	// 40 = 0x28
    SRRecorderControl *newTweetRecorder;	// 44 = 0x2c
    NSView *generalView;	// 48 = 0x30
    NSView *accountsView;	// 52 = 0x34
    NSView *advancedView;	// 56 = 0x38
    NSView *developerView;	// 60 = 0x3c
    NSView *alertsView;	// 64 = 0x40
    TweetieAlertPreferencesController *alertsController;	// 68 = 0x44
    TweetieDeveloperPreferencesController *developerController;	// 72 = 0x48
    TweetieAccountPreferencesController *accountsController;	// 76 = 0x4c
}

+ (void)show;	// IMP=0x00075cfa
+ (unsigned int)newTweetHotKeyCode;	// IMP=0x00075cbe
+ (unsigned int)newTweetMods;	// IMP=0x00075c82
+ (void)restoreSavedHotKeys;	// IMP=0x00075acb
+ (void)startup;	// IMP=0x00075aac
- (void)dealloc;	// IMP=0x00075a75
- (BOOL)windowShouldClose:(id)arg1;	// IMP=0x00076d01
- (void)cancel:(id)arg1;	// IMP=0x00076cc8
- (void)_setView:(id)arg1 animate:(BOOL)arg2;	// IMP=0x00076ba2
- (void)setPrefsView:(id)arg1 windowTitle:(id)arg2;	// IMP=0x00076aae
- (void)appearancePreferencesDidChange:(id)arg1;	// IMP=0x00076a8f
- (void)general:(id)arg1;	// IMP=0x00076a4e
- (void)advanced:(id)arg1;	// IMP=0x00076a0d
- (void)accounts:(id)arg1;	// IMP=0x0007698c
- (void)alerts:(id)arg1;	// IMP=0x00076936
- (void)developer:(id)arg1;	// IMP=0x000768f5
- (void)windowDidLoad;	// IMP=0x000767db
- (id)toolbar:(id)arg1 itemForItemIdentifier:(id)arg2 willBeInsertedIntoToolbar:(BOOL)arg3;	// IMP=0x0007636c
- (BOOL)showDebugTab;	// IMP=0x00076309
- (id)_toolbarIdentifiers;	// IMP=0x0007628e
- (id)toolbarAllowedItemIdentifiers:(id)arg1;	// IMP=0x0007626f
- (id)toolbarDefaultItemIdentifiers:(id)arg1;	// IMP=0x00076250
- (id)toolbarSelectableItemIdentifiers:(id)arg1;	// IMP=0x00076231
- (void)awakeFromNib;	// IMP=0x000760fc
- (void)postPrefsDidChangeNotification;	// IMP=0x000760b5
- (void)changeDisplayPreferences:(id)arg1;	// IMP=0x00076074
- (void)shortcutRecorder:(id)arg1 keyComboDidChange:(struct _KeyCombo)arg2;	// IMP=0x00075d9f

@end

@interface TwitterApplePushDestination : NSObject
{
    int enabledFor;	// 4 = 0x4
    int availableLevels;	// 8 = 0x8
    NSDate *lastRefreshed;	// 12 = 0xc
}

+ (id)defaultApplePushDestination;	// IMP=0x000773a1
+ (id)applePushDestinationFromXML:(id)arg1;	// IMP=0x000774d3
- (void)parseApplePushDestinationXML:(id)arg1 info:(id)arg2;	// IMP=0x00076dcd
- (id)initWithCoder:(id)arg1;	// IMP=0x00077406
- (void)encodeWithCoder:(id)arg1;	// IMP=0x00076ec2
- (BOOL)messages;	// IMP=0x00076d50
- (void)setMessages:(BOOL)arg1;	// IMP=0x00076f3a
- (BOOL)tweets;	// IMP=0x00076d5e
- (void)setTweets:(BOOL)arg1;	// IMP=0x00076f6f
- (BOOL)mentionsFromFollowing;	// IMP=0x00076d6e
- (void)setMentionsFromFollowing:(BOOL)arg1;	// IMP=0x00076fa4
- (BOOL)mentionsFromAll;	// IMP=0x00076d7f
- (void)setMentionsFromAll:(BOOL)arg1;	// IMP=0x00076fd9
- (BOOL)mentions;	// IMP=0x0007700e
- (void)setMentions:(BOOL)arg1;	// IMP=0x00077053
- (BOOL)isAvailable:(int)arg1;	// IMP=0x00077120
- (BOOL)needsRefresh;	// IMP=0x0007760a
- (id)enabledSummary;	// IMP=0x0007714e
- (void)dealloc;	// IMP=0x000775c6
- (int)availableLevels;	// IMP=0x00076d90
- (void)setAvailableLevels:(int)arg1;	// IMP=0x00076d9b
- (int)enabledFor;	// IMP=0x00076da9
- (void)setEnabledFor:(int)arg1;	// IMP=0x00076db4
- (id)lastRefreshed;	// IMP=0x00076dc2
- (void)setLastRefreshed:(id)arg1;	// IMP=0x0007758a

@end

@interface Tweetie2Window : ABUINSWindow
{
    ABUINavigationBar *navigationBar;	// 144 = 0x90
    int windowMode;	// 148 = 0x94
    struct CGRect normalFrame;	// 152 = 0x98
    int normalLevel;	// 168 = 0xa8
    struct CGRect closeRect;	// 172 = 0xac
    struct CGRect minRect;	// 188 = 0xbc
    struct CGRect zoomRect;	// 204 = 0xcc
}

+ (long)windowMask;	// IMP=0x00077690
- (float)toolbarHeight;	// IMP=0x0007769a
- (void)dealloc;	// IMP=0x00077782
- (void)_fixTitlebarButtons;	// IMP=0x00078179
- (id)autosaveName;	// IMP=0x000776bd
- (BOOL)canGoFullscreen;	// IMP=0x000776c7
- (id)init;	// IMP=0x00077a39
- (void)displayPreferencesSetDidChange:(id)arg1;	// IMP=0x000776e9
- (void)windowDidResize:(id)arg1;	// IMP=0x00077722
- (BOOL)canBecomeKeyWindow;	// IMP=0x000776d1
- (BOOL)validateMenuItem:(id)arg1;	// IMP=0x000779c7
- (void)windowWillStartLiveDrag;	// IMP=0x00077741
- (void)sendEvent:(id)arg1;	// IMP=0x000778f1
- (void)ensureWindowRectIsOnScreen;	// IMP=0x000777f6
- (void)performClose:(id)arg1;	// IMP=0x00077763
- (id)navigationBar;	// IMP=0x000776db

@end

@interface ABUIDraggableNSView : ABUINSView
{
}

- (BOOL)mouseDownCanMoveWindow;	// IMP=0x0007767f
- (BOOL)isOpaque;	// IMP=0x00077689

@end

@interface TMStatusCellWithDerepeater : TMStatusCell
{
}

- (BOOL)derepeaterEnabled;	// IMP=0x0007848a

@end

@interface TMStatusCell : ABUITableViewCell <ABUIViewDelegate, ABUITextRendererDelegate>
{
    TwitterStatus *status;	// 88 = 0x58
    ABUITextRenderer *usernameRenderer;	// 92 = 0x5c
    ABUITextRenderer *dateRenderer;	// 96 = 0x60
    ABUITextRenderer *textRenderer;	// 100 = 0x64
    ABUITextRenderer *metaRenderer;	// 104 = 0x68
    TMAvatarButton *avatarOverlay;	// 108 = 0x6c
    ABUIView *userInfo;	// 112 = 0x70
    ABUIView *controls;	// 116 = 0x74
    ABUIButton *reply;	// 120 = 0x78
    ABUIButton *favorite;	// 124 = 0x7c
    ABUIButton *retweet;	// 128 = 0x80
    ABUIButton *viewConversation;	// 132 = 0x84
    TMStatusListViewController *listViewController;	// 136 = 0x88
    struct {
        unsigned int firstInList:1;
        unsigned int isSelectingWithMouse:1;
        unsigned int dim:1;
        unsigned int hasSubtext:1;
        unsigned int didDrag:1;
        unsigned int hover:1;
        unsigned int drawSuperBlue:1;
        unsigned int shouldHighlightMention:1;
        unsigned int special:1;
    } _cellFlags;	// 140 = 0x8c
}

+ (void)setupFonts;	// IMP=0x0007aece
+ (void)initialize;	// IMP=0x0007b08c
+ (float)heightForStatus:(id)arg1 inTableView:(id)arg2;	// IMP=0x0007b814
- (id)description;	// IMP=0x0007b7a6
- (void)drawUserInfo:(struct CGRect)arg1;	// IMP=0x0007ddad
- (BOOL)derepeaterEnabled;	// IMP=0x00078462
- (id)representedPasteboardObject;	// IMP=0x00078469
- (id)initWithStyle:(int)arg1 reuseIdentifier:(id)arg2;	// IMP=0x0007d1fd
- (void)dealloc;	// IMP=0x0007d084
- (struct CGRect)avatarRect;	// IMP=0x0007d028
- (BOOL)isHovered;	// IMP=0x000786b0
- (void)_layout;	// IMP=0x0007cef8
- (void)layoutSubviews;	// IMP=0x0007ceb8
- (id)derepeaterView;	// IMP=0x00078474
- (id)derepeaterIdentifier;	// IMP=0x000786ea
- (void)drawRect:(struct CGRect)arg1;	// IMP=0x0007c301
- (void)_updateAttributedStrings;	// IMP=0x00078731
- (void)setEverythingNeedsDisplay;	// IMP=0x0007c2c1
- (void)setStatus:(id)arg1;	// IMP=0x00078916
- (BOOL)hasClickableMetaText;	// IMP=0x00078adc
- (void)prepareForDisplay;	// IMP=0x0007c269
- (void)userDidUpdate:(id)arg1;	// IMP=0x00078b15
- (void)__updateWithNewHoverState;	// IMP=0x00078b60
- (void)_hoverStateChanged;	// IMP=0x00078c87
- (BOOL)canViewConversation;	// IMP=0x00078cc8
- (void)updateControls:(id)arg1;	// IMP=0x00078cf8
- (void)mouseEntered:(id)arg1;	// IMP=0x0007c209
- (void)mouseExited:(id)arg1;	// IMP=0x0007c1c2
- (void)view:(id)arg1 mouseEntered:(id)arg2;	// IMP=0x000790aa
- (void)view:(id)arg1 mouseExited:(id)arg2;	// IMP=0x000790e3
- (void)flashKeyboardActivatedHitRange:(id)arg1;	// IMP=0x00079102
- (void)mouseDown:(id)arg1;	// IMP=0x0007c145
- (void)mouseDragged:(id)arg1;	// IMP=0x0007c0c1
- (void)mouseUp:(id)arg1;	// IMP=0x0007beb1
- (id)activeRangesForTextRenderer:(id)arg1;	// IMP=0x00079278
- (void)setSelected:(BOOL)arg1 animated:(BOOL)arg2;	// IMP=0x0007bd18
- (id)menuForEvent:(id)arg1;	// IMP=0x000793c2
- (BOOL)mine;	// IMP=0x0007a25b
- (BOOL)canBlock;	// IMP=0x0007a29f
- (BOOL)canRetweet;	// IMP=0x0007a308
- (BOOL)validateMenuItem:(id)arg1;	// IMP=0x0007a3de
- (void)copy:(id)arg1;	// IMP=0x0007a47a
- (void)copyLinkToTweet:(id)arg1;	// IMP=0x0007a509
- (id)_baseAlert;	// IMP=0x0007bbbf
- (void)block:(id)arg1;	// IMP=0x0007a5ac
- (void)blockSheetDidEnd:(id)arg1 returnCode:(long)arg2 contextInfo:(void *)arg3;	// IMP=0x0007a853
- (void)delete:(id)arg1;	// IMP=0x0007a8c5
- (void)deleteSheetDidEnd:(id)arg1 returnCode:(long)arg2 contextInfo:(void *)arg3;	// IMP=0x0007aa47
- (void)endPasteboardDragging:(unsigned long)arg1;	// IMP=0x0007aa91
- (void)viewTweetSource:(id)arg1;	// IMP=0x0007aabf
- (void)viewOnWeb:(id)arg1;	// IMP=0x0007ab15
- (void)userDetails:(id)arg1;	// IMP=0x0007ab91
- (void)reply:(id)arg1;	// IMP=0x0007bb22
- (void)directMessage:(id)arg1;	// IMP=0x0007ba5f
- (void)favorite:(id)arg1;	// IMP=0x0007ac0d
- (void)retweet:(id)arg1;	// IMP=0x0007ac88
- (void)retweetSheetDidEnd:(id)arg1 returnCode:(long)arg2 contextInfo:(void *)arg3;	// IMP=0x0007ae2d
- (void)quoteTweet:(id)arg1;	// IMP=0x0007b9c2
- (void)viewConversation:(id)arg1;	// IMP=0x0007ae90
- (id)status;	// IMP=0x0007847f

@end

@interface TMStatusStreamViewController : TMStatusListViewController
{
    TwitterStream *statusStream;	// 100 = 0x64
    id viewedMostRecent;	// 104 = 0x68
    struct {
        unsigned int once:1;
    } _streamFlags;	// 108 = 0x6c
}

- (void)dealloc;	// IMP=0x0007e6ed
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x0007ea19
- (void)loadOlder:(id)arg1;	// IMP=0x0007e44e
- (void)loadNewer:(id)arg1;	// IMP=0x0007e4a8
- (void)fillInGap:(id)arg1;	// IMP=0x0007e4d9
- (void)viewedMostRecent:(id)arg1;	// IMP=0x0007e41d
- (BOOL)isLoadingNewer;	// IMP=0x0007e511
- (id)lastUpdated;	// IMP=0x0007e545
- (id)autosaveName;	// IMP=0x0007e576
- (void)streamDidUpdate:(id)arg1;	// IMP=0x0007e5a7
- (void)streamError:(id)arg1;	// IMP=0x0007e5f0
- (void)viewDidLoad;	// IMP=0x0007e9bf
- (BOOL)canPullToRefresh;	// IMP=0x0007e639
- (void)viewWillAppear:(BOOL)arg1;	// IMP=0x0007e84f
- (void)viewWillDisappear:(BOOL)arg1;	// IMP=0x0007e7eb
- (BOOL)isConversationList;	// IMP=0x0007e65f
- (BOOL)isSpecialStatus:(id)arg1;	// IMP=0x0007e6a2
- (id)viewedMostRecent;	// IMP=0x0007e438
- (void)setViewedMostRecent:(id)arg1;	// IMP=0x0007e7af
- (id)statusStream;	// IMP=0x0007e443
- (void)setStatusStream:(id)arg1;	// IMP=0x0007e773

@end

@interface TMColumnViewController : ABUIViewController <NSWindowDelegate>
{
    ABUINavigationBar *navigationBar;	// 20 = 0x14
    ABUIView *resizeKnob;	// 24 = 0x18
    NSMutableArray *columns;	// 28 = 0x1c
    double lastRotationTime;	// 32 = 0x20
    float totalRotation;	// 40 = 0x28
}

- (id)init;	// IMP=0x0007eae2
- (void)dealloc;	// IMP=0x0008067b
- (BOOL)isRoot:(id)arg1;	// IMP=0x00080624
- (void)loadView;	// IMP=0x000803df
- (id)viewControllers;	// IMP=0x0007eaa3
- (id)topViewController;	// IMP=0x000803bc
- (void)_updateFirstResponder:(id)arg1;	// IMP=0x0008036c
- (id)navigationItems;	// IMP=0x0008033f
- (void)openViewControllerInSatellite:(id)arg1 orderFront:(BOOL)arg2;	// IMP=0x00080248
- (void)pushViewController:(id)arg1 animated:(BOOL)arg2;	// IMP=0x0007fe40
- (void)popToViewController:(id)arg1 animated:(BOOL)arg2;	// IMP=0x0007faa5
- (void)pushViewController:(id)arg1 afterViewController:(id)arg2 animated:(BOOL)arg3;	// IMP=0x0007fa45
- (void)setRootViewController:(id)arg1 animated:(BOOL)arg2;	// IMP=0x0007f9f6
- (void)popViewControllerAnimated:(BOOL)arg1;	// IMP=0x0007f118
- (BOOL)popToRootViewControllerAnimated:(BOOL)arg1;	// IMP=0x0007f0a6
- (struct CGRect)window:(id)arg1 willPositionSheet:(id)arg2 usingRect:(struct CGRect)arg3;	// IMP=0x0007f046
- (void)magnifyWithEvent:(id)arg1;	// IMP=0x0007efdb
- (void)rotateWithEvent:(id)arg1;	// IMP=0x0007eee3
- (void)swipeWithEvent:(id)arg1;	// IMP=0x0007edbd
- (BOOL)typeAnywhereToTweet:(unsigned short)arg1;	// IMP=0x0007ecc7
- (BOOL)performKeyAction:(id)arg1;	// IMP=0x0007ebfe
- (void)tearOffTopViewController:(id)arg1;	// IMP=0x0007eb82
- (void)goToUser:(id)arg1;	// IMP=0x0007eb45
- (id)navigationBar;	// IMP=0x0007eaae
- (void)setNavigationBar:(id)arg1;	// IMP=0x0007eab9

@end

@interface TMSidebarView : ABUIView
{
    id <TMSidebarViewDelegate> delegate;	// 80 = 0x50
    ABUIScrollView *scrollView;	// 84 = 0x54
    ABUIButton *menuButton;	// 88 = 0x58
    ABUIButton *composeButton;	// 92 = 0x5c
    NSMutableArray *sectionViews;	// 96 = 0x60
    NSMutableArray *itemViews;	// 100 = 0x64
    ABUIFastIndexPath *selectedIndexPath;	// 104 = 0x68
}

- (id)_menu;	// IMP=0x00081e50
- (id)initWithFrame:(struct CGRect)arg1;	// IMP=0x0008377d
- (void)dealloc;	// IMP=0x000820dd
- (void)compose:(id)arg1;	// IMP=0x00081e86
- (void)setEverythingNeedsDisplay;	// IMP=0x000836f2
- (void)trafficClose:(id)arg1;	// IMP=0x00081ec4
- (void)trafficMinimize:(id)arg1;	// IMP=0x00081efc
- (void)trafficZoom:(id)arg1;	// IMP=0x00081f34
- (id)selectedIndexPath;	// IMP=0x00081e2c
- (void)flushOldItemViews:(id)arg1;	// IMP=0x00083612
- (void)refreshAnimationDidStop:(id)arg1 finished:(id)arg2 context:(void *)arg3;	// IMP=0x00081fa2
- (void)removeItemViews;	// IMP=0x00081fe2
- (void)reset;	// IMP=0x00082049
- (void)reloadData;	// IMP=0x00082136
- (id)delegate;	// IMP=0x00081e37
- (void)setDelegate:(id)arg1;	// IMP=0x00081e42

@end

@interface TMStatusItemMenuDelegate : NSObject <NSMenuDelegate>
{
}

@end

@interface TMRootViewController : ABUIViewController <TMSidebarViewDelegate, TwitterAccountDelegate, NSWindowDelegate, ABUINavigationBarDelegate>
{
    ABUIFastIndexPath *selectedIndexPath;	// 20 = 0x14
    TMSidebarView *sidebar;	// 24 = 0x18
    TMColumnViewController *columnViewController;	// 28 = 0x1c
    NSString *currentAccountName;	// 32 = 0x20
}

+ (id)topLineView;	// IMP=0x00083ffa
- (id)init;	// IMP=0x00083e41
- (void)dealloc;	// IMP=0x000866fd
- (void)accountSetDidChange:(id)arg1;	// IMP=0x00086597
- (void)_setNewRoot;	// IMP=0x0008615a
- (void)sidebarView:(id)arg1 didSelectSection:(int)arg2;	// IMP=0x00085ff4
- (void)_jumpVisibleColumnToTop;	// IMP=0x00085f76
- (void)_selectObjectWithIDIfNeeded;	// IMP=0x00085ecf
- (void)sidebarView:(id)arg1 didSelectRow:(id)arg2;	// IMP=0x00085da9
- (void)sidebarView:(id)arg1 doubleClickedSection:(long)arg2;	// IMP=0x00085d82
- (void)sidebarView:(id)arg1 doubleClickedRow:(id)arg2;	// IMP=0x00085cde
- (id)sidebarView:(id)arg1 imageForSection:(int)arg2;	// IMP=0x00085c6d
- (id)sidebarView:(id)arg1 titleForRow:(id)arg2;	// IMP=0x00085ab4
- (id)sidebarView:(id)arg1 titleForSection:(long)arg2;	// IMP=0x00085a55
- (int)sideBarView:(id)arg1 badgeForSection:(long)arg2;	// IMP=0x0008599b
- (int)sideBarView:(id)arg1 badgeForRow:(id)arg2;	// IMP=0x000858bc
- (void)reset;	// IMP=0x00085820
- (id)sidebarView:(id)arg1 imageNameForRow:(id)arg2;	// IMP=0x000857c9
- (id)sidebarView:(id)arg1 imageForRow:(id)arg2;	// IMP=0x00085776
- (int)numberOfSectionsInSidebarView:(id)arg1;	// IMP=0x00085730
- (int)sideBarView:(id)arg1 numberOfItemsInSection:(int)arg2;	// IMP=0x00083e03
- (int)selectedSectionInSidebarView:(id)arg1;	// IMP=0x0008570d
- (id)selectedRowInSidebarView:(id)arg1;	// IMP=0x00083e0d
- (id)selectedAccount;	// IMP=0x00085662
- (void)setSelectedAccount:(id)arg1 animated:(BOOL)arg2;	// IMP=0x000855b7
- (void)accountDidUpdate:(id)arg1;	// IMP=0x00085594
- (BOOL)validateMenuItem:(id)arg1;	// IMP=0x00085423
- (void)selectNextSection:(id)arg1;	// IMP=0x00085335
- (void)selectPreviousSection:(id)arg1;	// IMP=0x00085244
- (void)selectNextAccount:(id)arg1;	// IMP=0x000851cb
- (void)selectPreviousAccount:(id)arg1;	// IMP=0x0008514f
- (void)swipeWithEvent:(id)arg1;	// IMP=0x00085125
- (void)loadView;	// IMP=0x00084cbb
- (void)windowDidResize:(id)arg1;	// IMP=0x00084c0e
- (void)viewDidLoad;	// IMP=0x00084b92
- (struct CGRect)window:(id)arg1 willPositionSheet:(id)arg2 usingRect:(struct CGRect)arg3;	// IMP=0x00084a90
- (unsigned long)window:(id)arg1 willUseFullScreenPresentationOptions:(unsigned long)arg2;	// IMP=0x00083e18
- (void)navigationBar:(id)arg1 shouldPopItem:(id)arg2;	// IMP=0x00084a65
- (void)account:(id)arg1 didFailToPost:(id)arg2 errorMessage:(id)arg3 error:(id)arg4;	// IMP=0x000846d3
- (void)didClosePostingErrorSheet:(id)arg1 returnCode:(long)arg2 contextInfo:(id)arg3;	// IMP=0x00084639
- (void)_goToRow:(long)arg1;	// IMP=0x000845d2
- (void)accountTimeline:(id)arg1;	// IMP=0x000845ab
- (void)accountMentions:(id)arg1;	// IMP=0x00084584
- (void)accountLists:(id)arg1;	// IMP=0x0008455d
- (void)accountMessages:(id)arg1;	// IMP=0x00084536
- (void)accountProfile:(id)arg1;	// IMP=0x0008450f
- (void)accountSearch:(id)arg1;	// IMP=0x000844e8
- (void)userStreamDidError:(id)arg1;	// IMP=0x00084225
- (void)recoverFromStreamDisconnect:(id)arg1 returnCode:(long)arg2 contextInfo:(id)arg3;	// IMP=0x000840fc
- (id)currentAccountName;	// IMP=0x00083e20
- (void)setCurrentAccountName:(id)arg1;	// IMP=0x000840c0
- (id)columnViewController;	// IMP=0x00083e2b
- (id)sidebar;	// IMP=0x00083e36

@end

@interface Tweetie2App : NSApplication
{
}

- (void)sendEvent:(id)arg1;	// IMP=0x00086a31
- (BOOL)validateMenuItem:(id)arg1;	// IMP=0x00086cce
- (void)showHelp:(id)arg1;	// IMP=0x00086c72
- (void)terminate:(id)arg1;	// IMP=0x00086a65

@end

@interface TMSidebarItemView : ABUIView
{
    ABUIImage *image;	// 80 = 0x50
    NSString *imageName;	// 84 = 0x54
    BOOL sectionHeading;	// 88 = 0x58
    BOOL sectionHeadingSelected;	// 89 = 0x59
    BOOL overLight;	// 90 = 0x5a
    BOOL highlight;	// 91 = 0x5b
    int badge;	// 92 = 0x5c
    int section;	// 96 = 0x60
    ABUIFastIndexPath *indexPath;	// 100 = 0x64
    id <TMSidebarViewDelegate> delegate;	// 104 = 0x68
    ABUIView *tooltip;	// 108 = 0x6c
    ABUITextRenderer *renderer;	// 112 = 0x70
    BOOL didDrag;	// 116 = 0x74
    struct {
        unsigned int mouseDown:1;
    } _flags;	// 120 = 0x78
}

+ (void)initialize;	// IMP=0x00086ec0
- (struct CGRect)tooltipRect;	// IMP=0x00086d27
- (id)initWithFrame:(struct CGRect)arg1;	// IMP=0x000882f8
- (void)dealloc;	// IMP=0x00086e3d
- (void)setSectionHeading:(BOOL)arg1;	// IMP=0x0008829c
- (void)setSectionHeadingSelected:(BOOL)arg1;	// IMP=0x00088233
- (void)setImage:(id)arg1;	// IMP=0x000881e0
- (id)sidebarView;	// IMP=0x000881c1
- (void)drawRect:(struct CGRect)arg1;	// IMP=0x00087b84
- (void)mouseDown:(id)arg1;	// IMP=0x00087a56
- (void)mouseDragged:(id)arg1;	// IMP=0x0008797b
- (void)mouseUp:(id)arg1;	// IMP=0x0008773a
- (void)drawTooltip:(struct CGRect)arg1;	// IMP=0x00087365
- (BOOL)sectionHeadingSelected;	// IMP=0x00086d60
- (id)delegate;	// IMP=0x00086d6c
- (void)setDelegate:(id)arg1;	// IMP=0x00086d77
- (int)section;	// IMP=0x00086d85
- (void)setSection:(int)arg1;	// IMP=0x00086d90
- (id)indexPath;	// IMP=0x00086d9e
- (void)setIndexPath:(id)arg1;	// IMP=0x00087329
- (int)badge;	// IMP=0x00086da9
- (void)setBadge:(int)arg1;	// IMP=0x00086db4
- (BOOL)highlight;	// IMP=0x00086dc2
- (void)setHighlight:(BOOL)arg1;	// IMP=0x00086dce
- (BOOL)sectionHeading;	// IMP=0x00086ddc
- (id)imageName;	// IMP=0x00086de8
- (void)setImageName:(id)arg1;	// IMP=0x000872ed
- (id)image;	// IMP=0x00086df3

@end

@interface TMComposeWindowController : NSWindowController <NSWindowDelegate, NSTextViewDelegate, NSTextStorageDelegate, TMTextViewAutoCompleteDelegate, TMAutoCompleteTableView>
{
    TwitterAccount *account;	// 40 = 0x28
    BOOL warnedAboutMessageAttachments;	// 44 = 0x2c
    int spellCheckerTag;	// 48 = 0x30
    TMUserPickerSheet *userPickerSheet;	// 52 = 0x34
    int textChanges;	// 56 = 0x38
    TMAutoCompleteWindow *autocompleteWindow;	// 60 = 0x3c
    NSArray *autocompleteItems;	// 64 = 0x40
}

- (id)selectedAccount;	// IMP=0x000892d6
- (id)init;	// IMP=0x0008b042
- (void)prepareAutoCompleteMenu;	// IMP=0x0008931c
- (void)setAccount:(id)arg1;	// IMP=0x00089362
- (void)setDocument:(id)arg1;	// IMP=0x0008c81e
- (void)twitterConfigurationChanged:(id)arg1;	// IMP=0x0008c79f
- (void)didSelectAccountPopupItem:(id)arg1;	// IMP=0x000893fc
- (void)makeTextViewFirstResponder;	// IMP=0x0008949a
- (void)selectPreviousAttachmentFromIndex:(int)arg1;	// IMP=0x000894f8
- (void)selectNextAttachmentFromIndex:(int)arg1;	// IMP=0x0008c6bb
- (BOOL)isAutoCompleting;	// IMP=0x000895c8
- (void)windowDidMove:(id)arg1;	// IMP=0x0008960e
- (void)windowDidResignMain:(id)arg1;	// IMP=0x00089644
- (void)windowWillBeginSheet:(id)arg1;	// IMP=0x0008967a
- (void)windowWillMiniaturize:(id)arg1;	// IMP=0x000896b0
- (void)messageAttachmentAlertDidEnd:(id)arg1 returnCode:(long)arg2 contextInfo:(id)arg3;	// IMP=0x000896e6
- (void)attachFile:(id)arg1;	// IMP=0x0008972d
- (BOOL)handleFilenamePasteboard:(id)arg1;	// IMP=0x0008c52f
- (BOOL)attachFromPasteboard:(id)arg1;	// IMP=0x00089b22
- (void)nextMoveFrom:(int)arg1 to:(int)arg2;	// IMP=0x00089d30
- (void)moveAttachment:(id)arg1;	// IMP=0x00089df5
- (void)removeAttachmentAtIndex:(int)arg1;	// IMP=0x0008a148
- (BOOL)canHandleAttachmentFile:(id)arg1;	// IMP=0x0008c39a
- (BOOL)_isImage:(id)arg1;	// IMP=0x0008a22e
- (BOOL)_isVideo:(id)arg1;	// IMP=0x0008a2ad
- (id)composeWindow;	// IMP=0x0008a32c
- (id)composition;	// IMP=0x0008a34b
- (void)dealloc;	// IMP=0x0008c2b6
- (void)showWindow:(id)arg1;	// IMP=0x0008bdb5
- (void)updateCounter;	// IMP=0x0008a36a
- (void)postTweet;	// IMP=0x0008bb97
- (void)droppedFiles:(id)arg1;	// IMP=0x0008bb79
- (void)compositionSent:(id)arg1 info:(id)arg2;	// IMP=0x000892c6
- (void)dismissSheetDidEnd:(id)arg1 returnCode:(long)arg2 contextInfo:(void *)arg3;	// IMP=0x0008a3c8
- (void)textDidChange:(id)arg1;	// IMP=0x0008a3ee
- (void)updateAutoCompleteItems;	// IMP=0x0008a53a
- (long)numberOfRowsInTableView:(id)arg1;	// IMP=0x0008a660
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long)arg3;	// IMP=0x0008a683
- (void)textViewDidChangeSelection:(id)arg1;	// IMP=0x0008a6bf
- (void)didPauseTyping:(id)arg1;	// IMP=0x0008a72f
- (void)textViewDidConfirmAutoComplete:(id)arg1;	// IMP=0x0008a74e
- (void)completeWithItem:(id)arg1;	// IMP=0x0008a789
- (void)autoCompleteTableView:(id)arg1 didSelectAutoCompleteItem:(id)arg2;	// IMP=0x0008a96d
- (void)cancelAutocomplete;	// IMP=0x0008a993
- (void)textViewDidHighlightNextAutoComplete:(id)arg1;	// IMP=0x0008a9fd
- (void)textViewDidHighlightPreviousAutoComplete:(id)arg1;	// IMP=0x0008aa20
- (void)textViewDidCancelAutoComplete:(id)arg1;	// IMP=0x0008aa43
- (void)sizeAndPositionAutocompleteWindow;	// IMP=0x0008aa62
- (void)updateAutoComplete;	// IMP=0x0008aac5
- (void)textStorageDidProcessEditing:(id)arg1;	// IMP=0x0008b3f9
- (void)promptForUserToMessage;	// IMP=0x0008b263
- (void)canceledUserPicker:(id)arg1 info:(id)arg2;	// IMP=0x0008aca3
- (void)pickedDirectMessageUser:(id)arg1 info:(id)arg2;	// IMP=0x0008acc2
- (void)directMessageRecipientDidChange:(id)arg1;	// IMP=0x0008ad6f
- (void)didEndUserPickerSheet:(id)arg1 returnCode:(long)arg2 contextInfo:(void *)arg3;	// IMP=0x0008ada0
- (void)selectNextAccount:(id)arg1;	// IMP=0x0008ade5
- (void)selectPreviousAccount:(id)arg1;	// IMP=0x0008af13
- (id)account;	// IMP=0x000892cb

@end

@interface TMComposeWindow : ABUINSWindow
{
    TMComposeChromeView *chrome;	// 144 = 0x90
    TMTextView *textView;	// 148 = 0x94
    NSLayoutManager *layoutManager;	// 152 = 0x98
    TMComposerAvatarView *avatarView;	// 156 = 0x9c
    TMButton *closeButton;	// 160 = 0xa0
    TMButton *postButton;	// 164 = 0xa4
    TMAttachmentList *attachmentList;	// 168 = 0xa8
    NSTextField *counterView;	// 172 = 0xac
    BOOL shouldShowNipple;	// 176 = 0xb0
    int nippleDirection;	// 180 = 0xb4
    NSWindow *nipple;	// 184 = 0xb8
    struct {
        unsigned int didInitialSelect:1;
    } _flags;	// 188 = 0xbc
}

+ (id)composeWindows;	// IMP=0x0008e14b
+ (void)dissociateAllNipples;	// IMP=0x0008d3f8
+ (id)hybridDoubleAvatarForUser:(id)arg1 andUser:(id)arg2;	// IMP=0x0008d433
- (void)dealloc;	// IMP=0x0008e0ef
- (void)performClose:(id)arg1;	// IMP=0x0008cced
- (void)disableEditing;	// IMP=0x0008cd48
- (void)dissociateNipple;	// IMP=0x0008cdb8
- (BOOL)canPost;	// IMP=0x0008cdf2
- (BOOL)isDirectMessage;	// IMP=0x0008ce1b
- (void)setCanPost:(BOOL)arg1;	// IMP=0x0008ce61
- (void)enableEditing;	// IMP=0x0008ce8f
- (BOOL)validateMenuItem:(id)arg1;	// IMP=0x0008fd60
- (void)drawBackground:(struct CGRect)arg1;	// IMP=0x0008fb16
- (int)sideOfScreen;	// IMP=0x0008c9dc
- (BOOL)useCustomContentView;	// IMP=0x0008c9e3
- (id)initWithController:(id)arg1;	// IMP=0x0008e6f8
- (void)displayPreferencesSetDidChange:(id)arg1;	// IMP=0x0008ceff
- (id)normalCounterColor;	// IMP=0x0008cf38
- (id)overflowCounterColor;	// IMP=0x0008cf6a
- (void)setRemainingCharacterCount:(long)arg1;	// IMP=0x0008cfac
- (BOOL)performDragOperation:(id)arg1;	// IMP=0x0008e4ef
- (id)controller;	// IMP=0x0008d054
- (void)clickedPost:(id)arg1;	// IMP=0x0008e2d1
- (void)twitlongerSheetDidEnd:(id)arg1 returnCode:(long)arg2 contextInfo:(void *)arg3;	// IMP=0x0008d073
- (void)fitContent;	// IMP=0x0008d898
- (id)directMessageAvatar;	// IMP=0x0008d0ab
- (void)reload;	// IMP=0x0008d15d
- (BOOL)canBecomeKeyWindow;	// IMP=0x0008c9ed
- (BOOL)canBecomeMainWindow;	// IMP=0x0008c9f7
- (long)nippleDirection;	// IMP=0x0008ca01
- (void)setNippleDirection:(long)arg1;	// IMP=0x0008ca0f
- (BOOL)shouldShowNipple;	// IMP=0x0008ca20
- (void)setShouldShowNipple:(BOOL)arg1;	// IMP=0x0008ca2f
- (id)nipple;	// IMP=0x0008ca40
- (void)setNipple:(id)arg1;	// IMP=0x0008ca4e
- (id)counterView;	// IMP=0x0008ca5f
- (id)attachmentList;	// IMP=0x0008ca6d
- (id)textView;	// IMP=0x0008ca7b

@end

@interface TMTextView : NSTextView
{
    BOOL isAutoCompleting;	// 84 = 0x54
    id <TMTextViewAutoCompleteDelegate> autoCompleteDelegate;	// 88 = 0x58
}

- (id)init;	// IMP=0x0008dc1a
- (void)setEditable:(BOOL)arg1;	// IMP=0x0008e02b
- (struct _NSRange)currentWordRange;	// IMP=0x0008dfe9
- (id)currentWordString;	// IMP=0x0008cab3
- (struct CGPoint)startWordPoint;	// IMP=0x0008d760
- (BOOL)isTypingSpecialCharacter:(id)arg1;	// IMP=0x0008cb26
- (BOOL)isTypingUsername;	// IMP=0x0008cc2a
- (BOOL)isTypingHashTag;	// IMP=0x0008cc54
- (void)keyDown:(id)arg1;	// IMP=0x0008debe
- (BOOL)performDragOperation:(id)arg1;	// IMP=0x0008de13
- (id)controller;	// IMP=0x0008cc7e
- (void)paste:(id)arg1;	// IMP=0x0008dcbd
- (id)readablePasteboardTypes;	// IMP=0x0008cc9d
- (id)autoCompleteDelegate;	// IMP=0x0008c9a9
- (void)setAutoCompleteDelegate:(id)arg1;	// IMP=0x0008c9b4
- (BOOL)isAutoCompleting;	// IMP=0x0008c9c2
- (void)setIsAutoCompleting:(BOOL)arg1;	// IMP=0x0008c9ce

@end

@interface TMComposeChromeView : NSView
{
    struct CGPoint startPoint;	// 80 = 0x50
}

- (BOOL)acceptsFirstMouse:(id)arg1;	// IMP=0x0008c99f
- (void)mouseDown:(id)arg1;	// IMP=0x0008ca89
- (void)mouseDragged:(id)arg1;	// IMP=0x0008daf3

@end

@interface TMShadowView : NSView
{
}

- (void)drawRect:(struct CGRect)arg1;	// IMP=0x0008fe0c

@end

@interface TMButtonCell : NSButtonCell
{
}

- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;	// IMP=0x00090ef2
- (void)drawBezelWithFrame:(struct CGRect)arg1 inView:(id)arg2;	// IMP=0x000911d7

@end

@interface TMButton : NSButton
{
}

+ (Class)cellClass;	// IMP=0x00091e75
- (BOOL)acceptsFirstMouse:(id)arg1;	// IMP=0x00091e6e

@end

@interface TMListsViewController : ABUIViewController <ABUITableViewDelegate, ABUITableViewDataSource>
{
    TwitterAccount *account;	// 20 = 0x14
    ABUITableView *_tableView;	// 24 = 0x18
}

- (void)dealloc;	// IMP=0x000926c4
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x00092983
- (id)lists;	// IMP=0x00091f3a
- (void)viewDidLoad;	// IMP=0x000928a5
- (void)listsDidUpdate:(id)arg1;	// IMP=0x00091f5d
- (id)viewForRootBounce;	// IMP=0x00091ea2
- (void)loadView;	// IMP=0x00092771
- (long)tableView:(id)arg1 numberOfRowsInSection:(long)arg2;	// IMP=0x00091f80
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;	// IMP=0x00091fb1
- (float)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;	// IMP=0x00091ead
- (void)selectDefault:(id)arg1;	// IMP=0x00092053
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;	// IMP=0x00091eb8
- (void)tableView:(id)arg1 didClickRowAtIndexPath:(id)arg2 withEvent:(id)arg3;	// IMP=0x000920e2
- (id)account;	// IMP=0x00091ebd
- (void)setAccount:(id)arg1;	// IMP=0x00092735

@end

@interface TMListCell : ABUITableViewCell
{
    TwitterList *list;	// 88 = 0x58
}

- (void)dealloc;	// IMP=0x00092179
- (void)setList:(id)arg1;	// IMP=0x00091ec8
- (void)drawRect:(struct CGRect)arg1;	// IMP=0x00092248
- (void)mouseUp:(id)arg1;	// IMP=0x000921bd
- (id)list;	// IMP=0x00091e97

@end

@interface TMUserViewController : ABMasterViewController <TMUserFollowActionViewDelegate>
{
    TwitterAccount *account;	// 24 = 0x18
    TwitterUser *user;	// 28 = 0x1c
    NSString *username;	// 32 = 0x20
    NSString *userID;	// 36 = 0x24
    TMUserToolbarView *toolbar;	// 40 = 0x28
    TMProfileImage *avatar;	// 44 = 0x2c
    ABUIView *bottomBar;	// 48 = 0x30
    ABUIActivityIndicatorView *spinner;	// 52 = 0x34
    TMUserFollowActionView *followAction;	// 56 = 0x38
    float bottomBarHeight;	// 60 = 0x3c
    ABUITabBar *tabBar;	// 64 = 0x40
    ABUITabBarItem *tabBarTimelineItem;	// 68 = 0x44
    ABUITabBarItem *tabBarMentionsItem;	// 72 = 0x48
    ABUITabBarItem *tabBarFavoritesItem;	// 76 = 0x4c
    ABUITabBarItem *tabBarBioItem;	// 80 = 0x50
    TMStatusStreamViewController *timeline;	// 84 = 0x54
    TMStatusStreamViewController *mentions;	// 88 = 0x58
    TMStatusStreamViewController *favorites;	// 92 = 0x5c
    TMUserProfileViewController *bio;	// 96 = 0x60
    ABUIViewController *subViewController;	// 100 = 0x64
    NSError *error;	// 104 = 0x68
    BOOL iFollowThem;	// 108 = 0x6c
    BOOL theyFollowMe;	// 109 = 0x6d
    struct {
        unsigned int loading:1;
        unsigned int loadingFollowStatus:1;
        unsigned int didLoadFollowStatus:1;
        unsigned int errorLoadingFollowStatus:1;
        unsigned int errorLoading:1;
    } _flags;	// 112 = 0x70
}

+ (void)initialize;	// IMP=0x0009330c
- (void)didDoubleClickMiniProfileImage:(id)arg1;	// IMP=0x0009317b
- (BOOL)didLoadFollowStatus;	// IMP=0x00092a20
- (BOOL)isLoading;	// IMP=0x00092a33
- (void)dealloc;	// IMP=0x000931cd
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x00096a1e
- (BOOL)isEqualToViewController:(id)arg1;	// IMP=0x00096923
- (id)visibleViewControllers;	// IMP=0x000968ee
- (struct CGRect)subViewControllerRect;	// IMP=0x00096866
- (id)initialFirstResponder;	// IMP=0x00096843
- (BOOL)willPopViewController;	// IMP=0x00096812
- (void)_goTabIndex:(long)arg1;	// IMP=0x000967bc
- (void)doubleClickedProfile:(id)arg1;	// IMP=0x000967a5
- (void)nextTab:(id)arg1;	// IMP=0x0009677e
- (void)previousTab:(id)arg1;	// IMP=0x00096757
- (void)setSubViewController:(id)arg1 animated:(BOOL)arg2;	// IMP=0x00096514
- (BOOL)derepeaterEnabled;	// IMP=0x000964d5
- (void)_timeline:(BOOL)arg1;	// IMP=0x000963d1
- (void)_mentions:(BOOL)arg1;	// IMP=0x000962bf
- (void)_favorites:(BOOL)arg1;	// IMP=0x00096209
- (id)bio;	// IMP=0x0009615c
- (void)_bio:(BOOL)arg1;	// IMP=0x0009611d
- (id)username;	// IMP=0x000960d1
- (void)setUsername:(id)arg1;	// IMP=0x00096081
- (BOOL)userIsLoaded;	// IMP=0x0009604e
- (void)_firstTab;	// IMP=0x00095ff4
- (void)_loadFollowState;	// IMP=0x00095f6a
- (BOOL)isMe;	// IMP=0x00095f2a
- (BOOL)bleedsToBottomOfWindow;	// IMP=0x00095f08
- (void)_userDidLoad_afterDelay;	// IMP=0x00092a43
- (void)_updateAvatar;	// IMP=0x00095e9b
- (id)toolbarBackgroundColor;	// IMP=0x00095e69
- (void)_setupLabels;	// IMP=0x00095ad2
- (void)_userDidLoad;	// IMP=0x00094e34
- (void)clickedProfileImage:(id)arg1;	// IMP=0x00094de2
- (void)userDidUpdate:(id)arg1;	// IMP=0x00094dac
- (void)_loadUser;	// IMP=0x00094b95
- (void)userResponse:(id)arg1 info:(id)arg2;	// IMP=0x00094ad3
- (void)_updateFollowButton;	// IMP=0x00094ab0
- (void)followStatus:(id)arg1 info:(id)arg2;	// IMP=0x000949fb
- (id)viewForRootBounce;	// IMP=0x000949d8
- (id)_actionsMenu;	// IMP=0x0009448d
- (void)viewDidLoad;	// IMP=0x000943e4
- (void)loadView;	// IMP=0x000940e3
- (void)toggleFollow;	// IMP=0x000940a7
- (void)reply:(id)arg1;	// IMP=0x00094017
- (void)follow:(id)arg1;	// IMP=0x00093f9e
- (void)unfollow:(id)arg1;	// IMP=0x00093ccf
- (void)unfollowAlertDidEnd:(id)arg1 returnCode:(long)arg2 contextInfo:(void *)arg3;	// IMP=0x00093c7d
- (BOOL)canBlock;	// IMP=0x00093c3c
- (BOOL)validateMenuItem:(id)arg1;	// IMP=0x00093bac
- (void)directMessage:(id)arg1;	// IMP=0x00093b0c
- (void)userDetailsTimeline:(id)arg1;	// IMP=0x00093ae9
- (void)userDetailsMentions:(id)arg1;	// IMP=0x00093ac6
- (void)userDetailsFavorites:(id)arg1;	// IMP=0x00093aa3
- (void)userDetailsProfile:(id)arg1;	// IMP=0x00093a80
- (void)viewOnWeb:(id)arg1;	// IMP=0x00093a19
- (void)popBack;	// IMP=0x000939e0
- (id)_baseAlert;	// IMP=0x0009393b
- (void)block:(id)arg1;	// IMP=0x000936ca
- (void)blockSheetDidEnd:(id)arg1 returnCode:(long)arg2 contextInfo:(void *)arg3;	// IMP=0x00093697
- (void)spam:(id)arg1;	// IMP=0x00093442
- (void)spamSheetDidEnd:(id)arg1 returnCode:(long)arg2 contextInfo:(void *)arg3;	// IMP=0x0009340f
- (BOOL)theyFollowMe;	// IMP=0x00092aaa
- (BOOL)iFollowThem;	// IMP=0x00092ab6
- (id)userID;	// IMP=0x00092ac2
- (void)setUserID:(id)arg1;	// IMP=0x000933d3
- (id)user;	// IMP=0x00092acd
- (void)setUser:(id)arg1;	// IMP=0x00093397
- (id)error;	// IMP=0x00092ad8
- (id)account;	// IMP=0x00092ae3
- (void)setAccount:(id)arg1;	// IMP=0x0009335b

@end

@interface TMUserToolbarView : ABUIView
{
    ABUITextRenderer *nameRenderer;	// 80 = 0x50
    ABUITextRenderer *usernameRenderer;	// 84 = 0x54
    ABUITextRenderer *userIDRenderer;	// 88 = 0x58
    TMUserViewController *controller;	// 92 = 0x5c
}

- (id)initWithFrame:(struct CGRect)arg1;	// IMP=0x00092aee
- (void)dealloc;	// IMP=0x0009310d
- (void)drawRect:(struct CGRect)arg1;	// IMP=0x00092cf5
- (id)userIDRenderer;	// IMP=0x000929e6
- (id)usernameRenderer;	// IMP=0x000929f1
- (id)nameRenderer;	// IMP=0x000929fc
- (id)controller;	// IMP=0x00092a07
- (void)setController:(id)arg1;	// IMP=0x00092a12

@end

@interface TMMessagesViewController : ABUIViewController <ABUITableViewDelegate, ABUITableViewDataSource>
{
    TwitterAccount *account;	// 20 = 0x14
    ABUITableView *_tableView;	// 24 = 0x18
}

- (void)dealloc;	// IMP=0x00098149
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x00098b36
- (id)viewForRootBounce;	// IMP=0x00096e30
- (void)loadView;	// IMP=0x000989dd
- (void)viewDidLoad;	// IMP=0x000988ea
- (void)viewWillBeUnobscured:(BOOL)arg1;	// IMP=0x00098890
- (id)conversations;	// IMP=0x0009885b
- (void)conversationsDidUpdate:(id)arg1;	// IMP=0x00098838
- (long)tableView:(id)arg1 numberOfRowsInSection:(long)arg2;	// IMP=0x00098807
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;	// IMP=0x000985d0
- (float)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;	// IMP=0x00096e3b
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;	// IMP=0x00096e46
- (void)tableView:(id)arg1 didClickRowAtIndexPath:(id)arg2 withEvent:(id)arg3;	// IMP=0x000984d9
- (void)newDocument:(id)arg1;	// IMP=0x00098253
- (void)confirmDMSheetDidEnd:(id)arg1 returnCode:(long)arg2 contextInfo:(void *)arg3;	// IMP=0x000981f6
- (id)account;	// IMP=0x00096e4b
- (void)setAccount:(id)arg1;	// IMP=0x000981ba

@end

@interface TMConversationCell : ABUITableViewCell
{
    TwitterDirectMessageConversation *conversation;	// 88 = 0x58
    TwitterAccount *account;	// 92 = 0x5c
    ABUIView *disclosure;	// 96 = 0x60
}

+ (void)initialize;	// IMP=0x00096fd0
- (struct CGRect)disclosureRect;	// IMP=0x00096e56
- (id)initWithStyle:(int)arg1 reuseIdentifier:(id)arg2;	// IMP=0x00096f19
- (void)layoutSubviews;	// IMP=0x000980a0
- (void)dealloc;	// IMP=0x0009801a
- (void)setConversation:(id)arg1;	// IMP=0x00097f00
- (void)userDidUpdate:(id)arg1;	// IMP=0x00097ee1
- (struct CGRect)avatarRect;	// IMP=0x00096ebd
- (void)drawRect:(struct CGRect)arg1;	// IMP=0x0009778c
- (void)mouseEntered:(id)arg1;	// IMP=0x0009769e
- (void)mouseExited:(id)arg1;	// IMP=0x000975b0
- (id)menuForEvent:(id)arg1;	// IMP=0x0009746c
- (id)_baseAlert;	// IMP=0x00097340
- (void)delete:(id)arg1;	// IMP=0x00097126
- (void)deleteSheetDidEnd:(id)arg1 returnCode:(long)arg2 contextInfo:(void *)arg3;	// IMP=0x0009709f
- (id)account;	// IMP=0x00096e1a
- (void)setAccount:(id)arg1;	// IMP=0x00097063
- (id)conversation;	// IMP=0x00096e25

@end

@interface TMConversationViewController : ABUIViewController <ABUITableViewDelegate, ABUITableViewDataSource>
{
    TwitterAccount *account;	// 20 = 0x14
    TwitterDirectMessageConversation *conversation;	// 24 = 0x18
    ABUITableView *_tableView;	// 28 = 0x1c
    ABUIView *toolbar;	// 32 = 0x20
}

- (void)dealloc;	// IMP=0x00099358
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x00099a79
- (void)popBack;	// IMP=0x00098bb4
- (void)loadView;	// IMP=0x000998d0
- (void)_markAsRead;	// IMP=0x00098bed
- (void)_scrollToBottom;	// IMP=0x00098c75
- (void)fontDidChange:(id)arg1;	// IMP=0x00098ca8
- (void)viewWillAppear:(BOOL)arg1;	// IMP=0x0009982a
- (void)viewWillDisappear:(BOOL)arg1;	// IMP=0x000997b2
- (void)viewDidLoad;	// IMP=0x000995ca
- (void)didBecomeMain:(id)arg1;	// IMP=0x00098ccb
- (BOOL)_isTopViewController;	// IMP=0x00098d4c
- (void)conversationDidUpdate:(id)arg1;	// IMP=0x00098d98
- (id)messages;	// IMP=0x00098e5c
- (long)tableView:(id)arg1 numberOfRowsInSection:(long)arg2;	// IMP=0x00098e7f
- (BOOL)prevFlipped:(long)arg1;	// IMP=0x00098eb1
- (BOOL)nextFlipped:(long)arg1;	// IMP=0x00098f51
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;	// IMP=0x00099003
- (float)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;	// IMP=0x00099538
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;	// IMP=0x00098b99
- (void)reply:(id)arg1;	// IMP=0x0009949b
- (void)directMessage:(id)arg1;	// IMP=0x0009915a
- (void)newDocument:(id)arg1;	// IMP=0x00099180
- (void)confirmDMSheetDidEnd:(id)arg1 returnCode:(long)arg2 contextInfo:(void *)arg3;	// IMP=0x00099456
- (id)conversation;	// IMP=0x00098b9e
- (void)setConversation:(id)arg1;	// IMP=0x0009941a
- (id)account;	// IMP=0x00098ba9
- (void)setAccount:(id)arg1;	// IMP=0x000993de

@end

@interface TMListViewController : TMStatusStreamViewController
{
    TwitterList *list;	// 112 = 0x70
}

- (void)dealloc;	// IMP=0x00099b85
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x00099c98
- (float)pollInterval;	// IMP=0x00099b03
- (void)viewWillAppear:(BOOL)arg1;	// IMP=0x00099c48
- (void)viewWillBeUnobscured:(BOOL)arg1;	// IMP=0x00099bc9
- (void)setList:(id)arg1;	// IMP=0x00099b20
- (BOOL)showToolbar;	// IMP=0x00099b0e
- (id)list;	// IMP=0x00099b15

@end

@interface TMSearchesViewController : ABUIViewController
{
    TwitterAccount *account;	// 20 = 0x14
    ABUITextField *textField;	// 24 = 0x18
    ABRowScrollView *_scrollView;	// 28 = 0x1c
    ABRowView *_rowView;	// 32 = 0x20
    ABRowView *_savedSearchesRow;	// 36 = 0x24
    ABRowView *_trendsRow;	// 40 = 0x28
    ABRowView *_savedSearchesGap;	// 44 = 0x2c
    struct {
        unsigned int firstScrollToTop:1;
    } _searchesFlags;	// 48 = 0x30
}

- (void)dealloc;	// IMP=0x0009a2e5
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x0009ae84
- (id)initialFirstResponder;	// IMP=0x00099d11
- (void)savedSearchesDidUpdate:(id)arg1;	// IMP=0x0009abfc
- (void)trendsDidUpdate:(id)arg1;	// IMP=0x0009a9cf
- (void)viewWillDisappear:(BOOL)arg1;	// IMP=0x0009a983
- (void)viewWillBeUnobscured:(BOOL)arg1;	// IMP=0x0009a916
- (void)loadRowView;	// IMP=0x00099d34
- (id)viewForRootBounce;	// IMP=0x00099cfb
- (void)loadView;	// IMP=0x0009a418
- (void)viewDidLoad;	// IMP=0x0009a392
- (void)doSearch:(id)arg1;	// IMP=0x00099ff0
- (void)viewTrend:(id)arg1;	// IMP=0x0009a042
- (void)viewSearch:(id)arg1;	// IMP=0x0009a0c6
- (void)deleteSavedSearch:(id)arg1;	// IMP=0x0009a138
- (id)account;	// IMP=0x00099d06
- (void)setAccount:(id)arg1;	// IMP=0x0009a356

@end

@interface TMChromeButtonCell : NSButtonCell
{
}

- (struct CGRect)drawTitle:(id)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;	// IMP=0x0009aefd
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;	// IMP=0x0009af22
- (void)drawBezelWithFrame:(struct CGRect)arg1 inView:(id)arg2;	// IMP=0x0009af49

@end

@interface TMChromeButton : NSButton
{
}

+ (Class)cellClass;	// IMP=0x0009af27

@end

@interface ABUIViewNSViewContainer : ABUIView
{
    NSView *nsView;	// 80 = 0x50
}

- (id)initWithNSView:(id)arg1;	// IMP=0x0009b477
- (void)dealloc;	// IMP=0x0009b5df
- (void)layoutSubviews;	// IMP=0x0009b560

@end

@interface ABUITextView : ABUIControl
{
    id <ABUITextViewDelegate> delegate;	// 88 = 0x58
    id drawFrame;	// 92 = 0x5c
    NSString *placeholder;	// 96 = 0x60
    ABUIFont *font;	// 100 = 0x64
    ABUIColor *textColor;	// 104 = 0x68
    int textAlignment;	// 108 = 0x6c
    BOOL editable;	// 112 = 0x70
    struct ABUIEdgeInsets contentInset;	// 116 = 0x74
    ABUITextEditor *renderer;	// 132 = 0x84
    ABUIView *cursor;	// 136 = 0x88
    struct CGRect _lastTextRect;	// 140 = 0x8c
    struct {
        unsigned int delegateTextViewDidChange:1;
    } _textViewFlags;	// 156 = 0x9c
}

- (void)_updateDefaultAttributes;	// IMP=0x0009b9bc
- (Class)textEditorClass;	// IMP=0x0009bb7a
- (id)initWithFrame:(struct CGRect)arg1;	// IMP=0x0009bfe5
- (void)dealloc;	// IMP=0x0009cb3e
- (id)forwardingTargetForSelector:(SEL)arg1;	// IMP=0x0009bb9c
- (void)mouseEntered:(id)arg1;	// IMP=0x0009cae1
- (void)mouseExited:(id)arg1;	// IMP=0x0009ca96
- (void)setDelegate:(id)arg1;	// IMP=0x0009bbd9
- (id)initialFirstResponder;	// IMP=0x0009bc1e
- (void)setFont:(id)arg1;	// IMP=0x0009bc44
- (void)setTextColor:(id)arg1;	// IMP=0x0009bc93
- (void)setTextAlignment:(int)arg1;	// IMP=0x0009bce2
- (BOOL)hasText;	// IMP=0x0009bd07
- (BOOL)singleLine;	// IMP=0x0009b8e5
- (struct CGRect)textRect;	// IMP=0x0009c9ca
- (BOOL)_isKey;	// IMP=0x0009c942
- (void)drawRect:(struct CGRect)arg1;	// IMP=0x0009c296
- (void)_textDidChange;	// IMP=0x0009bda7
- (struct _NSRange)selectedRange;	// IMP=0x0009bdd7
- (void)setSelectedRange:(struct _NSRange)arg1;	// IMP=0x0009bdfd
- (id)text;	// IMP=0x0009be31
- (void)setText:(id)arg1;	// IMP=0x0009be57
- (void)selectAll:(id)arg1;	// IMP=0x0009be84
- (BOOL)acceptsFirstResponder;	// IMP=0x0009b8ec
- (id)placeholder;	// IMP=0x0009b8f6
- (void)setPlaceholder:(id)arg1;	// IMP=0x0009c25a
- (struct ABUIEdgeInsets)contentInset;	// IMP=0x0009b901
- (void)setContentInset:(struct ABUIEdgeInsets)arg1;	// IMP=0x0009b938
- (BOOL)isEditable;	// IMP=0x0009b96b
- (void)setEditable:(BOOL)arg1;	// IMP=0x0009b977
- (int)textAlignment;	// IMP=0x0009b985
- (id)textColor;	// IMP=0x0009b990
- (id)font;	// IMP=0x0009b99b
- (id)drawFrame;	// IMP=0x0009b9a6
- (void)setDrawFrame:(id)arg1;	// IMP=0x0009c21e
- (id)delegate;	// IMP=0x0009b9b1

@end

@interface ABUITableViewLoadingCell : ABUITableViewCell
{
    ABUIActivityIndicatorView *spinner;	// 88 = 0x58
}

- (void)dealloc;	// IMP=0x0009d383
- (void)prepareForReuse;	// IMP=0x0009d479
- (void)prepareForDisplay;	// IMP=0x0009d3c7

@end

@interface ABUIActivityIndicatorView : ABUIView
{
    BOOL _animating;	// 80 = 0x50
    int _activityIndicatorViewStyle;	// 84 = 0x54
    ABUIView *spinner;	// 88 = 0x58
}

- (id)initWithActivityIndicatorStyle:(int)arg1;	// IMP=0x0009d5e0
- (int)activityIndicatorViewStyle;	// IMP=0x0009d574
- (void)startAnimating;	// IMP=0x0009d75d
- (void)stopAnimating;	// IMP=0x0009d59f
- (BOOL)isAnimating;	// IMP=0x0009d57f
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;	// IMP=0x0009d58b
- (void)removeAllAnimations;	// IMP=0x0009d59a

@end

@interface TMAttachmentList : NSView
{
    TwitterComposition *composition;	// 80 = 0x50
    NSMutableArray *attachmentViews;	// 84 = 0x54
}

- (id)initWithFrame:(struct CGRect)arg1;	// IMP=0x0009dacf
- (void)removeAttachmentView:(int)arg1;	// IMP=0x0009e2a1
- (void)selectAttachment:(int)arg1;	// IMP=0x0009e24a
- (id)textView;	// IMP=0x0009e219
- (unsigned long)draggingEntered:(id)arg1;	// IMP=0x0009e1e1
- (BOOL)performDragOperation:(id)arg1;	// IMP=0x0009e1a6
- (void)reload;	// IMP=0x0009dbcd
- (void)dealloc;	// IMP=0x0009db89
- (id)attachmentViews;	// IMP=0x0009daab
- (id)composition;	// IMP=0x0009dab6
- (void)setComposition:(id)arg1;	// IMP=0x0009dac1

@end

@interface TMAttachmentView : NSView
{
    ABUIImage *image;	// 80 = 0x50
    int index;	// 84 = 0x54
}

- (void)setImage:(id)arg1;	// IMP=0x0009e349
- (unsigned long)draggingSourceOperationMaskForLocal:(BOOL)arg1;	// IMP=0x0009e2fd
- (id)controller;	// IMP=0x0009e3a5
- (id)initWithFrame:(struct CGRect)arg1;	// IMP=0x0009eb74
- (id)view:(id)arg1 stringForToolTip:(long)arg2 point:(struct CGPoint)arg3 userData:(void *)arg4;	// IMP=0x0009e3d6
- (void)mouseDragged:(id)arg1;	// IMP=0x0009e922
- (BOOL)performDragOperation:(id)arg1;	// IMP=0x0009e307
- (BOOL)prepareForDragOperation:(id)arg1;	// IMP=0x0009e311
- (unsigned long)draggingEntered:(id)arg1;	// IMP=0x0009e446
- (void)keyDown:(id)arg1;	// IMP=0x0009e4f6
- (void)draggedImage:(id)arg1 beganAt:(struct CGPoint)arg2;	// IMP=0x0009e63e
- (void)draggedImage:(id)arg1 endedAt:(struct CGPoint)arg2 operation:(unsigned long)arg3;	// IMP=0x0009e665
- (BOOL)acceptsFirstResponder;	// IMP=0x0009e31b
- (BOOL)becomeFirstResponder;	// IMP=0x0009e68c
- (BOOL)resignFirstResponder;	// IMP=0x0009e6b8
- (void)drawRect:(struct CGRect)arg1;	// IMP=0x0009e728
- (void)dealloc;	// IMP=0x0009e6e4
- (int)index;	// IMP=0x0009e325
- (void)setIndex:(int)arg1;	// IMP=0x0009e330
- (id)image;	// IMP=0x0009e33e

@end

@interface FirstLaunchWindowController : NSWindowController
{
    NSTextField *signInUsername;	// 40 = 0x28
    NSTextField *signInPassword;	// 44 = 0x2c
    NSButton *signInButton;	// 48 = 0x30
    NSProgressIndicator *signInProgress;	// 52 = 0x34
}

+ (id)firstLaunchController;	// IMP=0x0009ef94
- (void)_updateSignInButton;	// IMP=0x0009ec61
- (void)run;	// IMP=0x0009ece9
- (void)_disable;	// IMP=0x0009edc2
- (void)_enable;	// IMP=0x0009ee46
- (void)signUp:(id)arg1;	// IMP=0x0009eeca
- (void)signIn:(id)arg1;	// IMP=0x0009f1db
- (void)timeout;	// IMP=0x0009ef25
- (void)didSignIn:(id)arg1 info:(id)arg2;	// IMP=0x0009efde
- (BOOL)windowShouldClose:(id)arg1;	// IMP=0x0009ef44
- (void)controlTextDidChange:(id)arg1;	// IMP=0x0009ef75

@end

@interface ABMasterViewController : ABUIViewController
{
    BOOL viewDidAlreadyAppear;	// 20 = 0x14
}

- (id)visibleViewControllers;	// IMP=0x0009f3d2
- (void)viewDidLoad;	// IMP=0x0009f3eb
- (void)viewDidUnload;	// IMP=0x0009fa4d
- (void)viewWillAppear:(BOOL)arg1;	// IMP=0x0009f901
- (void)viewDidAppear:(BOOL)arg1;	// IMP=0x0009f7ae
- (void)viewWillDisappear:(BOOL)arg1;	// IMP=0x0009f662
- (void)viewDidDisappear:(BOOL)arg1;	// IMP=0x0009f516

@end

@interface SRSharedImageProvider : NSObject
{
}

+ (id)supportingImageWithName:(id)arg1;	// IMP=0x000a0f3a

@end

@interface SRDummyClass : NSObject
{
}

@end

@interface SRKeyCodeTransformer : NSValueTransformer
{
}

+ (void)initialize;	// IMP=0x000a1368
+ (BOOL)allowsReverseTransformation;	// IMP=0x000a130f
+ (Class)transformedValueClass;	// IMP=0x000a1346
- (id)init;	// IMP=0x000a1319
- (void)dealloc;	// IMP=0x000a247e
- (id)transformedValue:(id)arg1;	// IMP=0x000a2250
- (id)reverseTransformedValue:(id)arg1;	// IMP=0x000a21f0

@end

@interface SRRecorderCell : NSActionCell <NSCoding>
{
    NSGradient *recordingGradient;	// 36 = 0x24
    NSString *autosaveName;	// 40 = 0x28
    BOOL isRecording;	// 44 = 0x2c
    BOOL mouseInsideTrackingArea;	// 45 = 0x2d
    BOOL mouseDown;	// 46 = 0x2e
    int style;	// 48 = 0x30
    BOOL isAnimating;	// 52 = 0x34
    float transitionProgress;	// 56 = 0x38
    BOOL isAnimatingNow;	// 60 = 0x3c
    BOOL isAnimatingTowardsRecording;	// 61 = 0x3d
    BOOL comboJustChanged;	// 62 = 0x3e
    int removeTrackingRectTag;	// 64 = 0x40
    int snapbackTrackingRectTag;	// 68 = 0x44
    struct _KeyCombo keyCombo;	// 72 = 0x48
    BOOL hasKeyChars;	// 80 = 0x50
    NSString *keyChars;	// 84 = 0x54
    NSString *keyCharsIgnoringModifiers;	// 88 = 0x58
    unsigned int allowedFlags;	// 92 = 0x5c
    unsigned int requiredFlags;	// 96 = 0x60
    unsigned int recordingFlags;	// 100 = 0x64
    BOOL allowsKeyOnly;	// 104 = 0x68
    BOOL escapeKeysRecord;	// 105 = 0x69
    NSSet *cancelCharacterSet;	// 108 = 0x6c
    SRValidator *validator;	// 112 = 0x70
    id delegate;	// 116 = 0x74
    BOOL globalHotKeys;	// 120 = 0x78
    void *hotKeyModeToken;	// 124 = 0x7c
}

+ (BOOL)styleSupportsAnimation:(int)arg1;	// IMP=0x000a2588
- (id)init;	// IMP=0x000a2784
- (void)dealloc;	// IMP=0x000a5a1c
- (id)initWithCoder:(id)arg1;	// IMP=0x000a56de
- (void)encodeWithCoder:(id)arg1;	// IMP=0x000a532c
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x000a524e
- (BOOL)animates;	// IMP=0x000a2597
- (void)setAnimates:(BOOL)arg1;	// IMP=0x000a25a3
- (int)style;	// IMP=0x000a25b1
- (void)setStyle:(int)arg1;	// IMP=0x000a25bc
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;	// IMP=0x000a393f
- (void)resetTrackingRects;	// IMP=0x000a366c
- (void)mouseEntered:(id)arg1;	// IMP=0x000a35ee
- (void)mouseExited:(id)arg1;	// IMP=0x000a3570
- (BOOL)trackMouse:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 untilMouseUp:(BOOL)arg4;	// IMP=0x000a3155
- (id)delegate;	// IMP=0x000a25da
- (void)setDelegate:(id)arg1;	// IMP=0x000a25e5
- (BOOL)becomeFirstResponder;	// IMP=0x000a310c
- (BOOL)resignFirstResponder;	// IMP=0x000a30ac
- (BOOL)performKeyEquivalent:(id)arg1;	// IMP=0x000a2c06
- (void)flagsChanged:(id)arg1;	// IMP=0x000a2b9f
- (unsigned long)allowedFlags;	// IMP=0x000a25f3
- (void)setAllowedFlags:(unsigned long)arg1;	// IMP=0x000a2a91
- (BOOL)allowsKeyOnly;	// IMP=0x000a25fe
- (BOOL)escapeKeysRecord;	// IMP=0x000a260a
- (void)setAllowsKeyOnly:(BOOL)arg1 escapeKeysRecord:(BOOL)arg2;	// IMP=0x000a2616
- (unsigned long)requiredFlags;	// IMP=0x000a262a
- (void)setRequiredFlags:(unsigned long)arg1;	// IMP=0x000a2983
- (struct _KeyCombo)keyCombo;	// IMP=0x000a2635
- (void)setKeyCombo:(struct _KeyCombo)arg1;	// IMP=0x000a28c6
- (BOOL)canCaptureGlobalHotKeys;	// IMP=0x000a2643
- (void)setCanCaptureGlobalHotKeys:(BOOL)arg1;	// IMP=0x000a264f
- (id)autosaveName;	// IMP=0x000a265d
- (void)setAutosaveName:(id)arg1;	// IMP=0x000a2884
- (id)keyComboString;	// IMP=0x000a2817
- (id)keyChars;	// IMP=0x000a27f3
- (id)keyCharsIgnoringModifiers;	// IMP=0x000a27c8

@end

@interface SRRecorderControl : NSControl
{
    id delegate;	// 92 = 0x5c
}

+ (void)initialize;	// IMP=0x000a697e
+ (Class)cellClass;	// IMP=0x000a695c
- (id)initWithFrame:(struct CGRect)arg1;	// IMP=0x000a782a
- (id)initWithCoder:(id)arg1;	// IMP=0x000a77c9
- (void)encodeWithCoder:(id)arg1;	// IMP=0x000a6928
- (void)dealloc;	// IMP=0x000a776d
- (BOOL)acceptsFirstResponder;	// IMP=0x000a68fb
- (BOOL)acceptsFirstMouse:(id)arg1;	// IMP=0x000a6905
- (BOOL)becomeFirstResponder;	// IMP=0x000a76d8
- (BOOL)resignFirstResponder;	// IMP=0x000a7643
- (BOOL)animates;	// IMP=0x000a760f
- (void)setAnimates:(BOOL)arg1;	// IMP=0x000a75d6
- (int)style;	// IMP=0x000a75a5
- (void)setStyle:(int)arg1;	// IMP=0x000a756d
- (void)viewDidMoveToWindow;	// IMP=0x000a74ed
- (void)viewFrameDidChange:(id)arg1;	// IMP=0x000a74ce
- (void)setFrameSize:(struct CGSize)arg1;	// IMP=0x000a7486
- (void)setFrame:(struct CGRect)arg1;	// IMP=0x000a740a
- (id)keyChars;	// IMP=0x000a73d9
- (id)keyCharsIgnoringModifiers;	// IMP=0x000a73a8
- (BOOL)performKeyEquivalent:(id)arg1;	// IMP=0x000a72fe
- (void)flagsChanged:(id)arg1;	// IMP=0x000a72c6
- (void)keyDown:(id)arg1;	// IMP=0x000a7263
- (unsigned long)allowedFlags;	// IMP=0x000a7232
- (void)setAllowedFlags:(unsigned long)arg1;	// IMP=0x000a71fa
- (BOOL)allowsKeyOnly;	// IMP=0x000a71c6
- (void)setAllowsKeyOnly:(BOOL)arg1 escapeKeysRecord:(BOOL)arg2;	// IMP=0x000a7185
- (BOOL)escapeKeysRecord;	// IMP=0x000a7151
- (BOOL)canCaptureGlobalHotKeys;	// IMP=0x000a711d
- (void)setCanCaptureGlobalHotKeys:(BOOL)arg1;	// IMP=0x000a70e4
- (unsigned long)requiredFlags;	// IMP=0x000a70b3
- (void)setRequiredFlags:(unsigned long)arg1;	// IMP=0x000a707b
- (struct _KeyCombo)keyCombo;	// IMP=0x000a704a
- (void)setKeyCombo:(struct _KeyCombo)arg1;	// IMP=0x000a700b
- (id)objectValue;	// IMP=0x000a6f3c
- (void)setObjectValue:(id)arg1;	// IMP=0x000a6e05
- (Class)valueClassForBinding:(id)arg1;	// IMP=0x000a6d99
- (id)autosaveName;	// IMP=0x000a6d68
- (void)setAutosaveName:(id)arg1;	// IMP=0x000a6d30
- (id)keyComboString;	// IMP=0x000a6cff
- (unsigned long)cocoaToCarbonFlags:(unsigned long)arg1;	// IMP=0x000a6ce9
- (unsigned long)carbonToCocoaFlags:(unsigned long)arg1;	// IMP=0x000a6cd3
- (id)delegate;	// IMP=0x000a690f
- (void)setDelegate:(id)arg1;	// IMP=0x000a691a
- (BOOL)shortcutRecorderCell:(id)arg1 isKeyCode:(long)arg2 andFlagsTaken:(unsigned long)arg3 reason:(id *)arg4;	// IMP=0x000a6c65
- (void)shortcutRecorderCell:(id)arg1 keyComboDidChange:(struct _KeyCombo)arg2;	// IMP=0x000a69d6

@end

@interface SRValidator : NSObject
{
    id delegate;	// 4 = 0x4
}

- (id)initWithDelegate:(id)arg1;	// IMP=0x000a78eb
- (BOOL)isKeyCode:(long)arg1 andFlagsTaken:(unsigned long)arg2 error:(id *)arg3;	// IMP=0x000a7cfc
- (BOOL)isKeyCode:(long)arg1 andFlags:(unsigned long)arg2 takenInMenu:(id)arg3 error:(id *)arg4;	// IMP=0x000a793e
- (id)delegate;	// IMP=0x000a78cb
- (void)setDelegate:(id)arg1;	// IMP=0x000a78d6

@end

@interface SGHotKey : NSObject
{
    NSString *identifier;	// 4 = 0x4
    NSString *name;	// 8 = 0x8
    SGKeyCombo *keyCombo;	// 12 = 0xc
    id target;	// 16 = 0x10
    SEL action;	// 20 = 0x14
    struct EventHotKeyID hotKeyID;	// 24 = 0x18
}

- (void)dealloc;	// IMP=0x000a8433
- (id)init;	// IMP=0x000a8371
- (id)initWithIdentifier:(id)arg1 keyCombo:(id)arg2;	// IMP=0x000a863c
- (id)initWithIdentifier:(id)arg1 keyCombo:(id)arg2 target:(id)arg3 action:(SEL)arg4;	// IMP=0x000a85a0
- (BOOL)matchesHotKeyID:(struct EventHotKeyID)arg1;	// IMP=0x000a82da
- (void)invoke;	// IMP=0x000a83a0
- (void)setKeyCombo:(id)arg1;	// IMP=0x000a83f0
- (id)description;	// IMP=0x000a8519
- (struct EventHotKeyID)hotKeyID;	// IMP=0x000a82fc
- (void)setHotKeyID:(struct EventHotKeyID)arg1;	// IMP=0x000a830a
- (SEL)action;	// IMP=0x000a831e
- (void)setAction:(SEL)arg1;	// IMP=0x000a8329
- (id)target;	// IMP=0x000a8337
- (void)setTarget:(id)arg1;	// IMP=0x000a8342
- (id)keyCombo;	// IMP=0x000a8350
- (id)name;	// IMP=0x000a835b
- (void)setName:(id)arg1;	// IMP=0x000a84dd
- (id)identifier;	// IMP=0x000a8366
- (void)setIdentifier:(id)arg1;	// IMP=0x000a84a1

@end

@interface SGHotKeyCenter : NSObject
{
    NSMutableDictionary *hotKeys;	// 4 = 0x4
    BOOL eventHandlerInstalled;	// 8 = 0x8
    BOOL hasInited;	// 9 = 0x9
}

+ (void)initialize;	// IMP=0x000a884b
+ (id)sharedCenter;	// IMP=0x000a86a6
+ (id)allocWithZone:(struct _NSZone *)arg1;	// IMP=0x000a88cf
- (void)dealloc;	// IMP=0x000a888b
- (id)init;	// IMP=0x000a9135
- (BOOL)registerHotKey:(id)arg1;	// IMP=0x000a8f96
- (void)unregisterHotKey:(id)arg1;	// IMP=0x000a8e7f
- (id)allHotKeys;	// IMP=0x000a86b5
- (id)hotKeyWithIdentifier:(id)arg1;	// IMP=0x000a8d37
- (long)sendCarbonEvent:(struct OpaqueEventRef *)arg1;	// IMP=0x000a89a5
- (id)_hotKeyForCarbonHotKey:(struct OpaqueEventHotKeyRef *)arg1;	// IMP=0x000a86d8
- (struct OpaqueEventHotKeyRef *)_carbonHotKeyForHotKey:(id)arg1;	// IMP=0x000a871d
- (void)_updateEventHandler;	// IMP=0x000a8922
- (void)_hotKeyDown:(id)arg1;	// IMP=0x000a882c
- (void)_hotKeyUp:(id)arg1;	// IMP=0x000a86b0

@end

@interface SGKeyCodeTranslator : NSObject
{
    struct __TISInputSource *keyboardLayout;	// 4 = 0x4
    struct UCKeyboardLayout *keyboardLayoutData;	// 8 = 0x8
    unsigned int keyTranslateState;	// 12 = 0xc
    unsigned int deadKeyState;	// 16 = 0x10
}

+ (id)currentTranslator;	// IMP=0x000a9219
- (id)initWithKeyboardLayout:(struct __TISInputSource *)arg1;	// IMP=0x000a91bd
- (id)translateKeyCode:(short)arg1;	// IMP=0x000a92a9
- (struct __TISInputSource *)keyboardLayout;	// IMP=0x000a91a4
- (void)setKeyboardLayout:(struct __TISInputSource *)arg1;	// IMP=0x000a91af

@end

@interface SGKeyCombo : NSObject
{
    int keyCode;	// 4 = 0x4
    int modifiers;	// 8 = 0x8
}

+ (id)clearKeyCombo;	// IMP=0x000a97f2
+ (id)keyComboWithKeyCode:(long)arg1 modifiers:(long)arg2;	// IMP=0x000a97a1
+ (id)_stringForModifiers:(long)arg1;	// IMP=0x000a9720
+ (id)_keyCodesDictionary;	// IMP=0x000a95fd
+ (id)_stringForKeyCode:(short)arg1 legacyKeyCodeMap:(id)arg2;	// IMP=0x000a9589
+ (id)_stringForKeyCode:(short)arg1 newKeyCodeMap:(id)arg2;	// IMP=0x000a9456
+ (id)_stringForKeyCode:(short)arg1;	// IMP=0x000a93d9
- (id)initWithKeyCode:(long)arg1 modifiers:(long)arg2;	// IMP=0x000a939c
- (id)initWithPlistRepresentation:(id)arg1;	// IMP=0x000a9b19
- (id)plistRepresentation;	// IMP=0x000a9a6a
- (BOOL)isEqual:(id)arg1;	// IMP=0x000a99fb
- (BOOL)isClearCombo;	// IMP=0x000a9332
- (BOOL)isValidHotKeyCombo;	// IMP=0x000a934e
- (id)keyCodeString;	// IMP=0x000a9990
- (unsigned long)modifierMask;	// IMP=0x000a9936
- (id)description;	// IMP=0x000a9821
- (long)modifiers;	// IMP=0x000a936a
- (void)setModifiers:(long)arg1;	// IMP=0x000a9375
- (long)keyCode;	// IMP=0x000a9383
- (void)setKeyCode:(long)arg1;	// IMP=0x000a938e

@end

@interface DDHotKeyCenter : NSObject
{
}

+ (void)initialize;	// IMP=0x000aa882
+ (id)sharedCenter;	// IMP=0x000aa330
- (id)hotKeysMatchingPredicate:(id)arg1;	// IMP=0x000a9ef5
- (BOOL)hasRegisteredHotKeyWithKeyCode:(unsigned short)arg1 modifierFlags:(unsigned long)arg2;	// IMP=0x000a9f1e
- (BOOL)registerHotKeyWithKeyCode:(unsigned short)arg1 modifierFlags:(unsigned long)arg2 task:(id)arg3;	// IMP=0x000a9fc3
- (BOOL)registerHotKeyWithKeyCode:(unsigned short)arg1 modifierFlags:(unsigned long)arg2 target:(id)arg3 action:(SEL)arg4 object:(id)arg5;	// IMP=0x000aa0f7
- (void)unregisterHotKeysMatchingPredicate:(id)arg1;	// IMP=0x000aa724
- (void)unregisterHotKeysWithTarget:(id)arg1;	// IMP=0x000aa25b
- (void)unregisterHotKeysWithTarget:(id)arg1 action:(SEL)arg2;	// IMP=0x000aa38b
- (void)unregisterHotKeyWithKeyCode:(unsigned short)arg1 modifierFlags:(unsigned long)arg2;	// IMP=0x000aa2a5

@end

@interface DDHotKey : NSObject
{
    id target;	// 4 = 0x4
    SEL action;	// 8 = 0x8
    id object;	// 12 = 0xc
    id task;	// 16 = 0x10
    unsigned short keyCode;	// 20 = 0x14
    unsigned int modifierFlags;	// 24 = 0x18
    unsigned int hotKeyID;	// 28 = 0x1c
    NSValue *hotKeyRef;	// 32 = 0x20
}

- (void)invokeWithEvent:(id)arg1;	// IMP=0x000a9e7e
- (id)actionString;	// IMP=0x000aa372
- (BOOL)registerHotKey;	// IMP=0x000aa3e7
- (void)unregisterHotKey;	// IMP=0x000aa4a0
- (void)dealloc;	// IMP=0x000aa4e6
- (id)hotKeyRef;	// IMP=0x000aa6f7
- (void)setHotKeyRef:(id)arg1;	// IMP=0x000aa6bb
- (unsigned long)hotKeyID;	// IMP=0x000a9dd3
- (void)setHotKeyID:(unsigned long)arg1;	// IMP=0x000a9dde
- (unsigned long)modifierFlags;	// IMP=0x000a9dec
- (void)setModifierFlags:(unsigned long)arg1;	// IMP=0x000a9df7
- (unsigned short)keyCode;	// IMP=0x000a9e05
- (void)setKeyCode:(unsigned short)arg1;	// IMP=0x000a9e11
- (id)task;	// IMP=0x000aa68e
- (void)setTask:(id)arg1;	// IMP=0x000aa652
- (id)object;	// IMP=0x000aa625
- (void)setObject:(id)arg1;	// IMP=0x000aa5e9
- (SEL)action;	// IMP=0x000a9e21
- (void)setAction:(SEL)arg1;	// IMP=0x000a9e2c
- (id)target;	// IMP=0x000aa5bc
- (void)setTarget:(id)arg1;	// IMP=0x000aa580

@end

@interface EMInternetKeychainItem : EMKeychainItem
{
    NSString *mServer;	// 20 = 0x14
    NSString *mPath;	// 24 = 0x18
    int mPort;	// 28 = 0x1c
    unsigned int mProtocol;	// 32 = 0x20
}

+ (id)_internetKeychainItemWithCoreKeychainItem:(struct OpaqueSecKeychainItemRef *)arg1 forServer:(id)arg2 username:(id)arg3 password:(id)arg4 path:(id)arg5 port:(long)arg6 protocol:(unsigned long)arg7;	// IMP=0x000abaf4
+ (id)internetKeychainItemForServer:(id)arg1 withUsername:(id)arg2 path:(id)arg3 port:(long)arg4 protocol:(unsigned long)arg5;	// IMP=0x000ab809
+ (id)addInternetKeychainItemForServer:(id)arg1 withUsername:(id)arg2 password:(id)arg3 path:(id)arg4 port:(long)arg5 protocol:(unsigned long)arg6;	// IMP=0x000ab637
- (id)_initWithCoreKeychainItem:(struct OpaqueSecKeychainItemRef *)arg1 server:(id)arg2 username:(id)arg3 password:(id)arg4 path:(id)arg5 port:(long)arg6 protocol:(unsigned long)arg7;	// IMP=0x000ab5a9
- (void)dealloc;	// IMP=0x000abec0
- (void)setServer:(id)arg1;	// IMP=0x000abdb0
- (void)setPath:(id)arg1;	// IMP=0x000abd31
- (void)setPort:(long)arg1;	// IMP=0x000abc78
- (void)setProtocol:(unsigned long)arg1;	// IMP=0x000abbc5
- (unsigned long)protocol;	// IMP=0x000aa910
- (long)port;	// IMP=0x000aa91b
- (id)path;	// IMP=0x000abb98
- (id)server;	// IMP=0x000abb6b

@end

@interface EMGenericKeychainItem : EMKeychainItem
{
    NSString *mServiceName;	// 20 = 0x14
}

+ (id)_genericKeychainItemWithCoreKeychainItem:(struct OpaqueSecKeychainItemRef *)arg1 forServiceName:(id)arg2 username:(id)arg3 password:(id)arg4;	// IMP=0x000ab3c6
+ (id)genericKeychainItemForService:(id)arg1 withUsername:(id)arg2;	// IMP=0x000ab227
+ (id)addGenericKeychainItemForService:(id)arg1 withUsername:(id)arg2 password:(id)arg3;	// IMP=0x000ab0ec
- (id)_initWithCoreKeychainItem:(struct OpaqueSecKeychainItemRef *)arg1 serviceName:(id)arg2 username:(id)arg3 password:(id)arg4;	// IMP=0x000ab085
- (void)dealloc;	// IMP=0x000ab565
- (void)setServiceName:(id)arg1;	// IMP=0x000ab455
- (id)serviceName;	// IMP=0x000ab428

@end

@interface EMKeychainItem : NSObject
{
    NSString *mUsername;	// 4 = 0x4
    NSString *mPassword;	// 8 = 0x8
    NSString *mLabel;	// 12 = 0xc
    struct OpaqueSecKeychainItemRef *mCoreKeychainItem;	// 16 = 0x10
}

+ (void)lockKeychain;	// IMP=0x000aaae0
+ (void)unlockKeychain;	// IMP=0x000aaab1
+ (BOOL)logsErrors;	// IMP=0x000aaa1c
+ (void)setLogsErrors:(BOOL)arg1;	// IMP=0x000aa997
- (id)_initWithCoreKeychainItem:(struct OpaqueSecKeychainItemRef *)arg1 username:(id)arg2 password:(id)arg3;	// IMP=0x000aa926
- (void)_modifyAttributeWithTag:(unsigned long)arg1 toBeValue:(void *)arg2 ofLength:(unsigned long)arg3;	// IMP=0x000aafc0
- (void)dealloc;	// IMP=0x000aaf43
- (void)setPassword:(id)arg1;	// IMP=0x000aae47
- (void)setUsername:(id)arg1;	// IMP=0x000aad37
- (void)setLabel:(id)arg1;	// IMP=0x000aac27
- (void)removeFromKeychain;	// IMP=0x000aab7e
- (id)label;	// IMP=0x000aab51
- (id)username;	// IMP=0x000aab24
- (id)password;	// IMP=0x000aaaf7

@end

@interface TwitterPlaceEntity : NSObject <NSCoding>
{
    NSString *_placeID;	// 4 = 0x4
    int _startIndex;	// 8 = 0x8
    int _endIndex;	// 12 = 0xc
}

- (id)initWithPlaceID:(id)arg1 startIndex:(int)arg2 endIndex:(int)arg3;	// IMP=0x000aca87
- (void)dealloc;	// IMP=0x000acb97
- (id)initWithCoder:(id)arg1;	// IMP=0x000acbdb
- (void)encodeWithCoder:(id)arg1;	// IMP=0x000acad8
- (id)description;	// IMP=0x000acb50
- (int)endIndex;	// IMP=0x000aca4a
- (void)setEndIndex:(int)arg1;	// IMP=0x000aca55
- (int)startIndex;	// IMP=0x000aca63
- (void)setStartIndex:(int)arg1;	// IMP=0x000aca6e
- (id)placeID;	// IMP=0x000aca7c

@end

@interface TwitterEntityPromotedContent : TwitterEntity
{
    NSString *impressionID;	// 12 = 0xc
}

- (id)initWithCoder:(id)arg1;	// IMP=0x000acc88
- (void)encodeWithCoder:(id)arg1;	// IMP=0x000ace30
- (void)dealloc;	// IMP=0x000acdec
- (void)parseEntityJSON:(id)arg1 info:(id)arg2;	// IMP=0x000acd33
- (id)impressionID;	// IMP=0x000acc7d
- (void)setImpressionID:(id)arg1;	// IMP=0x000accf7

@end

@interface ABUITabBarItem : ABUIView
{
    id action;	// 80 = 0x50
    BOOL highlighted;	// 84 = 0x54
}

+ (id)item;	// IMP=0x000ad65f
+ (id)standardItemWithImageName:(id)arg1 action:(id)arg2;	// IMP=0x000ad6bd
- (void)dealloc;	// IMP=0x000adad9
- (id)tabBar;	// IMP=0x000ad54d
- (BOOL)isHighlighted;	// IMP=0x000ad3ef
- (BOOL)isSelected;	// IMP=0x000ad56c
- (void)setSelected;	// IMP=0x000ad5bc
- (void)mouseDown:(id)arg1;	// IMP=0x000adc26
- (void)mouseUp:(id)arg1;	// IMP=0x000adb59
- (id)action;	// IMP=0x000ad3fb
- (void)setAction:(id)arg1;	// IMP=0x000adb1d

@end

@interface ABUITabBar : ABUIView
{
    NSMutableArray *tabs;	// 80 = 0x50
    int selectedIndex;	// 84 = 0x54
}

- (void)dealloc;	// IMP=0x000ad7e5
- (void)setTabs:(id)arg1;	// IMP=0x000ad829
- (long)selectedIndex;	// IMP=0x000ad3e4
- (void)setSelectedIndex:(long)arg1;	// IMP=0x000ad406

@end

@interface TMComposerAvatarView : NSImageView
{
}

+ (id)defaultMenu;	// IMP=0x000ae17d
- (void)drawTriangleAtPoint:(struct CGPoint)arg1 width:(int)arg2 height:(int)arg3 color:(id)arg4;	// IMP=0x000ade86
- (BOOL)multipleAccounts;	// IMP=0x000adf96
- (id)composeWindowController;	// IMP=0x000adfe5
- (long)selectedAccountIndex;	// IMP=0x000ae016
- (void)mouseDown:(id)arg1;	// IMP=0x000ae08a
- (void)drawRect:(struct CGRect)arg1;	// IMP=0x000ae127

@end

@interface TMMessageCell : ABUITableViewCell <ABUITextRendererDelegate>
{
    ABUITextRenderer *dateRenderer;	// 88 = 0x58
    ABUITextRenderer *textRenderer;	// 92 = 0x5c
    TwitterDirectMessage *message;	// 96 = 0x60
    TMAvatarButton *avatarOverlay;	// 100 = 0x64
    BOOL top;	// 104 = 0x68
    BOOL bottom;	// 105 = 0x69
    TMConversationViewController *conversationViewController;	// 108 = 0x6c
    struct {
        unsigned int didDrag:1;
    } _cellFlags;	// 112 = 0x70
}

+ (void)setupFonts;	// IMP=0x000b08f3
+ (void)initialize;	// IMP=0x000b09b9
+ (float)heightForMessage:(id)arg1 inTableView:(id)arg2;	// IMP=0x000b0c06
- (BOOL)mine;	// IMP=0x000b04a3
- (struct CGRect)avatarRect;	// IMP=0x000b0b70
- (id)initWithStyle:(int)arg1 reuseIdentifier:(id)arg2;	// IMP=0x000b0d30
- (void)dealloc;	// IMP=0x000b169c
- (void)setMessage:(id)arg1;	// IMP=0x000b04e4
- (void)userDidUpdate:(id)arg1;	// IMP=0x000b05db
- (void)_updateAttributedStrings;	// IMP=0x000b05fa
- (void)mouseDown:(id)arg1;	// IMP=0x000b1638
- (void)mouseDragged:(id)arg1;	// IMP=0x000b15b7
- (void)mouseUp:(id)arg1;	// IMP=0x000b1415
- (id)activeRangesForTextRenderer:(id)arg1;	// IMP=0x000b06cf
- (void)layoutSubviews;	// IMP=0x000b13a0
- (void)prepareForDisplay;	// IMP=0x000b12e4
- (void)drawRect:(struct CGRect)arg1;	// IMP=0x000b0f43
- (void)mouseEntered:(id)arg1;	// IMP=0x000b0efc
- (void)mouseExited:(id)arg1;	// IMP=0x000b0eb5
- (void)userDetails:(id)arg1;	// IMP=0x000b0712
- (id)menuForEvent:(id)arg1;	// IMP=0x000b0779
- (BOOL)bottom;	// IMP=0x000b03d2
- (void)setBottom:(BOOL)arg1;	// IMP=0x000b03de
- (BOOL)top;	// IMP=0x000b03ec
- (void)setTop:(BOOL)arg1;	// IMP=0x000b03f8
- (id)message;	// IMP=0x000b0406

@end

@interface TMUserProfileViewController : ABRowViewController
{
    TMUserViewController *userViewController;	// 24 = 0x18
    TwitterAccount *account;	// 28 = 0x1c
    TwitterUser *user;	// 32 = 0x20
    NSObjectController *objectController;	// 36 = 0x24
    NSTextField *nameField;	// 40 = 0x28
    NSTextField *locationField;	// 44 = 0x2c
    NSTextField *urlField;	// 48 = 0x30
    NSTextField *bioField;	// 52 = 0x34
    NSButton *saveButton;	// 56 = 0x38
    NSProgressIndicator *spinner;	// 60 = 0x3c
    TMProfileImage *avatar;	// 64 = 0x40
    NSWindow *userEditSheet;	// 68 = 0x44
    struct {
        unsigned int loading:1;
        unsigned int errorLoading:1;
        unsigned int loadingFollowStatus:1;
        unsigned int errorLoadingFollowStatus:1;
        unsigned int firstScrollToTop:1;
    } _flags;	// 72 = 0x48
}

+ (id)backgroundColor;	// IMP=0x000b1bf5
- (void)setUser:(id)arg1;	// IMP=0x000b19a2
- (void)_updateAvatar;	// IMP=0x000b1a80
- (void)userDidChange:(id)arg1;	// IMP=0x000b1aed
- (void)clickedProfileImage:(id)arg1;	// IMP=0x000b1b0c
- (void)dealloc;	// IMP=0x000b1b5e
- (BOOL)isMe;	// IMP=0x000b37dc
- (id)attributedBio;	// IMP=0x000b3576
- (void)viewWillAppear:(BOOL)arg1;	// IMP=0x000b34fd
- (void)loadRowView;	// IMP=0x000b2984
- (void)tweets:(id)arg1;	// IMP=0x000b295a
- (void)favorites:(id)arg1;	// IMP=0x000b2930
- (void)viewWeb:(id)arg1;	// IMP=0x000b28ba
- (void)following:(id)arg1;	// IMP=0x000b2812
- (void)followers:(id)arg1;	// IMP=0x000b276a
- (void)editProfile:(id)arg1;	// IMP=0x000b2479
- (void)profileFieldDidChange:(id)arg1;	// IMP=0x000b245a
- (void)didEndSheet:(id)arg1 returnCode:(long)arg2 contextInfo:(void *)arg3;	// IMP=0x000b2415
- (void)cancelProfileChanges:(id)arg1;	// IMP=0x000b23d4
- (void)validate;	// IMP=0x000b20b3
- (void)_enableControls;	// IMP=0x000b2012
- (void)_disableControls;	// IMP=0x000b1f71
- (void)saveProfileChanges:(id)arg1;	// IMP=0x000b1e0a
- (void)didUpdateAccount:(id)arg1 info:(id)arg2;	// IMP=0x000b1c73
- (id)userViewController;	// IMP=0x000b1842
- (void)setUserViewController:(id)arg1;	// IMP=0x000b184d
- (id)user;	// IMP=0x000b185b
- (id)account;	// IMP=0x000b1866
- (void)setAccount:(id)arg1;	// IMP=0x000b1c37

@end

@interface TMTextFieldCell : NSTextFieldCell
{
    BOOL isInvalid;	// 48 = 0x30
}

- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;	// IMP=0x000b18d8
- (BOOL)isInvalid;	// IMP=0x000b1828
- (void)setIsInvalid:(BOOL)arg1;	// IMP=0x000b1834

@end

@interface TMProfileImage : ABUIImageView
{
    TMUserViewController *controller;	// 84 = 0x54
}

- (void)mouseUp:(id)arg1;	// IMP=0x000b1871
- (id)controller;	// IMP=0x000b180f
- (void)setController:(id)arg1;	// IMP=0x000b181a

@end

@interface ABGroupedRowView : ABRowView
{
    ABUIView *container;	// 120 = 0x78
}

- (float)xOffset;	// IMP=0x000b4388
- (float)childWidth:(float)arg1;	// IMP=0x000b4393
- (id)childContainer;	// IMP=0x000b6079

@end

@interface ABSectionRowCell : ABPlainRowCell
{
}

- (void)drawRect:(struct CGRect)arg1;	// IMP=0x000b6841

@end

@interface ABPlainRowCell : ABRowView
{
    NSString *text;	// 120 = 0x78
    NSString *altText;	// 124 = 0x7c
    int style;	// 128 = 0x80
    ABUIColor *textColor;	// 132 = 0x84
}

- (void)dealloc;	// IMP=0x000b5ee5
- (void)drawRect:(struct CGRect)arg1;	// IMP=0x000b6070
- (void)setText:(id)arg1;	// IMP=0x000b6021
- (id)textFont;	// IMP=0x000b5fce
- (id)textColor;	// IMP=0x000b4345
- (void)setTextColor:(id)arg1;	// IMP=0x000b5f92
- (long)style;	// IMP=0x000b4353
- (void)setStyle:(long)arg1;	// IMP=0x000b4361
- (id)altText;	// IMP=0x000b4372
- (void)setAltText:(id)arg1;	// IMP=0x000b5f56
- (id)text;	// IMP=0x000b437d

@end

@interface ABRowScrollView : ABUIScrollView
{
}

- (id)initWithFrame:(struct CGRect)arg1;	// IMP=0x000b5e42

@end

@interface ABRowView : ABUIView
{
    id <ABRowViewDelegate> delegate;	// 80 = 0x50
    id target;	// 84 = 0x54
    SEL action;	// 88 = 0x58
    id userInfo;	// 92 = 0x5c
    BOOL dynamicHeight;	// 96 = 0x60
    ABRowView *parentRow;	// 100 = 0x64
    NSMutableArray *childRows;	// 104 = 0x68
    float rowHeight;	// 108 = 0x6c
    struct {
        unsigned int selectable:1;
        unsigned int highlighted:1;
        unsigned int selected:1;
        unsigned int deferUpdate:5;
        unsigned int cleanRowHeight:1;
        unsigned int plainSetFrame:1;
        unsigned int fadeNextContentsChange:1;
        unsigned int forceGroupedStyle:1;
    } _flags;	// 112 = 0x70
    NSMenu *menu;	// 116 = 0x74
}

+ (id)row;	// IMP=0x000b477c
+ (id)sectionHeader:(id)arg1;	// IMP=0x000b46e9
+ (id)spacerRow:(float)arg1;	// IMP=0x000b4650
+ (id)divider:(id)arg1;	// IMP=0x000b458e
+ (id)loadingRow;	// IMP=0x000b4439
- (id)menuForEvent:(id)arg1;	// IMP=0x000b424f
- (id)initWithFrame:(struct CGRect)arg1;	// IMP=0x000b43b3
- (id)init;	// IMP=0x000b5df1
- (void)dealloc;	// IMP=0x000b5d83
- (void)setSelectable:(BOOL)arg1;	// IMP=0x000b5d4d
- (BOOL)selectable;	// IMP=0x000b425a
- (void)beginChanges;	// IMP=0x000b5d0a
- (void)endChanges;	// IMP=0x000b5cac
- (BOOL)isFirst;	// IMP=0x000b5c5e
- (BOOL)isLast;	// IMP=0x000b5be4
- (BOOL)isGrouped;	// IMP=0x000b5ba1
- (id)rootRow;	// IMP=0x000b5b6d
- (id)childRows;	// IMP=0x000b5b2a
- (void)_childRowsChanged;	// IMP=0x000b5ade
- (id)description;	// IMP=0x000b5a91
- (void)_setupFrame:(id)arg1;	// IMP=0x000b58ee
- (id)childContainer;	// IMP=0x000b4269
- (void)_add:(id)arg1;	// IMP=0x000b5830
- (void)_remove:(id)arg1;	// IMP=0x000b57f6
- (void)_mightHaveRemovedAllChildren;	// IMP=0x000b57b8
- (void)setChildRows:(id)arg1;	// IMP=0x000b5552
- (id)addChildRow:(id)arg1;	// IMP=0x000b54d1
- (void)removeChildRow:(id)arg1;	// IMP=0x000b5441
- (void)replaceChildRow:(id)arg1 withRow:(id)arg2;	// IMP=0x000b536c
- (float)calculatedRowHeight;	// IMP=0x000b5248
- (float)rowHeight;	// IMP=0x000b51f8
- (void)setRowHeight:(float)arg1;	// IMP=0x000b51ce
- (float)childWidth:(float)arg1;	// IMP=0x000b4271
- (float)xOffset;	// IMP=0x000b4279
- (float)_updateLayout:(float)arg1 width:(float)arg2 xOffset:(float)arg3;	// IMP=0x000b4f9a
- (void)layoutSubviews;	// IMP=0x000b4f54
- (void)updateLayout;	// IMP=0x000b4d9b
- (void)setFrame:(struct CGRect)arg1;	// IMP=0x000b4d29
- (BOOL)highlighted;	// IMP=0x000b4280
- (void)setHighlighted:(BOOL)arg1;	// IMP=0x000b4291
- (BOOL)selected;	// IMP=0x000b42b1
- (void)setSelected:(BOOL)arg1;	// IMP=0x000b4cfa
- (void)setSelected:(BOOL)arg1 animated:(BOOL)arg2;	// IMP=0x000b4cae
- (void)setNeedsDisplay;	// IMP=0x000b4c60
- (void)_deselectRowsBesides:(id)arg1 animated:(BOOL)arg2;	// IMP=0x000b4b30
- (void)deselectAllRowsAnimated:(BOOL)arg1;	// IMP=0x000b4aef
- (void)deselectOtherRowsAnimated:(BOOL)arg1;	// IMP=0x000b4ab0
- (id)actionForLayer:(id)arg1 forKey:(id)arg2;	// IMP=0x000b4a0d
- (void)setTarget:(id)arg1 action:(SEL)arg2;	// IMP=0x000b42c3
- (void)mouseDown:(id)arg1;	// IMP=0x000b49b7
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;	// IMP=0x000b42d7
- (void)mouseUp:(id)arg1;	// IMP=0x000b486d
- (BOOL)acceptsFirstMouse:(id)arg1;	// IMP=0x000b42dc
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;	// IMP=0x000b4849
- (id)menu;	// IMP=0x000b42e3
- (void)setMenu:(id)arg1;	// IMP=0x000b480d
- (BOOL)dynamicHeight;	// IMP=0x000b42ee
- (void)setDynamicHeight:(BOOL)arg1;	// IMP=0x000b42fa
- (id)parentRow;	// IMP=0x000b4308
- (void)setParentRow:(id)arg1;	// IMP=0x000b4313
- (id)userInfo;	// IMP=0x000b4321
- (void)setUserInfo:(id)arg1;	// IMP=0x000b47d1
- (id)delegate;	// IMP=0x000b432c
- (void)setDelegate:(id)arg1;	// IMP=0x000b4337

@end

@interface ABRowViewController : ABUIViewController <ABUIScrollViewDelegate, ABRowViewDelegate>
{
    ABRowView *_rowView;	// 20 = 0x14
}

- (void)loadRowView;	// IMP=0x000b7791
- (void)loadView;	// IMP=0x000b77a6
- (void)reloadRowView;	// IMP=0x000b79a1
- (id)rowView;	// IMP=0x000b7796
- (void)scrollViewWillBeginDragging:(id)arg1;	// IMP=0x000b77a1
- (id)scrollView;	// IMP=0x000b79df

@end

@interface TMAvatarButton : ABUIButton
{
    BOOL dragging;	// 140 = 0x8c
    TMStatusCell *statusCell;	// 144 = 0x90
    TMMessageCell *messageCell;	// 148 = 0x94
}

- (id)handleForPasteboardDragView;	// IMP=0x000b7a02

@end

@interface TMRowCell : ABPlainRowCell
{
}

+ (id)loadingRow;	// IMP=0x000b82df
- (id)init;	// IMP=0x000b8295
- (void)drawGroupedBackground;	// IMP=0x000b8ae8
- (void)drawPlainBackground;	// IMP=0x000b895f
- (id)textFont;	// IMP=0x000b892d
- (id)buttonFont;	// IMP=0x000b88fb
- (id)altTextFont;	// IMP=0x000b88c9
- (void)drawBackground;	// IMP=0x000b888c
- (void)drawRect:(struct CGRect)arg1;	// IMP=0x000b83db

@end

@interface TMTextFlowRowCell : TMRowCell
{
    ABUITextRenderer *renderer;	// 136 = 0x88
}

- (id)initWithFrame:(struct CGRect)arg1;	// IMP=0x000b8c25
- (void)dealloc;	// IMP=0x000b8ea9
- (id)attributedString;	// IMP=0x000b8e83
- (void)setAttributedString:(id)arg1;	// IMP=0x000b8e56
- (void)drawRect:(struct CGRect)arg1;	// IMP=0x000b8d7e
- (float)rowHeight;	// IMP=0x000b8cdb

@end

@interface TMComboBoxUsernameAutocompleteDelegate : NSObject
{
    int lastTextLength;	// 4 = 0x4
    NSMutableArray *cachedUsernames;	// 8 = 0x8
    NSMutableArray *cachedDefaultUsernames;	// 12 = 0xc
    NSComboBox *comboBox;	// 16 = 0x10
}

- (void)awakeFromNib;	// IMP=0x000b8ef0
- (void)textDidChange:(id)arg1;	// IMP=0x000b8f4e
- (void)dealloc;	// IMP=0x000b9232
- (id)comboBox:(id)arg1 completedString:(id)arg2;	// IMP=0x000b9276
- (unsigned long)comboBox:(id)arg1 indexOfItemWithStringValue:(id)arg2;	// IMP=0x000b8fd8
- (BOOL)emptyBox;	// IMP=0x000b9015
- (long)numberOfItemsInComboBox:(id)arg1;	// IMP=0x000b9052
- (id)comboBox:(id)arg1 objectValueForItemAtIndex:(long)arg2;	// IMP=0x000b91bd

@end

@interface TMImageViewer : ABUINSWindow
{
    ABUIView *matte;	// 144 = 0x90
    ABUIView *imageView;	// 148 = 0x94
    double downloadProgress;	// 152 = 0x98
}

+ (long)windowMask;	// IMP=0x000b9888
+ (void)openImageWithURL:(id)arg1;	// IMP=0x000b9ccf
+ (void)openImageWithMedia:(id)arg1;	// IMP=0x000b9d19
- (id)initWithImageURL:(id)arg1;	// IMP=0x000b9932
- (id)initWithImageURL:(id)arg1 contentRect:(struct CGRect)arg2;	// IMP=0x000ba4ed
- (void)dealloc;	// IMP=0x000b9e6f
- (void)_didLoadImage:(id)arg1;	// IMP=0x000b9f4c
- (void)imageResponse:(id)arg1 info:(id)arg2;	// IMP=0x000b9eaf
- (void)progress:(id)arg1 info:(id)arg2;	// IMP=0x000b9e2d
- (void)performClose:(id)arg1;	// IMP=0x000b9a56
- (BOOL)windowShouldClose:(id)arg1;	// IMP=0x000b9892
- (BOOL)canBecomeKeyWindow;	// IMP=0x000b989c

@end

@interface TMImageView : ABUIView
{
}

- (void)performClose:(id)arg1;	// IMP=0x000b98a6
- (BOOL)performKeyAction:(id)arg1;	// IMP=0x000b98df
- (void)swipeWithEvent:(id)arg1;	// IMP=0x000b9de0

@end

@interface ABUITextFieldEditor : ABUITextEditor
{
}

- (id)_textField;	// IMP=0x000bac2a
- (void)insertTab:(id)arg1;	// IMP=0x000bae6c
- (void)moveDown:(id)arg1;	// IMP=0x000bae9d
- (void)insertNewline:(id)arg1;	// IMP=0x000baece
- (void)cancelOperation:(id)arg1;	// IMP=0x000baf5c

@end

@interface ABUITextField : ABUITextView
{
    ABUIButton *rightButton;	// 160 = 0xa0
    struct {
        unsigned int delegateTextFieldShouldReturn:1;
        unsigned int delegateTextFieldShouldClear:1;
        unsigned int delegateTextFieldShouldTabToNext:1;
    } _textFieldFlags;	// 164 = 0xa4
}

- (Class)textEditorClass;	// IMP=0x000bac35
- (void)dealloc;	// IMP=0x000baf94
- (void)setDelegate:(id)arg1;	// IMP=0x000bafdb
- (BOOL)singleLine;	// IMP=0x000bac12
- (void)_tabToNext;	// IMP=0x000bac57
- (void)setRightButton:(id)arg1;	// IMP=0x000bac87
- (void)clear:(id)arg1;	// IMP=0x000bad86
- (id)clearButton;	// IMP=0x000badd5
- (id)rightButton;	// IMP=0x000bac1c

@end

@interface ABMutableAttributedArray : NSMutableArray
{
    NSMutableArray *_array;	// 4 = 0x4
    NSMutableDictionary *userInfo;	// 8 = 0x8
}

- (id)init;	// IMP=0x000bbf3c
- (void)dealloc;	// IMP=0x000bc2af
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x000bbfa6
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;	// IMP=0x000bc06c
- (id)initWithCoder:(id)arg1;	// IMP=0x000bc380
- (void)encodeWithCoder:(id)arg1;	// IMP=0x000bc132
- (unsigned long)count;	// IMP=0x000bc189
- (id)objectAtIndex:(unsigned long)arg1;	// IMP=0x000bc1ac
- (void)insertObject:(id)arg1 atIndex:(unsigned long)arg2;	// IMP=0x000bc1d6
- (void)removeObjectAtIndex:(unsigned long)arg1;	// IMP=0x000bc207
- (void)addObject:(id)arg1;	// IMP=0x000bc231
- (void)removeLastObject;	// IMP=0x000bc25b
- (void)replaceObjectAtIndex:(unsigned long)arg1 withObject:(id)arg2;	// IMP=0x000bc27e
- (id)userInfo;	// IMP=0x000bbf26
- (void)setUserInfo:(id)arg1;	// IMP=0x000bc344
- (id)_array;	// IMP=0x000bbf31
- (void)set_array:(id)arg1;	// IMP=0x000bc308

@end

@interface TwitterPaginatedResults : ABMutableAttributedArray
{
}

- (void)setNextCursor:(id)arg1;	// IMP=0x000bc41a
- (id)nextCursor;	// IMP=0x000bc475
- (void)setPreviousCursor:(id)arg1;	// IMP=0x000bc4ae
- (id)previousCursor;	// IMP=0x000bc509
- (BOOL)isAtEnd;	// IMP=0x000bc542

@end

@interface TwitterStreamEvent : NSObject
{
    TwitterUser *source;	// 4 = 0x4
    TwitterUser *target;	// 8 = 0x8
    id targetObject;	// 12 = 0xc
    int eventType;	// 16 = 0x10
    NSDate *date;	// 20 = 0x14
}

+ (id)keepAlive;	// IMP=0x000bcb2b
+ (id)eventFromDictionary:(id)arg1;	// IMP=0x000bcbbd
+ (id)retweetEvent:(id)arg1;	// IMP=0x000bd206
- (void)dealloc;	// IMP=0x000bd2f4
- (id)date;	// IMP=0x000bcae6
- (void)setDate:(id)arg1;	// IMP=0x000bd42b
- (id)targetObject;	// IMP=0x000bcaf1
- (void)setTargetObject:(id)arg1;	// IMP=0x000bd3ef
- (id)target;	// IMP=0x000bcafc
- (void)setTarget:(id)arg1;	// IMP=0x000bd3b3
- (id)source;	// IMP=0x000bcb07
- (void)setSource:(id)arg1;	// IMP=0x000bd377
- (int)eventType;	// IMP=0x000bcb12
- (void)setEventType:(int)arg1;	// IMP=0x000bcb1d

@end

@interface TMSavedSearchRow : TMRowCell <ABUIViewDelegate>
{
    ABUIButton *deleteButton;	// 136 = 0x88
    ABUIButton *confirmDeleteButton;	// 140 = 0x8c
    struct {
        unsigned int hover:1;
        unsigned int deleteHover:1;
        unsigned int deleteFocus:1;
        unsigned int deleteState:2;
    } _ssFlags;	// 144 = 0x90
}

- (id)init;	// IMP=0x000be460
- (void)dealloc;	// IMP=0x000be082
- (void)_cancel;	// IMP=0x000be3fd
- (void)delete:(id)arg1;	// IMP=0x000be33f
- (void)_setDeleteButtonState:(long)arg1;	// IMP=0x000be26a
- (void)_updateDeleteButton;	// IMP=0x000be21b
- (void)_needsUpdateDeleteButton;	// IMP=0x000be1da
- (void)dragOutDelete:(id)arg1;	// IMP=0x000be1bb
- (void)mouseEntered:(id)arg1;	// IMP=0x000be16d
- (void)mouseExited:(id)arg1;	// IMP=0x000be11f
- (void)view:(id)arg1 mouseEntered:(id)arg2;	// IMP=0x000be0f8
- (void)view:(id)arg1 mouseExited:(id)arg2;	// IMP=0x000be0d1
- (id)confirmDeleteButton;	// IMP=0x000be074

@end

@interface TMSearchStreamViewController : TMStatusStreamViewController
{
    TwitterSearch *search;	// 112 = 0x70
}

- (void)loadNewer:(id)arg1;	// IMP=0x000c01e5
- (float)pollInterval;	// IMP=0x000c01cf
- (void)dealloc;	// IMP=0x000c057c
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x000c0774
- (void)viewWillBeUnobscured:(BOOL)arg1;	// IMP=0x000c06f9
- (BOOL)isEqualToViewController:(id)arg1;	// IMP=0x000c0210
- (id)attributedButtonText:(id)arg1;	// IMP=0x000c029d
- (void)_updateButton:(id)arg1 account:(id)arg2 search:(id)arg3;	// IMP=0x000c035f
- (void)viewDidLoad;	// IMP=0x000c05fc
- (void)toggleSavedSearch:(id)arg1;	// IMP=0x000c04a1
- (id)search;	// IMP=0x000c01da
- (void)setSearch:(id)arg1;	// IMP=0x000c05c0

@end

@interface TMUserPickerSheet : NSWindow
{
    TwitterAccount *account;	// 132 = 0x84
    ABCallback *cancelCallback;	// 136 = 0x88
    ABCallback *continueCallback;	// 140 = 0x8c
    NSComboBox *comboBox;	// 144 = 0x90
    NSButton *continueButton;	// 148 = 0x94
    NSTextField *label;	// 152 = 0x98
    NSProgressIndicator *spinner;	// 156 = 0x9c
    int userMask;	// 160 = 0xa0
}

- (void)_alert:(id)arg1 subtext:(id)arg2;	// IMP=0x000c0820
- (void)_handleAPIError:(id)arg1;	// IMP=0x000c08fc
- (void)setLabelText:(id)arg1;	// IMP=0x000c0a3c
- (void)disableControls;	// IMP=0x000c0a69
- (void)enableControls;	// IMP=0x000c0ad9
- (id)labelText;	// IMP=0x000c0b49
- (void)clickedContinue:(id)arg1;	// IMP=0x000c0e83
- (void)loadedUser:(id)arg1 info:(id)arg2;	// IMP=0x000c0f31
- (void)loadedFollowerStatus:(id)arg1 info:(id)arg2;	// IMP=0x000c0b6f
- (void)clickedCancel:(id)arg1;	// IMP=0x000c0e3a
- (void)dealloc;	// IMP=0x000c10e4
- (id)account;	// IMP=0x000c07d7
- (void)setAccount:(id)arg1;	// IMP=0x000c11e4
- (int)userMask;	// IMP=0x000c07e5
- (void)setUserMask:(int)arg1;	// IMP=0x000c07f3
- (id)continueCallback;	// IMP=0x000c0804
- (void)setContinueCallback:(id)arg1;	// IMP=0x000c11a8
- (id)cancelCallback;	// IMP=0x000c0812
- (void)setCancelCallback:(id)arg1;	// IMP=0x000c116c

@end

@interface TMUI : NSObject
{
}

+ (id)standardTitlebar:(id)arg1;	// IMP=0x000c1394
+ (id)standardToolbar;	// IMP=0x000c152a
+ (id)toolbarBackButton;	// IMP=0x000c1747

@end

@interface TwitterProtocolHandling : NSObject
{
}

+ (id)legacyURL:(id)arg1;	// IMP=0x000c2372
+ (id)desiredAccountForAccount:(id)arg1 url:(id)arg2;	// IMP=0x000c2541
+ (BOOL)handleURL:(id)arg1 account:(id)arg2 object:(id)arg3;	// IMP=0x000c260e

@end

@interface TMConversationStreamViewController : TMStatusStreamViewController
{
}

- (BOOL)showToolbar;	// IMP=0x000c2fb9
- (id)conversationStream;	// IMP=0x000c2fc0
- (void)reply:(id)arg1;	// IMP=0x000c2fdf
- (void)viewDidLoad;	// IMP=0x000c3051

@end

@interface TMStatusBarItemController : NSObject <NSMenuDelegate>
{
    TMMenu *statusMenu;	// 4 = 0x4
    TMRootViewController *targetController;	// 8 = 0x8
    NSWindow *mainWindow;	// 12 = 0xc
    TMMenuItemSearchView *searchView;	// 16 = 0x10
}

- (id)init;	// IMP=0x000c3e33
- (void)accountSetDidChange:(id)arg1;	// IMP=0x000c3410
- (id)statusMenu;	// IMP=0x000c342f
- (void)dealloc;	// IMP=0x000c4650
- (id)accounts;	// IMP=0x000c34b9
- (void)reconstructStatusMenu;	// IMP=0x000c3f16
- (void)performSearch:(id)arg1;	// IMP=0x000c34ed
- (BOOL)menuHasKeyEquivalent:(id)arg1 forEvent:(id)arg2 target:(id *)arg3 action:(SEL *)arg4;	// IMP=0x000c3ef3
- (void)menuWillOpen:(id)arg1;	// IMP=0x000c3393
- (void)menuDidClose:(id)arg1;	// IMP=0x000c33a0
- (void)_updateItemImage:(id)arg1 highlighted:(BOOL)arg2;	// IMP=0x000c35fc
- (BOOL)menu:(id)arg1 updateItem:(id)arg2 atIndex:(long)arg3 shouldCancel:(BOOL)arg4;	// IMP=0x000c37fd
- (void)menu:(id)arg1 willHighlightItem:(id)arg2;	// IMP=0x000c3830
- (long)numberOfItemsInMenu:(id)arg1;	// IMP=0x000c3892
- (void)didSelectNewTweetFromStatusMenuItem:(id)arg1;	// IMP=0x000c38b1
- (void)didSelectSearchFromStatusMenuItem:(id)arg1;	// IMP=0x000c38f0
- (void)didSelectTweetsFromStatusMenuItem:(id)arg1;	// IMP=0x000c39be
- (void)didSelectMentionsFromStatusMenuItem:(id)arg1;	// IMP=0x000c3a5a
- (void)didSelectMessagesFromStatusMenuItem:(id)arg1;	// IMP=0x000c3af6
- (id)mainWindow;	// IMP=0x000c33ad
- (void)setMainWindow:(id)arg1;	// IMP=0x000c33b8
- (id)targetController;	// IMP=0x000c33c6
- (void)setTargetController:(id)arg1;	// IMP=0x000c3eb7

@end

@interface TMMenuItemSearchView : NSView
{
    TMMenuSearchField *searchField;	// 80 = 0x50
}

- (BOOL)acceptsFirstResponder;	// IMP=0x000c337e
- (BOOL)becomeFirstResponder;	// IMP=0x000c33d1
- (id)initWithFrame:(struct CGRect)arg1;	// IMP=0x000c3b92
- (void)viewDidMoveToWindow;	// IMP=0x000c3d96
- (void)mouseDown:(id)arg1;	// IMP=0x000c3d1a
- (void)drawRect:(struct CGRect)arg1;	// IMP=0x000c3c99
- (id)searchField;	// IMP=0x000c3388

@end

@interface TMMenu : NSMenu
{
}

@end

@interface TMMenuSearchField : NSTextField
{
}

- (BOOL)acceptsFirstResponder;	// IMP=0x000c3374

@end

@interface ABUITableViewErrorCell : ABUITableViewCell
{
    id <ABUITableViewErrorObject> errorObject;	// 88 = 0x58
}

- (id)initWithStyle:(int)arg1 reuseIdentifier:(id)arg2;	// IMP=0x000c4d68
- (void)drawRect:(struct CGRect)arg1;	// IMP=0x000c4e46
- (void)dealloc;	// IMP=0x000c4e02
- (id)errorObject;	// IMP=0x000c4d5d
- (void)setErrorObject:(id)arg1;	// IMP=0x000c4dc6

@end

@interface ABUIFastIndexPath : NSObject <NSCopying, NSCoding>
{
    unsigned int section;	// 4 = 0x4
    unsigned int row;	// 8 = 0x8
}

+ (void)initialize;	// IMP=0x000c5465
+ (id)indexPathForRow:(unsigned long)arg1 inSection:(unsigned long)arg2;	// IMP=0x000c54c6
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x000c5351
- (id)initWithCoder:(id)arg1;	// IMP=0x000c5370
- (void)encodeWithCoder:(id)arg1;	// IMP=0x000c53d0
- (id)description;	// IMP=0x000c5427
- (unsigned long)section;	// IMP=0x000c52c8
- (unsigned long)row;	// IMP=0x000c52d3
- (unsigned long)hash;	// IMP=0x000c52de
- (long)compare:(id)arg1;	// IMP=0x000c52ef
- (BOOL)isEqual:(id)arg1;	// IMP=0x000c532a

@end

@interface ABUIFastIndexPath_staticClass : ABUIFastIndexPath
{
}

- (id)retain;	// IMP=0x000c52b3
- (id)autorelease;	// IMP=0x000c52bb
- (void)release;	// IMP=0x000c52c3

@end

@interface TwitterTrendLocation : NSObject
{
    NSString *parentID;	// 4 = 0x4
    NSString *name;	// 8 = 0x8
    NSString *country;	// 12 = 0xc
    NSString *woeid;	// 16 = 0x10
}

+ (id)locationsWithJSON:(id)arg1;	// IMP=0x000c5954
+ (void)parseArrayJSON:(id)arg1 info:(id)arg2;	// IMP=0x000c589c
+ (id)globalLocation;	// IMP=0x000c575d
- (BOOL)isEqual:(id)arg1;	// IMP=0x000c555f
- (BOOL)isGlobal;	// IMP=0x000c55e6
- (void)parseJSON:(id)arg1 info:(id)arg2;	// IMP=0x000c5614
- (void)dealloc;	// IMP=0x000c5819
- (id)woeid;	// IMP=0x000c5533
- (void)setWoeid:(id)arg1;	// IMP=0x000c5a8a
- (id)country;	// IMP=0x000c553e
- (void)setCountry:(id)arg1;	// IMP=0x000c5a4e
- (id)name;	// IMP=0x000c5549
- (void)setName:(id)arg1;	// IMP=0x000c5a12
- (id)parentID;	// IMP=0x000c5554
- (void)setParentID:(id)arg1;	// IMP=0x000c59d6

@end

@interface ABUITextEditor : ABUITextRenderer <NSTextInputClient>
{
    NSTextInputContext *inputContext;	// 84 = 0x54
    NSMutableAttributedString *backingStore;	// 88 = 0x58
    struct _NSRange markedRange;	// 92 = 0x5c
    NSDictionary *defaultAttributes;	// 100 = 0x64
    NSDictionary *markedAttributes;	// 104 = 0x68
}

- (id)init;	// IMP=0x000c7ddd
- (void)dealloc;	// IMP=0x000c7d5a
- (id)inputContext;	// IMP=0x000c7188
- (id)backingStore;	// IMP=0x000c7193
- (void)setFrame:(struct CGRect)arg1;	// IMP=0x000c7d00
- (BOOL)becomeFirstResponder;	// IMP=0x000c7cb9
- (BOOL)resignFirstResponder;	// IMP=0x000c7c72
- (void)_textDidChange;	// IMP=0x000c7c08
- (id)text;	// IMP=0x000c7be5
- (void)setText:(id)arg1;	// IMP=0x000c7ae4
- (void)cut:(id)arg1;	// IMP=0x000c7aa3
- (void)paste:(id)arg1;	// IMP=0x000c7a4a
- (void)keyDown:(id)arg1;	// IMP=0x000c7a20
- (void)deleteCharactersInRange:(struct _NSRange)arg1;	// IMP=0x000c7972
- (void)doCommandBySelector:(SEL)arg1;	// IMP=0x000c71f7
- (void)insertText:(id)arg1;	// IMP=0x000c793c
- (void)insertText:(id)arg1 replacementRange:(struct _NSRange)arg2;	// IMP=0x000c77ae
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2 replacementRange:(struct _NSRange)arg3;	// IMP=0x000c7604
- (void)unmarkText;	// IMP=0x000c75d3
- (void)setSelectedRange:(struct _NSRange)arg1;	// IMP=0x000c758f
- (struct _NSRange)markedRange;	// IMP=0x000c719e
- (BOOL)hasMarkedText;	// IMP=0x000c71ac
- (id)attributedSubstringForProposedRange:(struct _NSRange)arg1 actualRange:(struct _NSRange *)arg2;	// IMP=0x000c751f
- (id)validAttributesForMarkedText;	// IMP=0x000c74db
- (struct CGRect)firstRectForCharacterRange:(struct _NSRange)arg1 actualRange:(struct _NSRange *)arg2;	// IMP=0x000c7394
- (unsigned long)characterIndexForPoint:(struct CGPoint)arg1;	// IMP=0x000c72d8
- (id)attributedString;	// IMP=0x000c71c1
- (float)fractionOfDistanceThroughGlyphForPoint:(struct CGPoint)arg1;	// IMP=0x000c71cc
- (float)baselineDeltaForCharacterAtIndex:(unsigned long)arg1;	// IMP=0x000c71d3
- (long)windowLevel;	// IMP=0x000c72a3
- (BOOL)drawsVerticallyForCharacterAtIndex:(unsigned long)arg1;	// IMP=0x000c71da
- (id)markedAttributes;	// IMP=0x000c71e1
- (void)setMarkedAttributes:(id)arg1;	// IMP=0x000c7267
- (id)defaultAttributes;	// IMP=0x000c71ec
- (void)setDefaultAttributes:(id)arg1;	// IMP=0x000c722b

@end

@interface ABUIAccessibility
{
}

@end

@interface TMFollowButton : ABUIButton
{
    int followAction;	// 140 = 0x8c
    struct {
        unsigned int hovering:1;
    } _flags;	// 144 = 0x90
}

+ (void)initialize;	// IMP=0x000c7f71
- (void)drawRect:(struct CGRect)arg1;	// IMP=0x000c80fc
- (void)mouseEntered:(id)arg1;	// IMP=0x000c85c8
- (void)mouseExited:(id)arg1;	// IMP=0x000c86a8
- (void)mouseUp:(id)arg1;	// IMP=0x000c865a
- (double)toolTipDelay;	// IMP=0x000c7f01
- (int)followAction;	// IMP=0x000c7f0c
- (void)setFollowAction:(int)arg1;	// IMP=0x000c7f1a

@end

@interface WindowTrafficLightsView : ABUIView <ABUIViewDelegate>
{
    id delegate;	// 80 = 0x50
    ABUIButton *close;	// 84 = 0x54
    ABUIButton *minimize;	// 88 = 0x58
    ABUIButton *zoom;	// 92 = 0x5c
}

- (void)_update:(BOOL)arg1;	// IMP=0x000c87eb
- (id)initWithFrame:(struct CGRect)arg1;	// IMP=0x000c8bc5
- (void)dealloc;	// IMP=0x000c901b
- (void)view:(id)arg1 mouseEntered:(id)arg2;	// IMP=0x000c8fcb
- (void)view:(id)arg1 mouseExited:(id)arg2;	// IMP=0x000c8f7b
- (void)close:(id)arg1;	// IMP=0x000c8b2c
- (void)minimize:(id)arg1;	// IMP=0x000c8b5f
- (void)zoom:(id)arg1;	// IMP=0x000c8b92
- (id)delegate;	// IMP=0x000c87d2
- (void)setDelegate:(id)arg1;	// IMP=0x000c87dd

@end

@interface ABUIButtonContent : NSObject
{
    NSString *title;	// 4 = 0x4
    ABUIColor *titleColor;	// 8 = 0x8
    ABUIColor *shadowColor;	// 12 = 0xc
    ABUIImage *image;	// 16 = 0x10
    ABUIImage *backgroundImage;	// 20 = 0x14
}

- (void)dealloc;	// IMP=0x000c9639
- (id)backgroundImage;	// IMP=0x000c9191
- (void)setBackgroundImage:(id)arg1;	// IMP=0x000c97c1
- (id)image;	// IMP=0x000c919c
- (void)setImage:(id)arg1;	// IMP=0x000c9785
- (id)shadowColor;	// IMP=0x000c91a7
- (void)setShadowColor:(id)arg1;	// IMP=0x000c9749
- (id)titleColor;	// IMP=0x000c91b2
- (void)setTitleColor:(id)arg1;	// IMP=0x000c970d
- (id)title;	// IMP=0x000c91bd
- (void)setTitle:(id)arg1;	// IMP=0x000c96d1

@end

@interface ABUITooltipWindow : NSWindow
{
}

+ (id)sharedTooltipWindow;	// IMP=0x000c9e83
+ (struct CGRect)_tooltipRect;	// IMP=0x000c99b5
+ (void)_fixTooltipWindow;	// IMP=0x000c9a55
+ (void)_beginTooltip;	// IMP=0x000c9ad4
+ (void)tick:(id)arg1;	// IMP=0x000ca055
+ (void)updateTooltip:(id)arg1 delay:(double)arg2;	// IMP=0x000c9bf3
+ (void)endTooltip;	// IMP=0x000c9df3

@end

@interface ABUITooltipWindowView : NSView
{
}

- (void)drawRect:(struct CGRect)arg1;	// IMP=0x000c97fd

@end

@interface TweetieAlertPreferencesController : NSObject
{
    TwitterAccount *selectedAccount;	// 4 = 0x4
    NSPopUpButton *accountChooser;	// 8 = 0x8
    NSPopUpButton *newTweetsOptions;	// 12 = 0xc
    NSPopUpButton *newMentionsOptions;	// 16 = 0x10
    NSPopUpButton *newMessagesOptions;	// 20 = 0x14
}

- (void)dealloc;	// IMP=0x000cad7d
- (void)_updateDropdown:(id)arg1 opts:(int)arg2;	// IMP=0x000ca6f3
- (void)updateDropdowns;	// IMP=0x000ca8ac
- (void)willAppear;	// IMP=0x000cadfd
- (int)shiftForMenuItem:(id)arg1;	// IMP=0x000ca97c
- (int)optionsBitForMenuItem:(id)arg1;	// IMP=0x000caa2d
- (BOOL)validateMenuItem:(id)arg1;	// IMP=0x000caa7d
- (void)chooseAccount:(id)arg1;	// IMP=0x000cabbe
- (void)chooseOption:(id)arg1;	// IMP=0x000cac4a
- (id)selectedAccount;	// IMP=0x000ca6e8
- (void)setSelectedAccount:(id)arg1;	// IMP=0x000cadc1

@end

@interface TMASCreateCommand : NSCreateCommand
{
}

- (id)performDefaultImplementation;	// IMP=0x000cb0c8

@end

@interface TMASStatus : TMASObject
{
    TwitterStatus *status;	// 4 = 0x4
}

- (void)dealloc;	// IMP=0x000cb4b7
- (id)objectSpecifier;	// IMP=0x000cb155
- (id)statusID;	// IMP=0x000cb21a
- (id)text;	// IMP=0x000cb23d
- (id)displayText;	// IMP=0x000cb272
- (id)twitterURLString;	// IMP=0x000cb2a7
- (id)author;	// IMP=0x000cb2dc
- (id)retweeter;	// IMP=0x000cb323
- (id)location;	// IMP=0x000cb377
- (id)date;	// IMP=0x000cb3be
- (id)links;	// IMP=0x000cb3f3
- (id)status;	// IMP=0x000cb14a
- (void)setStatus:(id)arg1;	// IMP=0x000cb4fb

@end

@interface TMASUser : TMASObject
{
    TwitterUser *user;	// 4 = 0x4
}

- (void)dealloc;	// IMP=0x000cb953
- (id)objectSpecifier;	// IMP=0x000cb642
- (id)userID;	// IMP=0x000cb707
- (id)username;	// IMP=0x000cb72a
- (id)fullName;	// IMP=0x000cb74d
- (id)twitterURLString;	// IMP=0x000cb770
- (id)bio;	// IMP=0x000cb7a5
- (id)protected;	// IMP=0x000cb7c8
- (id)profileImageURLString;	// IMP=0x000cb7eb
- (id)verified;	// IMP=0x000cb820
- (id)numberOfFollowers;	// IMP=0x000cb843
- (id)numberOfFollowing;	// IMP=0x000cb866
- (id)numberOfStatuses;	// IMP=0x000cb889
- (id)numberOfFavorites;	// IMP=0x000cb8ac
- (id)createdAt;	// IMP=0x000cb8cf
- (id)user;	// IMP=0x000cb637
- (void)setUser:(id)arg1;	// IMP=0x000cb997

@end

@interface TMASAccount : TMASObject
{
    TwitterAccount *account;	// 4 = 0x4
}

- (void)dealloc;	// IMP=0x000cbbc6
- (id)objectSpecifier;	// IMP=0x000cb9de
- (id)homeTimeline;	// IMP=0x000cbaa3
- (id)mentionsTimeline;	// IMP=0x000cbad8
- (id)user;	// IMP=0x000cbb0d
- (id)username;	// IMP=0x000cbb42
- (id)account;	// IMP=0x000cb9d3
- (void)setAccount:(id)arg1;	// IMP=0x000cbc0a

@end

@interface TMASObject : NSObject
{
}

@end

@interface TMASStatusStream : TMASObject
{
    TwitterStream *stream;	// 4 = 0x4
}

- (id)statusStreamID;	// IMP=0x000cbc51
- (id)objectSpecifier;	// IMP=0x000cbd01
- (id)statuses;	// IMP=0x000cbdc6
- (id)lastUpdated;	// IMP=0x000cbe21
- (void)dealloc;	// IMP=0x000cbea5
- (id)stream;	// IMP=0x000cbc46
- (void)setStream:(id)arg1;	// IMP=0x000cbee9

@end

@interface TwitterAggregateStatusesStream : TwitterStream
{
    NSArray *streams;	// 12 = 0xc
}

- (void)dealloc;	// IMP=0x000cbf79
- (id)statuses;	// IMP=0x000cc184
- (void)setStreams:(id)arg1;	// IMP=0x000cbfea
- (void)streamDidUpdate:(id)arg1;	// IMP=0x000cbf30
- (id)streams;	// IMP=0x000cbf25

@end

@interface TMConsoleBottomBarView : NSView
{
}

- (void)drawRect:(struct CGRect)arg1;	// IMP=0x000ce623

@end

@interface TMTopAnchoredDocumentView : NSView
{
}

- (void)setFrame:(struct CGRect)arg1;	// IMP=0x000ce5c8

@end

@interface TMConsoleController : NSObject <NSOutlineViewDataSource>
{
    NSWindow *consoleWindow;	// 4 = 0x4
    NSTextField *urlStringTextField;	// 8 = 0x8
    NSForm *parameterForm;	// 12 = 0xc
    NSPopUpButton *methodPopup;	// 16 = 0x10
    NSPopUpButton *accountPopup;	// 20 = 0x14
    NSMenuItem *authenticatedMenuItem;	// 24 = 0x18
    NSMenuItem *anonymousMenuItem;	// 28 = 0x1c
    NSOutlineView *apiOutlineView;	// 32 = 0x20
    WebView *apiOutput;	// 36 = 0x24
    NSView *parameterView;	// 40 = 0x28
    NSSplitView *leftRightSplitView;	// 44 = 0x2c
    NSView *dummyView;	// 48 = 0x30
    NSSplitView *topBottomSplitView;	// 52 = 0x34
    NSButton *goButton;	// 56 = 0x38
    NSProgressIndicator *spinner;	// 60 = 0x3c
    NSTextField *finalUrlField;	// 64 = 0x40
    NSTextField *finalPostBodyField;	// 68 = 0x44
    NSPopUpButton *finalMethodField;	// 72 = 0x48
    NSButton *toggleAPIBrowserButton;	// 76 = 0x4c
    NSSplitView *inputSplitView;	// 80 = 0x50
    NSToolbar *toolbar;	// 84 = 0x54
    NSMutableArray *apiGroups;	// 88 = 0x58
    NSMenuItem *authenticated;	// 92 = 0x5c
    NSSegmentedControl *responseSegmentedControl;	// 96 = 0x60
    NSTabView *responseTabView;	// 100 = 0x64
    NSTextField *summaryLabel;	// 104 = 0x68
    NSTableView *responseHeaderTableView;	// 108 = 0x6c
    NSTableColumn *headerKeyColumn;	// 112 = 0x70
    NSTableColumn *headerValueColumn;	// 116 = 0x74
    NSMutableArray *responseHeaderKeys;	// 120 = 0x78
    NSMutableArray *responseHeaderValues;	// 124 = 0x7c
}

- (id)init;	// IMP=0x000ce0c6
- (void)awakeFromNib;	// IMP=0x000cc38e
- (BOOL)outlineView:(id)arg1 isItemExpandable:(id)arg2;	// IMP=0x000cc4c2
- (id)outlineView:(id)arg1 child:(long)arg2 ofItem:(id)arg3;	// IMP=0x000cc500
- (long)outlineView:(id)arg1 numberOfChildrenOfItem:(id)arg2;	// IMP=0x000cc58d
- (id)outlineView:(id)arg1 objectValueForTableColumn:(id)arg2 byItem:(id)arg3;	// IMP=0x000cc60d
- (BOOL)outlineView:(id)arg1 shouldSelectItem:(id)arg2;	// IMP=0x000cc62c
- (void)outlineViewItemDidExpand:(id)arg1;	// IMP=0x000cc6f0
- (void)outlineViewItemWillCollapse:(id)arg1;	// IMP=0x000cc713
- (void)configureFormForEndpoint:(id)arg1;	// IMP=0x000cdcc1
- (void)didFinishForm:(id)arg1;	// IMP=0x000cc736
- (void)controlTextDidChange:(id)arg1;	// IMP=0x000cc759
- (void)hidePostField;	// IMP=0x000cc77c
- (void)showPostField;	// IMP=0x000cdbb8
- (void)updateFinalSettings:(id)arg1;	// IMP=0x000cd70f
- (float)splitView:(id)arg1 constrainSplitPosition:(float)arg2 ofSubviewAt:(long)arg3;	// IMP=0x000cc864
- (void)toggleAPIBrowser:(id)arg1;	// IMP=0x000cc93a
- (void)hidePanel;	// IMP=0x000cca06
- (void)updateFinalFields;	// IMP=0x000cca9f
- (void)finalMethodDidUpdate:(id)arg1;	// IMP=0x000ccafa
- (void)formDidUpdate:(id)arg1;	// IMP=0x000ccb19
- (void)clickedGo:(id)arg1;	// IMP=0x000cd52c
- (void)loadOutputView;	// IMP=0x000ccb3c
- (void)didReceiveResponse:(id)arg1 info:(id)arg2;	// IMP=0x000cd065
- (void)dealloc;	// IMP=0x000ccfe2
- (void)showJSONForStatus:(id)arg1 withAccount:(id)arg2;	// IMP=0x000ccbed
- (long)numberOfRowsInTableView:(id)arg1;	// IMP=0x000ccd21
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long)arg3;	// IMP=0x000ccd44
- (void)tabDidChange:(id)arg1;	// IMP=0x000ccd87
- (void)windowDidBecomeMain:(id)arg1;	// IMP=0x000ccdc4
- (void)windowDidResignMain:(id)arg1;	// IMP=0x000cce01

@end

@interface TMAPIEndPoint : NSObject
{
    NSDictionary *configuration;	// 4 = 0x4
}

- (void)dealloc;	// IMP=0x000ccf62
- (id)title;	// IMP=0x000cc2e2
- (id)urlString;	// IMP=0x000cc30d
- (id)method;	// IMP=0x000cc338
- (id)parameters;	// IMP=0x000cc363
- (id)configuration;	// IMP=0x000cc2d7
- (void)setConfiguration:(id)arg1;	// IMP=0x000ccfa6

@end

@interface TMAPIGroup : NSObject
{
    NSMutableArray *endPoints;	// 4 = 0x4
    NSString *title;	// 8 = 0x8
}

- (void)dealloc;	// IMP=0x000cce91
- (id)title;	// IMP=0x000cc2c1
- (void)setTitle:(id)arg1;	// IMP=0x000ccf26
- (id)endPoints;	// IMP=0x000cc2cc
- (void)setEndPoints:(id)arg1;	// IMP=0x000cceea

@end

@interface TwitterRelationship : NSObject
{
    NSString *username;	// 4 = 0x4
    BOOL following;	// 8 = 0x8
    BOOL followedBy;	// 9 = 0x9
}

+ (id)relationshipsWithXML:(id)arg1;	// IMP=0x000cea86
+ (void)parseRelationshipsXML:(id)arg1 info:(id)arg2;	// IMP=0x000ceaeb
- (void)parseRelationshipXML:(id)arg1 info:(id)arg2;	// IMP=0x000ce887
- (id)description;	// IMP=0x000ce9cd
- (BOOL)followedBy;	// IMP=0x000ce848
- (void)setFollowedBy:(BOOL)arg1;	// IMP=0x000ce854
- (BOOL)following;	// IMP=0x000ce862
- (void)setFollowing:(BOOL)arg1;	// IMP=0x000ce86e
- (id)username;	// IMP=0x000ce87c
- (void)setUsername:(id)arg1;	// IMP=0x000cea4a

@end

@interface TwitterConfiguration : NSObject <NSCoding>
{
    int shortenedURLLength;	// 4 = 0x4
    float scribeInterval;	// 8 = 0x8
    NSDate *lastUpdate;	// 12 = 0xc
    BOOL scribeEnabled;	// 16 = 0x10
}

- (id)description;	// IMP=0x000cec46
- (id)initWithCoder:(id)arg1;	// IMP=0x000ceef1
- (void)encodeWithCoder:(id)arg1;	// IMP=0x000cec84
- (id)nextConfiguration;	// IMP=0x000ced21
- (BOOL)scribeEnabled;	// IMP=0x000cebe1
- (void)loadMobileConfiguration:(id)arg1;	// IMP=0x000cf07c
- (void)parseMobileConfiguration:(id)arg1 info:(id)arg2;	// IMP=0x000cefa5
- (void)loadGlobalConfiguration:(id)arg1;	// IMP=0x000cf0c8
- (void)parseGlobalConfiguration:(id)arg1 info:(id)arg2;	// IMP=0x000cedc1
- (int)shortenedURLLength;	// IMP=0x000cebed
- (BOOL)needsRefresh;	// IMP=0x000cee4f
- (void)finishedLoading;	// IMP=0x000ceeb5
- (void)dealloc;	// IMP=0x000cf114
- (void)setScribeEnabled:(BOOL)arg1;	// IMP=0x000cec02
- (float)scribeInterval;	// IMP=0x000cec10
- (void)setScribeInterval:(float)arg1;	// IMP=0x000cec1b
- (id)lastUpdate;	// IMP=0x000cec2d
- (void)setShortenedURLLength:(int)arg1;	// IMP=0x000cec38

@end

@interface LocalAutocompleteDB : NSObject
{
    FMDatabase *db;	// 4 = 0x4
}

+ (void)verifyDatabase;	// IMP=0x000cf4fc
+ (id)databasePath;	// IMP=0x000cf48c
+ (id)sharedAutocompleteDB;	// IMP=0x000cf442
+ (void)resetDatabase;	// IMP=0x000cf3af
+ (void)shutdown;	// IMP=0x000cf383
- (id)initWithPath:(id)arg1;	// IMP=0x000cf305
- (BOOL)isReady;	// IMP=0x000cf2ee
- (void)seedAccount:(id)arg1;	// IMP=0x000d13c2
- (void)didReceiveFriends:(id)arg1 info:(id)arg2;	// IMP=0x000d10cf
- (void)loadFromDisk;	// IMP=0x000d1004
- (void)saveToDisk;	// IMP=0x000d0f2c
- (id)execute:(id)arg1;	// IMP=0x000d0f02
- (void)loadSchema;	// IMP=0x000d0d43
- (void)close;	// IMP=0x000d0d20
- (void)dealloc;	// IMP=0x000d0cc7
- (void)setSynchronize:(BOOL)arg1;	// IMP=0x000d0c77
- (void)beginTransaction;	// IMP=0x000d0c4c
- (void)endTransaction;	// IMP=0x000d0c21
- (void)addUser:(id)arg1;	// IMP=0x000d0bb5
- (void)addUsername:(id)arg1 fullName:(id)arg2 avatarURL:(id)arg3;	// IMP=0x000d0b42
- (void)addHashtag:(id)arg1 description:(id)arg2;	// IMP=0x000d0aae
- (void)addPlace:(id)arg1 placeType:(int)arg2 name:(id)arg3 address:(id)arg4 latitude:(id)arg5 longitude:(id)arg6;	// IMP=0x000d0a3c
- (void)prioritizeUsername:(id)arg1;	// IMP=0x000d09f2
- (void)prioritizeHashtag:(id)arg1;	// IMP=0x000d09ad
- (void)prioritizePlace:(id)arg1;	// IMP=0x000d0968
- (void)assimilateFromStatuses:(id)arg1;	// IMP=0x000d04d6
- (void)compact;	// IMP=0x000d0382
- (id)defaultResultsForType:(int)arg1;	// IMP=0x000d0034
- (id)resultsForPartialText:(id)arg1 type:(int)arg2;	// IMP=0x000cf8e9
- (id)placeAutocompletePrefixesNearPlace:(id)arg1;	// IMP=0x000cf733
- (id)db;	// IMP=0x000cf2fa

@end

@interface TwitterPlaceAutocompleteResultItem : TwitterAutocompleteResultItem
{
    int placeType;	// 44 = 0x2c
    double latitude;	// 48 = 0x30
    double longitude;	// 56 = 0x38
}

+ (id)itemWithID:(id)arg1 placeType:(int)arg2 autocompleteText:(id)arg3 subtext:(id)arg4 priority:(int)arg5 latitude:(id)arg6 longitude:(id)arg7;	// IMP=0x000d2128
+ (id)itemWithPlace:(id)arg1;	// IMP=0x000d1c9c
- (double)longitude;	// IMP=0x000d1bce
- (void)setLongitude:(double)arg1;	// IMP=0x000d1bd9
- (double)latitude;	// IMP=0x000d1beb
- (void)setLatitude:(double)arg1;	// IMP=0x000d1bf6
- (int)placeType;	// IMP=0x000d1c08
- (void)setPlaceType:(int)arg1;	// IMP=0x000d1c13

@end

@interface TwitterAutocompleteResultItem : NSObject <ABAutocompleteResultItem>
{
    NSString *autocompleteText;	// 4 = 0x4
    NSString *autocompleteSubtext;	// 8 = 0x8
    NSString *autocompleteImageName;	// 12 = 0xc
    NSURL *autocompleteImageURL;	// 16 = 0x10
    id userInfo;	// 20 = 0x14
    NSString *itemID;	// 24 = 0x18
    int autocompleteAction;	// 28 = 0x1c
    int autocompleteType;	// 32 = 0x20
    int priority;	// 36 = 0x24
    NSString *_derivedSearchableText;	// 40 = 0x28
}

- (void)dealloc;	// IMP=0x000d1ec7
- (BOOL)isEqual:(id)arg1;	// IMP=0x000d1c21
- (id)searchableSortableText;	// IMP=0x000d20f1
- (long)priority;	// IMP=0x000d1b41
- (void)setPriority:(long)arg1;	// IMP=0x000d1b4c
- (int)autocompleteType;	// IMP=0x000d1b5a
- (void)setAutocompleteType:(int)arg1;	// IMP=0x000d1b65
- (long)autocompleteAction;	// IMP=0x000d1b73
- (void)setAutocompleteAction:(long)arg1;	// IMP=0x000d1b7e
- (id)itemID;	// IMP=0x000d1b8c
- (void)setItemID:(id)arg1;	// IMP=0x000d20b5
- (id)userInfo;	// IMP=0x000d1b97
- (void)setUserInfo:(id)arg1;	// IMP=0x000d2079
- (id)autocompleteImageURL;	// IMP=0x000d1ba2
- (void)setAutocompleteImageURL:(id)arg1;	// IMP=0x000d203d
- (id)autocompleteImageName;	// IMP=0x000d1bad
- (void)setAutocompleteImageName:(id)arg1;	// IMP=0x000d2001
- (id)autocompleteSubtext;	// IMP=0x000d1bb8
- (void)setAutocompleteSubtext:(id)arg1;	// IMP=0x000d1fc5
- (id)autocompleteText;	// IMP=0x000d1bc3
- (void)setAutocompleteText:(id)arg1;	// IMP=0x000d1f89

@end

@interface FMStatement : NSObject
{
    struct sqlite3_stmt *statement;	// 4 = 0x4
    NSString *query;	// 8 = 0x8
    long useCount;	// 12 = 0xc
}

- (void)dealloc;	// IMP=0x000d38b2
- (void)close;	// IMP=0x000d39cb
- (void)reset;	// IMP=0x000d39ae
- (struct sqlite3_stmt *)statement;	// IMP=0x000d23be
- (void)setStatement:(struct sqlite3_stmt *)arg1;	// IMP=0x000d23c9
- (id)query;	// IMP=0x000d23d7
- (void)setQuery:(id)arg1;	// IMP=0x000d396c
- (long)useCount;	// IMP=0x000d23e2
- (void)setUseCount:(long)arg1;	// IMP=0x000d23ed
- (id)description;	// IMP=0x000d3907

@end

@interface FMDatabase : NSObject
{
    struct sqlite3 *db;	// 4 = 0x4
    NSString *databasePath;	// 8 = 0x8
    BOOL logsErrors;	// 12 = 0xc
    BOOL crashOnErrors;	// 13 = 0xd
    BOOL inUse;	// 14 = 0xe
    BOOL inTransaction;	// 15 = 0xf
    BOOL traceExecution;	// 16 = 0x10
    BOOL checkedOut;	// 17 = 0x11
    int busyRetryTimeout;	// 20 = 0x14
    BOOL shouldCacheStatements;	// 24 = 0x18
    NSMutableDictionary *cachedStatements;	// 28 = 0x1c
}

+ (id)databaseWithPath:(id)arg1;	// IMP=0x000d249b
+ (id)sqliteLibVersion;	// IMP=0x000d2465
- (id)initWithPath:(id)arg1;	// IMP=0x000d2400
- (void)dealloc;	// IMP=0x000d3848
- (id)databasePath;	// IMP=0x000d22bb
- (struct sqlite3 *)sqliteHandle;	// IMP=0x000d22c6
- (BOOL)open;	// IMP=0x000d37f7
- (BOOL)openWithFlags:(int)arg1;	// IMP=0x000d3797
- (BOOL)close;	// IMP=0x000d36f5
- (void)clearCachedStatements;	// IMP=0x000d368e
- (id)cachedStatementForQuery:(id)arg1;	// IMP=0x000d3664
- (void)setCachedStatement:(id)arg1 forQuery:(id)arg2;	// IMP=0x000d35f6
- (BOOL)rekey:(id)arg1;	// IMP=0x000d22d1
- (BOOL)setKey:(id)arg1;	// IMP=0x000d22d8
- (BOOL)goodConnection;	// IMP=0x000d35a9
- (void)compainAboutInUse;	// IMP=0x000d3512
- (id)lastErrorMessage;	// IMP=0x000d34db
- (BOOL)hadError;	// IMP=0x000d34b3
- (int)lastErrorCode;	// IMP=0x000d349a
- (long long)lastInsertRowId;	// IMP=0x000d3424
- (void)bindObject:(id)arg1 toColumn:(int)arg2 inStatement:(struct sqlite3_stmt *)arg3;	// IMP=0x000d30e1
- (id)executeQuery:(id)arg1 withArgumentsInArray:(id)arg2 orVAList:(char *)arg3;	// IMP=0x000d2ca0
- (id)executeQuery:(id)arg1;	// IMP=0x000d2c67
- (id)executeQuery:(id)arg1 withArgumentsInArray:(id)arg2;	// IMP=0x000d2c32
- (BOOL)executeUpdate:(id)arg1 withArgumentsInArray:(id)arg2 orVAList:(char *)arg3;	// IMP=0x000d26f1
- (BOOL)executeUpdate:(id)arg1;	// IMP=0x000d26b5
- (BOOL)executeUpdate:(id)arg1 withArgumentsInArray:(id)arg2;	// IMP=0x000d267d
- (BOOL)rollback;	// IMP=0x000d2649
- (BOOL)commit;	// IMP=0x000d2615
- (BOOL)beginDeferredTransaction;	// IMP=0x000d25e1
- (BOOL)beginTransaction;	// IMP=0x000d25ad
- (BOOL)logsErrors;	// IMP=0x000d22df
- (void)setLogsErrors:(BOOL)arg1;	// IMP=0x000d22eb
- (BOOL)crashOnErrors;	// IMP=0x000d22f9
- (void)setCrashOnErrors:(BOOL)arg1;	// IMP=0x000d2305
- (BOOL)inUse;	// IMP=0x000d2313
- (void)setInUse:(BOOL)arg1;	// IMP=0x000d2332
- (BOOL)inTransaction;	// IMP=0x000d2340
- (void)setInTransaction:(BOOL)arg1;	// IMP=0x000d234c
- (BOOL)traceExecution;	// IMP=0x000d235a
- (void)setTraceExecution:(BOOL)arg1;	// IMP=0x000d2366
- (BOOL)checkedOut;	// IMP=0x000d2374
- (void)setCheckedOut:(BOOL)arg1;	// IMP=0x000d2380
- (int)busyRetryTimeout;	// IMP=0x000d238e
- (void)setBusyRetryTimeout:(int)arg1;	// IMP=0x000d2399
- (BOOL)shouldCacheStatements;	// IMP=0x000d23a7
- (void)setShouldCacheStatements:(BOOL)arg1;	// IMP=0x000d2540
- (id)cachedStatements;	// IMP=0x000d23b3
- (void)setCachedStatements:(id)arg1;	// IMP=0x000d24fe
- (int)changes;	// IMP=0x000d24e5

@end

@interface FMResultSet : NSObject
{
    FMDatabase *parentDB;	// 4 = 0x4
    FMStatement *statement;	// 8 = 0x8
    NSString *query;	// 12 = 0xc
    NSMutableDictionary *columnNameToIndexMap;	// 16 = 0x10
    BOOL columnNamesSetup;	// 20 = 0x14
}

+ (id)resultSetWithStatement:(id)arg1 usingParentDatabase:(id)arg2;	// IMP=0x000d3dc6
- (void)dealloc;	// IMP=0x000d3e3f
- (void)close;	// IMP=0x000d3a20
- (void)setupColumnNames;	// IMP=0x000d47ed
- (void)kvcMagic:(id)arg1;	// IMP=0x000d4702
- (id)resultDict;	// IMP=0x000d4536
- (BOOL)next;	// IMP=0x000d43ea
- (BOOL)hasAnotherRow;	// IMP=0x000d43b6
- (int)columnIndexForName:(id)arg1;	// IMP=0x000d4330
- (int)intForColumn:(id)arg1;	// IMP=0x000d3a68
- (int)intForColumnIndex:(int)arg1;	// IMP=0x000d42fe
- (long)longForColumn:(id)arg1;	// IMP=0x000d3aa6
- (long)longForColumnIndex:(int)arg1;	// IMP=0x000d42cc
- (long long)longLongIntForColumn:(id)arg1;	// IMP=0x000d3ae4
- (long long)longLongIntForColumnIndex:(int)arg1;	// IMP=0x000d429a
- (BOOL)boolForColumn:(id)arg1;	// IMP=0x000d3b22
- (BOOL)boolForColumnIndex:(int)arg1;	// IMP=0x000d3b63
- (double)doubleForColumn:(id)arg1;	// IMP=0x000d425c
- (double)doubleForColumnIndex:(int)arg1;	// IMP=0x000d422a
- (id)stringForColumnIndex:(int)arg1;	// IMP=0x000d41a6
- (id)stringForColumn:(id)arg1;	// IMP=0x000d3b91
- (id)dateForColumn:(id)arg1;	// IMP=0x000d3bcf
- (id)dateForColumnIndex:(int)arg1;	// IMP=0x000d4131
- (id)dataForColumn:(id)arg1;	// IMP=0x000d3c0d
- (id)dataForColumnIndex:(int)arg1;	// IMP=0x000d4057
- (id)dataNoCopyForColumn:(id)arg1;	// IMP=0x000d3c4b
- (id)dataNoCopyForColumnIndex:(int)arg1;	// IMP=0x000d3fa6
- (BOOL)columnIndexIsNull:(int)arg1;	// IMP=0x000d3f6b
- (BOOL)columnIsNull:(id)arg1;	// IMP=0x000d3c89
- (const char *)UTF8StringForColumnIndex:(int)arg1;	// IMP=0x000d3f07
- (const char *)UTF8StringForColumnName:(id)arg1;	// IMP=0x000d3cca
- (id)columnNameForIndex:(int)arg1;	// IMP=0x000d3eb7
- (void)setParentDB:(id)arg1;	// IMP=0x000d39f1
- (id)query;	// IMP=0x000d39ff
- (void)setQuery:(id)arg1;	// IMP=0x000d3d08
- (id)columnNameToIndexMap;	// IMP=0x000d3a0a
- (void)setColumnNameToIndexMap:(id)arg1;	// IMP=0x000d3d46
- (id)statement;	// IMP=0x000d3a15
- (void)setStatement:(id)arg1;	// IMP=0x000d3d84

@end

@interface TwitterScribe : NSObject <NSCoding>
{
    NSMutableArray *eventBuffer;	// 4 = 0x4
    TwitterAccount *account;	// 8 = 0x8
    int bufferSpinLock;	// 12 = 0xc
}

- (id)initWithCoder:(id)arg1;	// IMP=0x000d4919
- (void)encodeWithCoder:(id)arg1;	// IMP=0x000d5261
- (void)logTweetSend;	// IMP=0x000d5232
- (void)logTweetReply;	// IMP=0x000d5203
- (void)logTweetRetweet;	// IMP=0x000d51d4
- (void)logTweetFavorite;	// IMP=0x000d51a5
- (void)logTweetOpenLink;	// IMP=0x000d5176
- (void)logUserFollow;	// IMP=0x000d5147
- (void)logUserUnfollow;	// IMP=0x000d5118
- (void)logNotificationOpen;	// IMP=0x000d50e9
- (void)logHomeImpressionFromReferringEvent:(id)arg1 items:(id)arg2;	// IMP=0x000d50ab
- (void)logAction:(id)arg1 page:(id)arg2 section:(id)arg3;	// IMP=0x000d504b
- (void)logCompositionImpression;	// IMP=0x000d501c
- (void)logFavoritesImpression;	// IMP=0x000d4fed
- (void)logQuoteTweet;	// IMP=0x000d4fbe
- (void)logMessagesImpression;	// IMP=0x000d4f8f
- (void)logMessagesConversationImpression;	// IMP=0x000d4f60
- (void)logMessageSend;	// IMP=0x000d4f31
- (void)logUserProfileImpressionForUserID:(id)arg1;	// IMP=0x000d4ef3
- (void)logUserTimelineImpressionFromReferringEvent:(id)arg1 userID:(id)arg2;	// IMP=0x000d4ea6
- (void)logSearchesHomeImpression;	// IMP=0x000d4e77
- (void)logLoggedOutHomepageImpression;	// IMP=0x000d4e48
- (void)logTweetDetailsImpressionFromReferringEvent:(id)arg1 items:(id)arg2;	// IMP=0x000d4e00
- (void)logRequestResponseURL:(id)arg1 statusCode:(int)arg2 networkStatus:(int)arg3 errorMessage:(id)arg4 duration:(double)arg5;	// IMP=0x000d4cf7
- (void)logEvent:(id)arg1 keysAndValues:(id)arg2;	// IMP=0x000d4aa6
- (void)dealloc;	// IMP=0x000d4a62
- (void)flush;	// IMP=0x000d499f
- (id)account;	// IMP=0x000d4900
- (void)setAccount:(id)arg1;	// IMP=0x000d490b

@end

@interface YAJLGen : NSObject
{
    struct yajl_gen_t *gen_;	// 4 = 0x4
    unsigned int genOptions_;	// 8 = 0x8
}

- (id)init;	// IMP=0x000d54ae
- (id)initWithGenOptions:(unsigned long)arg1 indentString:(id)arg2;	// IMP=0x000d54dd
- (void)dealloc;	// IMP=0x000d5cad
- (void)object:(id)arg1;	// IMP=0x000d56ff
- (void)null;	// IMP=0x000d56e6
- (void)_Bool:(BOOL)arg1;	// IMP=0x000d56c5
- (void)number:(id)arg1;	// IMP=0x000d565e
- (void)string:(id)arg1;	// IMP=0x000d560a
- (void)startDictionary;	// IMP=0x000d55f1
- (void)endDictionary;	// IMP=0x000d55d8
- (void)startArray;	// IMP=0x000d55bf
- (void)endArray;	// IMP=0x000d55a6
- (void)clear;	// IMP=0x000d558d
- (id)buffer;	// IMP=0x000d5548

@end

@interface TMRetroFilter : CIFilter
{
    CIImage *inputImage;	// 36 = 0x24
    NSNumber *inputTime;	// 40 = 0x28
    CIVector *inputResolution;	// 44 = 0x2c
}

+ (void)initialize;	// IMP=0x000d5dbc
- (id)init;	// IMP=0x000d5eae
- (struct CGRect)regionOf:(int)arg1 destRect:(struct CGRect)arg2 userInfo:(id)arg3;	// IMP=0x000d5ceb
- (id)outputImage;	// IMP=0x000d5d20

@end

@interface ABReachability : NSObject
{
    BOOL localWiFiRef;	// 4 = 0x4
    struct __SCNetworkReachability *reachabilityRef;	// 8 = 0x8
}

@end

@interface TMSettings : NSObject
{
}

+ (id)sharedSettings;	// IMP=0x000d5fdc
- (BOOL)chicagoMode;	// IMP=0x000d5fd0

@end

@interface ABUINavigationBar : ABUIView
{
    id <ABUINavigationBarDelegate> delegate;	// 80 = 0x50
    NSArray *navigationItems;	// 84 = 0x54
}

- (void)drawRect:(struct CGRect)arg1;	// IMP=0x000d61ac
- (void)dealloc;	// IMP=0x000d61f1
- (struct CGRect)workingRect;	// IMP=0x000d7423
- (struct CGRect)titleRect;	// IMP=0x000d73a4
- (struct CGRect)loneTitleRect;	// IMP=0x000d7325
- (struct CGRect)backRect;	// IMP=0x000d72b9
- (struct CGRect)rightRect;	// IMP=0x000d7239
- (void)layoutNavigationItems:(id)arg1;	// IMP=0x000d692a
- (void)layoutSubviews;	// IMP=0x000d61ca
- (void)setItems:(id)arg1 animated:(BOOL)arg2;	// IMP=0x000d6235
- (id)delegate;	// IMP=0x000d61b1
- (void)setDelegate:(id)arg1;	// IMP=0x000d61bc

@end

@interface TweetieDeveloperPreferencesController : NSObject
{
    NSTextField *consumerKey;	// 4 = 0x4
    NSTextField *consumerSecret;	// 8 = 0x8
    NSTextField *accessToken;	// 12 = 0xc
    NSTextField *accessSecret;	// 16 = 0x10
    NSBox *credentialBox;	// 20 = 0x14
    NSTextField *responseLabel;	// 24 = 0x18
}

- (void)awakeFromNib;	// IMP=0x000d7aca
- (void)controlTextDidChange:(id)arg1;	// IMP=0x000d7c95
- (void)clearCredentials;	// IMP=0x000d7e1e
- (void)updateDeveloperBox:(id)arg1;	// IMP=0x000d7ea2
- (void)verifyCredentials:(id)arg1;	// IMP=0x000d80ce
- (void)didVerifyCredentials:(id)arg1 info:(id)arg2;	// IMP=0x000d7f6b
- (void)visitDevSite:(id)arg1;	// IMP=0x000d8035
- (void)dealloc;	// IMP=0x000d8149

@end

@interface TMTwitterAPI : TwitterAPI
{
}

+ (BOOL)authorizable;	// IMP=0x000d833e
+ (id)keychainService;	// IMP=0x000d8189
- (void)attachCredentials:(id)arg1;	// IMP=0x000d8193

@end

@interface TMUserFollowActionView : ABUIView <ABUIViewDelegate>
{
    id <TMUserFollowActionViewDelegate> delegate;	// 80 = 0x50
    ABUIButton *followButton;	// 84 = 0x54
    ABUIButton *menuButton;	// 88 = 0x58
}

+ (id)font;	// IMP=0x000d87bd
+ (float)expectedWidth;	// IMP=0x000d86b1
- (id)initWithFrame:(struct CGRect)arg1;	// IMP=0x000d852a
- (struct CGRect)leftRect;	// IMP=0x000d90d9
- (struct CGRect)rightRect;	// IMP=0x000d907c
- (void)layoutSubviews;	// IMP=0x000d8fe0
- (void)drawRect:(struct CGRect)arg1;	// IMP=0x000d89da
- (void)_needsDisplayAnimated;	// IMP=0x000d8977
- (void)viewWillDisplayLayer:(id)arg1;	// IMP=0x000d8958
- (void)followAction:(id)arg1;	// IMP=0x000d8922
- (void)update;	// IMP=0x000d87ef
- (id)menuButton;	// IMP=0x000d8506
- (id)delegate;	// IMP=0x000d8511
- (void)setDelegate:(id)arg1;	// IMP=0x000d851c

@end

@interface TMSatelliteWindow : Tweetie2Window <ABUINavigationBarDelegate>
{
    TMColumnViewController *columnViewController;	// 220 = 0xdc
}

- (void)_runAnimation:(id)arg1;	// IMP=0x000d92fc
- (void)_jumpOut;	// IMP=0x000d91bb
- (id)initWithViewController:(id)arg1 oldFrameOnScreen:(struct CGRect)arg2;	// IMP=0x000d9508
- (BOOL)canGoFullscreen;	// IMP=0x000d919f
- (void)navigationBar:(id)arg1 shouldPopItem:(id)arg2;	// IMP=0x000d924b
- (id)autosaveName;	// IMP=0x000d91a6
- (void)dealloc;	// IMP=0x000d9485
- (id)columnViewController;	// IMP=0x000d91ad
- (void)setColumnViewController:(id)arg1;	// IMP=0x000d94cc

@end

@interface TMAutoCompleteCell : ABUITableViewCell
{
    TwitterAutocompleteResultItem *result;	// 88 = 0x58
    ABUIImage *image;	// 92 = 0x5c
    struct {
        unsigned int superBlue:1;
    } _flags;	// 96 = 0x60
}

+ (void)initialize;	// IMP=0x000da135
- (void)setResult:(id)arg1;	// IMP=0x000d9a6f
- (void)_requestImage;	// IMP=0x000da1d8
- (void)imageResponseMainThread:(id)arg1 info:(id)arg2;	// IMP=0x000d9b1f
- (void)imageResponse:(id)arg1 info:(id)arg2;	// IMP=0x000d9eed
- (void)setSelected:(BOOL)arg1 animated:(BOOL)arg2;	// IMP=0x000da2d1
- (void)_flashStep:(BOOL)arg1;	// IMP=0x000daa8d
- (void)flash;	// IMP=0x000da0f3
- (void)drawRect:(struct CGRect)arg1;	// IMP=0x000da47b
- (void)dealloc;	// IMP=0x000da411
- (id)image;	// IMP=0x000d9a59
- (void)setImage:(id)arg1;	// IMP=0x000da3d5
- (id)result;	// IMP=0x000d9a64

@end

@interface TMAutoCompleteWindow : ABUINSWindow <ABUITableViewDataSource, ABUITableViewDelegate>
{
    NSArray *autoCompleteItems;	// 144 = 0x90
    ABUITableView *_tableView;	// 148 = 0x94
    id <TMAutoCompleteTableView> delegate;	// 152 = 0x98
    int autocompleteType;	// 156 = 0x9c
}

- (id)init;	// IMP=0x000db2b1
- (void)dealloc;	// IMP=0x000dabac
- (long)windowMask;	// IMP=0x000dab20
- (BOOL)useCustomContentView;	// IMP=0x000dab27
- (void)drawBackground:(struct CGRect)arg1;	// IMP=0x000db1cd
- (void)setAutoCompleteItems:(id)arg1;	// IMP=0x000db15c
- (id)tableView;	// IMP=0x000dab31
- (long)tableView:(id)arg1 numberOfRowsInSection:(long)arg2;	// IMP=0x000db136
- (float)cellHeight;	// IMP=0x000dab3f
- (float)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;	// IMP=0x000db117
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;	// IMP=0x000dab5b
- (void)tableView:(id)arg1 didClickRowAtIndexPath:(id)arg2 withEvent:(id)arg3;	// IMP=0x000db08a
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;	// IMP=0x000daff6
- (id)selectedItem;	// IMP=0x000dafa0
- (void)fitToCellsAtPoint:(struct CGPoint)arg1;	// IMP=0x000dae42
- (void)selectFirstItem;	// IMP=0x000dadc3
- (void)previousItem;	// IMP=0x000dad0f
- (void)nextItem;	// IMP=0x000dac42
- (void)flashSelectedItem;	// IMP=0x000dabf3
- (int)autocompleteType;	// IMP=0x000dab60
- (void)setAutocompleteType:(int)arg1;	// IMP=0x000dab6e
- (id)delegate;	// IMP=0x000dab7f
- (void)setDelegate:(id)arg1;	// IMP=0x000dab8d
- (id)autoCompleteItems;	// IMP=0x000dab9e

@end

@interface TMUserListViewController : ABUIViewController
{
    TwitterUserList *userList;	// 20 = 0x14
    NSArray *users;	// 24 = 0x18
    ABUITableView *_tableView;	// 28 = 0x1c
}

- (void)dealloc;	// IMP=0x000db6a1
- (void)setUserList:(id)arg1;	// IMP=0x000db589
- (void)userListDidUpdate:(id)arg1;	// IMP=0x000db666
- (void)setUsers:(id)arg1;	// IMP=0x000db7de
- (void)loadView;	// IMP=0x000db727
- (id)users;	// IMP=0x000db573
- (id)userList;	// IMP=0x000db57e

@end

@interface TMASAutocompleteItem : NSObject
{
    TwitterAutocompleteResultItem *item;	// 4 = 0x4
}

- (void)dealloc;	// IMP=0x000dba55
- (id)identifier;	// IMP=0x000db84c
- (id)objectSpecifier;	// IMP=0x000db8b4
- (id)imageURLString;	// IMP=0x000db979
- (id)text;	// IMP=0x000db9ae
- (id)subText;	// IMP=0x000db9d1
- (id)item;	// IMP=0x000db841
- (void)setItem:(id)arg1;	// IMP=0x000dba99

@end

@interface TMASLoadUserCommand : NSScriptCommand
{
}

- (id)performDefaultImplementation;	// IMP=0x000dbb24
- (void)didReceiveUser:(id)arg1 info:(id)arg2;	// IMP=0x000dbad5

@end

@interface TMASLink : NSObject
{
    TwitterEntityURL *entity;	// 4 = 0x4
}

- (id)URLString;	// IMP=0x000dbbdf
- (id)expandedURLString;	// IMP=0x000dbc14
- (id)displayString;	// IMP=0x000dbc49
- (void)dealloc;	// IMP=0x000dbd95
- (id)objectSpecifier;	// IMP=0x000dbc6c
- (id)entity;	// IMP=0x000dbbd4
- (void)setEntity:(id)arg1;	// IMP=0x000dbdd9

@end

@interface TMASLocation : NSObject
{
    NSNumber *latitude;	// 4 = 0x4
    NSNumber *longitude;	// 8 = 0x8
    NSString *name;	// 12 = 0xc
}

- (void)dealloc;	// IMP=0x000dc067
- (id)latLongName;	// IMP=0x000dbe36
- (id)objectSpecifier;	// IMP=0x000dbe74
- (void)_generateNameFromLatLong;	// IMP=0x000dbf39
- (id)name;	// IMP=0x000dbe15
- (void)setName:(id)arg1;	// IMP=0x000dc14d
- (id)longitude;	// IMP=0x000dbe20
- (void)setLongitude:(id)arg1;	// IMP=0x000dc111
- (id)latitude;	// IMP=0x000dbe2b
- (void)setLatitude:(id)arg1;	// IMP=0x000dc0d5

@end

@interface TwitterTrend : NSObject <NSCoding>
{
    NSString *name;	// 4 = 0x4
    NSString *query;	// 8 = 0x8
    NSString *promotedTrendID;	// 12 = 0xc
    NSString *username;	// 16 = 0x10
    NSString *userID;	// 20 = 0x14
    BOOL hasRecordedImpression;	// 24 = 0x18
}

+ (id)parseLocalTrends:(id)arg1;	// IMP=0x000dc8e1
+ (void)parseLocalTrendsJSON:(id)arg1 info:(id)arg2;	// IMP=0x000dc852
+ (id)parseTrends:(id)arg1;	// IMP=0x000dc7ed
+ (void)parseTrendsJSON:(id)arg1 info:(id)arg2;	// IMP=0x000dc750
+ (void)parseOuterTrendsJSONArray:(id)arg1 info:(id)arg2;	// IMP=0x000dc709
+ (void)parseTrendsJSONArray:(id)arg1 info:(id)arg2;	// IMP=0x000dc66e
- (id)initWithCoder:(id)arg1;	// IMP=0x000dc2d1
- (void)dealloc;	// IMP=0x000dc5d6
- (void)encodeWithCoder:(id)arg1;	// IMP=0x000dc3ee
- (void)parseTrendJSON:(id)arg1 info:(id)arg2;	// IMP=0x000dcb56
- (void)parseTrendPromotedJSON:(id)arg1 info:(id)arg2;	// IMP=0x000dca72
- (void)parseTrendUserJSON:(id)arg1 info:(id)arg2;	// IMP=0x000dc4a8
- (id)description;	// IMP=0x000dc579
- (BOOL)isPromoted;	// IMP=0x000dc26e
- (BOOL)hasRecordedImpression;	// IMP=0x000dc280
- (void)setHasRecordedImpression:(BOOL)arg1;	// IMP=0x000dc28c
- (id)userID;	// IMP=0x000dc29a
- (void)setUserID:(id)arg1;	// IMP=0x000dca36
- (id)username;	// IMP=0x000dc2a5
- (void)setUsername:(id)arg1;	// IMP=0x000dc9fa
- (id)promotedTrendID;	// IMP=0x000dc2b0
- (void)setPromotedTrendID:(id)arg1;	// IMP=0x000dc9be
- (id)query;	// IMP=0x000dc2bb
- (void)setQuery:(id)arg1;	// IMP=0x000dc982
- (id)name;	// IMP=0x000dc2c6
- (void)setName:(id)arg1;	// IMP=0x000dc946

@end

@interface ABGPS : NSObject
{
}

+ (id)callbacks;	// IMP=0x000dce3d
+ (void)broadcast:(id)arg1;	// IMP=0x000dd2cd
+ (void)_startup;	// IMP=0x000dd418
+ (void)_shutdown;	// IMP=0x000dd536
+ (void)watchdog:(id)arg1;	// IMP=0x000dd5e7
+ (void)sleep;	// IMP=0x000dce7f
+ (void)wake;	// IMP=0x000dceaf
+ (id)beginGPSUpdates:(id)arg1;	// IMP=0x000dcedf
+ (void)endGPSUpdates:(id)arg1;	// IMP=0x000dcf4d
+ (void)locationManager:(id)arg1 didFailWithError:(id)arg2;	// IMP=0x000dd971
+ (BOOL)locationUpdatesAreProbablyDisabled;	// IMP=0x000dccf6
+ (void)locationManager:(id)arg1 didUpdateToLocation:(id)arg2 fromLocation:(id)arg3;	// IMP=0x000dcff4

@end

@interface ABGPSRequestInfo : NSObject <NSCopying, NSCoding>
{
    NSString *GUID;	// 4 = 0x4
    double created;	// 8 = 0x8
    double expires;	// 16 = 0x10
}

+ (id)token;	// IMP=0x000dd086
- (void)dealloc;	// IMP=0x000dd042
- (id)initWithCoder:(id)arg1;	// IMP=0x000dd218
- (void)encodeWithCoder:(id)arg1;	// IMP=0x000dcd12
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x000dd178
- (unsigned long)hash;	// IMP=0x000dcd90
- (BOOL)isEqual:(id)arg1;	// IMP=0x000dcdb3
- (id)description;	// IMP=0x000dcdf3
- (double)expires;	// IMP=0x000dcca0
- (void)setExpires:(double)arg1;	// IMP=0x000dccab
- (double)created;	// IMP=0x000dccbd
- (void)setCreated:(double)arg1;	// IMP=0x000dccc8
- (id)GUID;	// IMP=0x000dccda
- (void)setGUID:(id)arg1;	// IMP=0x000dd13c

@end

@interface TwitterEntityMedia : TwitterEntityURL
{
    NSString *mediaID;	// 32 = 0x20
    NSURL *mediaURL;	// 36 = 0x24
    struct CGSize thumbSize;	// 40 = 0x28
    struct CGSize smallSize;	// 48 = 0x30
    struct CGSize mediumSize;	// 56 = 0x38
    struct CGSize largeSize;	// 64 = 0x40
    int mediaType;	// 72 = 0x48
}

+ (void)parseEntityXML:(id)arg1 info:(id)arg2;	// IMP=0x000de0c5
- (void)parseSizeXML:(id)arg1 info:(id)arg2;	// IMP=0x000dda87
- (void)parseEntityJSON:(id)arg1 info:(id)arg2;	// IMP=0x000de69b
- (void)parseSizeJSON:(id)arg1 info:(id)arg2;	// IMP=0x000ddb90
- (void)parseDict:(id)arg1;	// IMP=0x000ddf18
- (id)initWithCoder:(id)arg1;	// IMP=0x000de591
- (void)encodeWithCoder:(id)arg1;	// IMP=0x000de45b
- (id)description;	// IMP=0x000ddd17
- (id)thumbURL;	// IMP=0x000ddd74
- (id)smallURL;	// IMP=0x000ddddd
- (id)mediumURL;	// IMP=0x000dde46
- (id)largeURL;	// IMP=0x000ddeaf
- (void)dealloc;	// IMP=0x000de402
- (id)mediaID;	// IMP=0x000dd9b0
- (void)setMediaID:(id)arg1;	// IMP=0x000de3c6
- (id)mediaURL;	// IMP=0x000dd9bb
- (void)setMediaURL:(id)arg1;	// IMP=0x000de38a
- (int)mediaType;	// IMP=0x000dd9c6
- (void)setMediaType:(int)arg1;	// IMP=0x000dd9d1
- (struct CGSize)largeSize;	// IMP=0x000dd9df
- (void)setLargeSize:(struct CGSize)arg1;	// IMP=0x000dd9ed
- (struct CGSize)mediumSize;	// IMP=0x000dda09
- (void)setMediumSize:(struct CGSize)arg1;	// IMP=0x000dda17
- (struct CGSize)thumbSize;	// IMP=0x000dda33
- (void)setThumbSize:(struct CGSize)arg1;	// IMP=0x000dda41
- (struct CGSize)smallSize;	// IMP=0x000dda5d
- (void)setSmallSize:(struct CGSize)arg1;	// IMP=0x000dda6b

@end

@interface ABUIView (ABUIViewAppKit)
- (void)setNSView:(id)arg1;	// IMP=0x000073e6
- (id)nsView;	// IMP=0x00005e57
- (id)nsWindow;	// IMP=0x0000746c
- (struct CGRect)globalFrame;	// IMP=0x00008131
- (struct CGRect)frameInNSView;	// IMP=0x00008218
- (struct CGRect)frameOnScreen;	// IMP=0x0000826d
- (struct CGPoint)localPointForLocationInWindow:(struct CGPoint)arg1;	// IMP=0x000082fb
- (struct CGPoint)localPointForEvent:(id)arg1;	// IMP=0x0000749d
- (BOOL)eventInside:(id)arg1;	// IMP=0x000074d9
@end

@interface ABUIView (ABUIViewRendering)
- (void)redraw;	// IMP=0x00007072
- (void)drawRect:(struct CGRect)arg1;	// IMP=0x00008d6f
- (void)setDrawRect:(id)arg1;	// IMP=0x00007101
- (void)setEverythingNeedsDisplay;	// IMP=0x0000714e
- (void)setNeedsDisplay;	// IMP=0x0000719c
- (void)setNeedsDisplayInRect:(struct CGRect)arg1;	// IMP=0x000071cd
- (BOOL)clipsToBounds;	// IMP=0x00007214
- (void)setClipsToBounds:(BOOL)arg1;	// IMP=0x00007248
- (float)alpha;	// IMP=0x00008ca1
- (void)setAlpha:(float)arg1;	// IMP=0x00007281
- (BOOL)isOpaque;	// IMP=0x000072bd
- (void)setOpaque:(BOOL)arg1;	// IMP=0x000072f1
- (BOOL)isHidden;	// IMP=0x0000732a
- (void)setHidden:(BOOL)arg1;	// IMP=0x0000735e
- (id)backgroundColor;	// IMP=0x00007397
- (void)setBackgroundColor:(id)arg1;	// IMP=0x00008cd2
@end

@interface ABUIView (ABUIViewHierarchy)
- (id)superview;	// IMP=0x000065d8
- (id)subviews;	// IMP=0x0000661b
- (long)deepNumberOfSubviews;	// IMP=0x00008389
- (void)setSubviews:(id)arg1;	// IMP=0x000084c6
- (void)_cleanupResponderChain;	// IMP=0x00006668
- (void)removeFromSuperview;	// IMP=0x00006747
- (BOOL)_canRespondToEvents;	// IMP=0x0000680e
- (void)keyDown:(id)arg1;	// IMP=0x00006850
- (BOOL)performKeyEquivalent:(id)arg1;	// IMP=0x00008761
- (void)setNextResponder:(id)arg1;	// IMP=0x00007d7f
- (void)addSubview:(id)arg1;	// IMP=0x00006964
- (void)insertSubview:(id)arg1 atIndex:(long)arg2;	// IMP=0x00006a59
- (void)insertSubview:(id)arg1 belowSubview:(id)arg2;	// IMP=0x00006b5c
- (void)insertSubview:(id)arg1 aboveSubview:(id)arg2;	// IMP=0x00006c72
- (id)_topSubview;	// IMP=0x00006d88
- (id)_bottomSubview;	// IMP=0x00006db9
- (void)bringSubviewToFront:(id)arg1;	// IMP=0x00006e1f
- (void)sendSubviewTo		:(id)arg1;	// IMP=0x00006ed0
- (void)willMoveToWindow:(id)arg1;	// IMP=0x00005e34
- (void)didMoveToWindow;	// IMP=0x00005e39
- (void)didAddSubview:(id)arg1;	// IMP=0x00005e3e
- (void)willRemoveSubview:(id)arg1;	// IMP=0x00005e43
- (void)willMoveToSuperview:(id)arg1;	// IMP=0x00005e48
- (void)didMoveToSuperview;	// IMP=0x00005e4d
- (BOOL)isDescendantOfView:(id)arg1;	// IMP=0x00006f81
- (id)viewWithTag:(long)arg1;	// IMP=0x0000892b
- (id)firstSuperviewOfClass:(Class)arg1;	// IMP=0x00006fb7
- (void)setNeedsLayout;	// IMP=0x00007010
- (void)layoutIfNeeded;	// IMP=0x00007041
- (void)layoutSubviews;	// IMP=0x00005e52
@end

@interface ABUIView (ABUIViewGeometry)
- (struct CGRect)frame;	// IMP=0x00007e15
- (void)setFrame:(struct CGRect)arg1;	// IMP=0x000062bc
- (struct CGRect)bounds;	// IMP=0x00007e4f
- (void)setBounds:(struct CGRect)arg1;	// IMP=0x00006303
- (void)setCenter:(struct CGPoint)arg1;	// IMP=0x00007e89
- (struct CGPoint)center;	// IMP=0x00007f05
- (struct CGAffineTransform)transform;	// IMP=0x00007f56
- (void)setTransform:(struct CGAffineTransform)arg1;	// IMP=0x0000634a
- (id)sortedSubviews;	// IMP=0x0000639c
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;	// IMP=0x00008ab9
- (BOOL)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;	// IMP=0x0000645f
- (struct CGPoint)convertPoint:(struct CGPoint)arg1 toView:(id)arg2;	// IMP=0x000064a9
- (struct CGPoint)convertPoint:(struct CGPoint)arg1 fromView:(id)arg2;	// IMP=0x0000650c
- (struct CGRect)convertRect:(struct CGRect)arg1 toView:(id)arg2;	// IMP=0x00007f90
- (struct CGRect)convertRect:(struct CGRect)arg1 fromView:(id)arg2;	// IMP=0x00007ffc
- (unsigned long)autoresizingMask;	// IMP=0x0000656f
- (void)setAutoresizingMask:(unsigned long)arg1;	// IMP=0x000065a0
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;	// IMP=0x00008068
- (void)sizeToFit;	// IMP=0x00008097
@end

@interface CALayer (ABUIViewAdditions)
- (id)associatedView;	// IMP=0x00005e62
- (id)closestAssociatedView;	// IMP=0x00005ebc
@end

@interface NSIndexPath (ABUITableView)
+ (id)indexPathForRow:(unsigned long)arg1 inSection:(unsigned long)arg2;	// IMP=0x0000d01e
- (unsigned long)section;	// IMP=0x0000cfd0
- (unsigned long)row;	// IMP=0x0000cff7
@end

@interface ABUIImage (AppKit)
- (id)nsImage;	// IMP=0x00010a36
@end

@interface NSString (ABUIStringDrawing)
- (struct CGSize)ab_sizeWithFont:(id)arg1;	// IMP=0x00011a45
- (struct CGSize)ab_sizeWithFont:(id)arg1 constrainedToSize:(struct CGSize)arg2;	// IMP=0x00011a9b
- (struct CGSize)drawInRect:(struct CGRect)arg1 withFont:(id)arg2 lineBreakMode:(int)arg3 alignment:(int)arg4;	// IMP=0x00011b07
- (struct CGSize)ab_drawInRect:(struct CGRect)arg1 color:(id)arg2 font:(id)arg3;	// IMP=0x00011b51
- (struct CGSize)ab_drawInRect:(struct CGRect)arg1 withFont:(id)arg2 lineBreakMode:(int)arg3 alignment:(int)arg4;	// IMP=0x00011bd5
@end

@interface NSAttributedString (ABUIStringDrawing)
- (id)ab_sharedTextRenderer;	// IMP=0x00011884
- (struct CGSize)ab_sizeConstrainedToWidth:(float)arg1;	// IMP=0x000118c6
- (struct CGSize)ab_sizeConstrainedToSize:(struct CGSize)arg1;	// IMP=0x000118f8
- (struct CGSize)ab_size;	// IMP=0x0001198c
- (struct CGSize)ab_drawInRect:(struct CGRect)arg1 context:(struct CGContext *)arg2;	// IMP=0x000119bb
- (struct CGSize)ab_drawInRect:(struct CGRect)arg1;	// IMP=0x00011cc1
@end

@interface ABUIView (Private)
- (id)textRenderers;	// IMP=0x000135e2
- (void)setTextRenderers:(id)arg1;	// IMP=0x000135ed
- (id)textRendererAtPoint:(struct CGPoint)arg1;	// IMP=0x00013853
@end

@interface ABUIView (Event)
- (id)_textRendererForEvent:(id)arg1;	// IMP=0x000139c9
- (void)mouseDown:(id)arg1;	// IMP=0x00013a0b
- (void)mouseUp:(id)arg1;	// IMP=0x00013a9c
- (void)mouseDragged:(id)arg1;	// IMP=0x00013cf9
- (BOOL)didDrag;	// IMP=0x000139a0
- (void)scrollWheel:(id)arg1;	// IMP=0x00013b30
- (void)beginGestureWithEvent:(id)arg1;	// IMP=0x00013b68
- (void)endGestureWithEvent:(id)arg1;	// IMP=0x00013ba0
- (void)mouseEntered:(id)arg1;	// IMP=0x00013bd8
- (void)mouseExited:(id)arg1;	// IMP=0x00013c0e
- (void)viewWillStartLiveResize;	// IMP=0x00013c44
- (void)viewDidEndLiveResize;	// IMP=0x00013c7f
- (void)mouseDown:(id)arg1 onSubview:(id)arg2;	// IMP=0x000139b5
- (void)mouseDragged:(id)arg1 onSubview:(id)arg2;	// IMP=0x000139ba
- (void)mouseUp:(id)arg1 fromSubview:(id)arg2;	// IMP=0x00013cba
- (void)mouseEntered:(id)arg1 onSubview:(id)arg2;	// IMP=0x000139bf
- (void)mouseExited:(id)arg1 fromSubview:(id)arg2;	// IMP=0x000139c4
@end

@interface ABUITextRenderer (Event)
+ (void)initialize;	// IMP=0x00014853
- (id)delegate;	// IMP=0x0001418f
- (void)setDelegate:(id)arg1;	// IMP=0x0001419a
- (struct CGPoint)localPointForEvent:(id)arg1;	// IMP=0x000141b2
- (long)stringIndexForPoint:(struct CGPoint)arg1;	// IMP=0x000148c0
- (long)stringIndexForEvent:(id)arg1;	// IMP=0x000141f8
- (id)rangeInRanges:(id)arg1 forStringIndex:(long)arg2;	// IMP=0x000148fd
- (id)dragImageForSelection:(struct _NSRange)arg1;	// IMP=0x000149f5
- (BOOL)beginWaitForDragInRange:(struct _NSRange)arg1 string:(id)arg2;	// IMP=0x00014ace
- (void)mouseDown:(id)arg1;	// IMP=0x0001425d
- (void)mouseUp:(id)arg1;	// IMP=0x00014544
- (void)mouseDragged:(id)arg1;	// IMP=0x000145b7
- (void)resetSelection;	// IMP=0x000145f7
- (void)selectAll:(id)arg1;	// IMP=0x0001464a
- (void)copy:(id)arg1;	// IMP=0x000146a7
- (BOOL)acceptsFirstResponder;	// IMP=0x000141a8
- (BOOL)resignFirstResponder;	// IMP=0x00014785
- (id)validRequestorForSendType:(id)arg1 returnType:(id)arg2;	// IMP=0x00014d4a
- (BOOL)writeSelectionToPasteboard:(id)arg1 types:(id)arg2;	// IMP=0x000147a9
@end

@interface NSShadow (ABUIAdditions)
+ (id)shadowWithRadius:(float)arg1 offset:(struct CGSize)arg2 color:(id)arg3;	// IMP=0x000151bf
@end

@interface NSMutableAttributedString (ABUIAdditions)
- (struct _NSRange)_stringRange;	// IMP=0x00014edb
- (void)setFont:(id)arg1 inRange:(struct _NSRange)arg2;	// IMP=0x00014efe
- (void)setColor:(id)arg1 inRange:(struct _NSRange)arg2;	// IMP=0x00014f4f
- (void)setShadow:(id)arg1 inRange:(struct _NSRange)arg2;	// IMP=0x00014fa0
- (void)setKerning:(float)arg1 inRange:(struct _NSRange)arg2;	// IMP=0x00014fe0
- (void)setFont:(id)arg1;	// IMP=0x0001503f
- (void)setColor:(id)arg1;	// IMP=0x00015081
- (void)setShadow:(id)arg1;	// IMP=0x000150c3
- (void)setKerning:(float)arg1;	// IMP=0x00015105
- (void)setLineHeight:(float)arg1;	// IMP=0x0001514b
- (void)setLineHeight:(float)arg1 inRange:(struct _NSRange)arg2;	// IMP=0x00015275
- (void)setAlignment:(int)arg1 lineBreakMode:(int)arg2;	// IMP=0x00015313
- (void)setAlignment:(int)arg1;	// IMP=0x00015191
- (id)font;	// IMP=0x00014e64
- (id)color;	// IMP=0x00014e6b
- (id)shadow;	// IMP=0x00014e72
- (int)alignment;	// IMP=0x00014e79
- (float)kerning;	// IMP=0x00014e80
- (float)lineHeight;	// IMP=0x00014e87
@end

@interface ABUIView (ABUIViewAnimation)
+ (id)_animationStack;	// IMP=0x000163f9
+ (id)_currentAnimation;	// IMP=0x0001643b
+ (void)animateWithDuration:(double)arg1 animations:(id)arg2;	// IMP=0x0001645d
+ (void)animateWithDuration:(double)arg1 animations:(id)arg2 completion:(void)arg3;	// IMP=0x00016496
+ (void)beginAnimations:(id)arg1 context:(void *)arg2;	// IMP=0x00016527
+ (void)commitAnimations;	// IMP=0x00016606
+ (void)setAnimationDelegate:(id)arg1;	// IMP=0x00016637
+ (void)setAnimationWillStartSelector:(SEL)arg1;	// IMP=0x0001666f
+ (void)setAnimationDidStopSelector:(SEL)arg1;	// IMP=0x000166a7
+ (void)setAnimationDuration:(double)arg1;	// IMP=0x000166df
+ (void)setAnimationDelay:(double)arg1;	// IMP=0x000168de
+ (void)setAnimationStartDate:(id)arg1;	// IMP=0x000169b8
+ (void)setAnimationCurve:(int)arg1;	// IMP=0x00016763
+ (void)setAnimationRepeatCount:(float)arg1;	// IMP=0x000167fa
+ (void)setAnimationRepeatAutoreverses:(BOOL)arg1;	// IMP=0x00016848
+ (void)setAnimationIsAdditive:(BOOL)arg1;	// IMP=0x00016893
+ (void)setAnimationBeginsFromCurrentState:(BOOL)arg1;	// IMP=0x000169e5
+ (void)setAnimationTransition:(int)arg1 forView:(id)arg2 cache:(BOOL)arg3;	// IMP=0x00016a12
+ (void)setAnimationsEnabled:(BOOL)arg1 block:(id)arg2;	// IMP=0x00015fb8
+ (void)setAnimationsEnabled:(BOOL)arg1;	// IMP=0x00015fe5
+ (BOOL)areAnimationsEnabled;	// IMP=0x00015ff5
+ (void)setAnimateContents:(BOOL)arg1;	// IMP=0x00016007
+ (BOOL)willAnimateContents;	// IMP=0x00016014
- (void)removeAllAnimations;	// IMP=0x00016327
- (id)actionForLayer:(id)arg1 forKey:(id)arg2;	// IMP=0x00016387
@end

@interface ABUIControl (TargetAction)
- (id)_targetActions;	// IMP=0x000178a4
- (void)addTarget:(id)arg1 action:(SEL)arg2 forControlEvents:(unsigned long)arg3;	// IMP=0x000178e7
- (void)addActionForControlEvents:(unsigned long)arg1 block:(id)arg2;	// IMP=0x000179ae
- (void)removeTarget:(id)arg1 action:(SEL)arg2 forControlEvents:(unsigned long)arg3;	// IMP=0x00017b16
- (id)allTargets;	// IMP=0x00017cd8
- (unsigned long)allControlEvents;	// IMP=0x00017e3d
- (id)actionsForTarget:(id)arg1 forControlEvent:(unsigned long)arg2;	// IMP=0x00018128
- (void)sendAction:(SEL)arg1 to:(id)arg2 forEvent:(id)arg3;	// IMP=0x00017a5d
- (void)sendActionsForControlEvents:(unsigned long)arg1;	// IMP=0x00017f5f
@end

@interface ABUITableView (Additions)
- (id)ab_reusableCellOfClass:(Class)arg1 identifier:(id)arg2;	// IMP=0x000182e3
@end

@interface ABUIViewController (ABUINavigationControllerItem)
- (id)navigationItem;	// IMP=0x00019e0f
@end

@interface NSArray (ABSimpleArchive)
- (const char *)ab_classNameForSimpleEncoding;	// IMP=0x0001c881
- (void)ab_simpleEncode:(CDStruct_da23731b *)arg1;	// IMP=0x0001c88b
- (id)ab_initWithSimpleDecoder:(CDStruct_da23731b *)arg1;	// IMP=0x0001ca01
@end

@interface NSData (ABSimpleArchive)
- (const char *)ab_classNameForSimpleEncoding;	// IMP=0x0001ca97
- (void)ab_simpleEncode:(CDStruct_da23731b *)arg1;	// IMP=0x0001caa1
- (id)ab_initWithSimpleDecoder:(CDStruct_da23731b *)arg1;	// IMP=0x0001cb29
@end

@interface NSDate (ABSimpleArchive)
- (const char *)ab_classNameForSimpleEncoding;	// IMP=0x0001cb76
- (void)ab_simpleEncode:(CDStruct_da23731b *)arg1;	// IMP=0x0001cb80
- (id)ab_initWithSimpleDecoder:(CDStruct_da23731b *)arg1;	// IMP=0x0001cbf3
@end

@interface NSDictionary (ABSimpleArchive)
- (const char *)ab_classNameForSimpleEncoding;	// IMP=0x0001cc37
- (void)ab_simpleEncode:(CDStruct_da23731b *)arg1;	// IMP=0x0001cc41
- (id)ab_initWithSimpleDecoder:(CDStruct_da23731b *)arg1;	// IMP=0x0001cd2b
@end

@interface NSString (ABSimpleArchive)
- (const char *)ab_classNameForSimpleEncoding;	// IMP=0x0001cd95
- (void)ab_simpleEncode:(CDStruct_da23731b *)arg1;	// IMP=0x0001cd9f
- (id)ab_initWithSimpleDecoder:(CDStruct_da23731b *)arg1;	// IMP=0x0001ce68
@end

@interface NSNumber (ABSimpleArchive)
- (const char *)ab_classNameForSimpleEncoding;	// IMP=0x0001cebd
- (void)ab_simpleEncode:(CDStruct_da23731b *)arg1;	// IMP=0x0001cec7
- (id)ab_initWithSimpleDecoder:(CDStruct_da23731b *)arg1;	// IMP=0x0001cf3a
@end

@interface NSObject (ABSimpleArchive)
- (const char *)ab_classNameForSimpleEncoding;	// IMP=0x0001d128
- (void)ab_simpleEncode:(CDStruct_da23731b *)arg1;	// IMP=0x0001d38e
- (id)ab_initWithSimpleDecoder:(CDStruct_da23731b *)arg1;	// IMP=0x0001d131
@end

@interface NSMutableArray (ABAdditions)
- (void)sort;	// IMP=0x0001d67d
@end

@interface NSArray (ABAdditions)
+ (id)arrayByConcatenatingArrays:(id)arg1;	// IMP=0x0001ea2c
- (id)ab_firstObjectThat:(SEL)arg1;	// IMP=0x0001d6a6
- (id)map:(SEL)arg1;	// IMP=0x0001d7af
- (id)map:(SEL)arg1 withObject:(id)arg2;	// IMP=0x0001d915
- (id)map:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;	// IMP=0x0001da82
- (id)mapFunction:(void *)arg1 context:(void *)arg2;	// IMP=0x0001dbf6
- (id)filter:(SEL)arg1;	// IMP=0x0001dd40
- (id)filter:(SEL)arg1 withObject:(id)arg2;	// IMP=0x0001deb0
- (void)apply:(SEL)arg1;	// IMP=0x0001e027
- (void)apply:(SEL)arg1 withObject:(id)arg2;	// IMP=0x0001e114
- (void)apply:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;	// IMP=0x0001e208
- (void)applyFunction:(void *)arg1 context:(void *)arg2;	// IMP=0x0001e307
- (id)arrayWithoutDuplicates;	// IMP=0x0001e3e2
- (id)sortedArray;	// IMP=0x0001d40d
- (id)reverseSortedArray;	// IMP=0x0001d436
- (id)arrayByRemovingDuplicates;	// IMP=0x0001e546
- (BOOL)hasCommonObjectWithArray:(id)arg1;	// IMP=0x0001d45f
- (id)subarrayWithAtMost:(long)arg1;	// IMP=0x0001d48d
- (id)subarrayWithAtMostFromEnd:(long)arg1;	// IMP=0x0001d4d8
- (id)reversedArray;	// IMP=0x0001d522
- (BOOL)ab_containsIndex:(long)arg1;	// IMP=0x0001d553
- (BOOL)ab_isSubsetOfArray:(id)arg1;	// IMP=0x0001e68f
- (id)ab_slice:(struct _NSRange)arg1;	// IMP=0x0001d588
- (void)ab_diff:(id)arg1 willAdd:(id *)arg2 willRemove:(id *)arg3;	// IMP=0x0001e788
- (id)arrayByReplacingFirstOccurrenceOfObject:(id)arg1 withObject:(id)arg2;	// IMP=0x0001d5fc
@end

@interface NSData (Base64)
+ (id)dataFromBase64String:(id)arg1;	// IMP=0x0001f245
- (id)initWithBase64String:(id)arg1;	// IMP=0x0001eb4b
- (id)base64EncodedString;	// IMP=0x0001f069
@end

@interface NSData (CommonHMAC)
- (id)HMACWithAlgorithm:(unsigned int)arg1;	// IMP=0x0001fcf4
- (id)HMACWithAlgorithm:(unsigned int)arg1 key:(id)arg2;	// IMP=0x00020993
@end

@interface NSData (LowLevelCommonCryptor)
- (id)_runCryptor:(struct _CCCryptor *)arg1 result:(int *)arg2;	// IMP=0x0002014a
- (id)dataEncryptedUsingAlgorithm:(unsigned int)arg1 key:(id)arg2 error:(int *)arg3;	// IMP=0x0001fbe6
- (id)dataEncryptedUsingAlgorithm:(unsigned int)arg1 key:(id)arg2 options:(unsigned int)arg3 error:(int *)arg4;	// IMP=0x0001fc2a
- (id)dataEncryptedUsingAlgorithm:(unsigned int)arg1 key:(id)arg2 initializationVector:(id)arg3 options:(unsigned int)arg4 error:(int *)arg5;	// IMP=0x00020249
- (id)decryptedDataUsingAlgorithm:(unsigned int)arg1 key:(id)arg2 error:(int *)arg3;	// IMP=0x0001fc6d
- (id)decryptedDataUsingAlgorithm:(unsigned int)arg1 key:(id)arg2 options:(unsigned int)arg3 error:(int *)arg4;	// IMP=0x0001fcb1
- (id)decryptedDataUsingAlgorithm:(unsigned int)arg1 key:(id)arg2 initializationVector:(id)arg3 options:(unsigned int)arg4 error:(int *)arg5;	// IMP=0x000205ee
@end

@interface NSData (CommonCryptor)
+ (id)randomAES256InitializationVector;	// IMP=0x0001fb5c
- (id)AES256EncryptedDataUsingKey:(id)arg1 initializationVector:(id)arg2 error:(id *)arg3;	// IMP=0x0001f725
- (id)AES256EncryptedDataUsingKey:(id)arg1 error:(id *)arg2;	// IMP=0x0001f79f
- (id)decryptedAES256DataUsingKey:(id)arg1 error:(id *)arg2;	// IMP=0x0001f812
- (id)DESEncryptedDataUsingKey:(id)arg1 error:(id *)arg2;	// IMP=0x0001f885
- (id)decryptedDESDataUsingKey:(id)arg1 error:(id *)arg2;	// IMP=0x0001f8f8
- (id)CASTEncryptedDataUsingKey:(id)arg1 error:(id *)arg2;	// IMP=0x0001f96b
- (id)decryptedCASTDataUsingKey:(id)arg1 error:(id *)arg2;	// IMP=0x0001f9de
@end

@interface NSData (CommonDigest)
- (id)MD2Sum;	// IMP=0x0001fd22
- (id)MD4Sum;	// IMP=0x0001fda7
- (id)MD5Sum;	// IMP=0x0001fe2c
- (id)SHA1Hash;	// IMP=0x0001feb1
- (id)SHA224Hash;	// IMP=0x0001ff36
- (id)SHA256Hash;	// IMP=0x0001ffbb
- (id)SHA384Hash;	// IMP=0x00020040
- (id)SHA512Hash;	// IMP=0x000200c5
@end

@interface NSError (CommonCryptoErrorDomain)
+ (id)errorWithCCCryptorStatus:(int)arg1;	// IMP=0x0001f28f
@end

@interface NSData (ABEncryption)
- (id)encryptWithKey:(id)arg1 hmacKey:(id)arg2 initializationVector:(id *)arg3 hmac:(id *)arg4;	// IMP=0x00020b96
@end

@interface NSData (ABAdditions)
- (id)ab_UTF8String;	// IMP=0x00020c4f
- (id)gzipInflate;	// IMP=0x00020d4a
- (id)gzipDeflate;	// IMP=0x00020f0e
- (id)_ab_sha1Digest;	// IMP=0x000210a1
- (id)_ab_hexString;	// IMP=0x00020ca4
@end

@interface NSString (ABDateAdditions)
- (id)dateValueFromISO8601;	// IMP=0x00021898
@end

@interface NSDate (ABAdditions)
- (BOOL)isBefore:(id)arg1;	// IMP=0x00021171
- (BOOL)isAfter:(id)arg1;	// IMP=0x000211a0
- (id)mediumDateString;	// IMP=0x000211cf
- (id)longDateString;	// IMP=0x00021263
- (id)_hour_minute_string;	// IMP=0x000212f7
- (void)_US_messagesStyleBoldString:(id *)arg1 normalString:(id *)arg2;	// IMP=0x00021373
- (void)messagesStyleBoldString:(id *)arg1 normalString:(id *)arg2;	// IMP=0x000215ac
- (void)relativeStyleBoldString:(id *)arg1 normalString:(id *)arg2;	// IMP=0x0002198a
- (id)tinyRelativeTimeAgoString;	// IMP=0x00021c88
- (id)relativeTimeAgoString;	// IMP=0x00021e4c
- (id)ISO8601String;	// IMP=0x00021745
- (id)ab_beginningOfDay;	// IMP=0x00021827
@end

@interface NSDateFormatter (ABAdditions)
+ (id)dateFormatterForHTTPLikeDate;	// IMP=0x00022122
+ (id)dateFormatterForJSONTwitterDate;	// IMP=0x00022211
@end

@interface NSDictionary (ABAdditions)
- (id)mapFunction:(void *)arg1 context:(void *)arg2;	// IMP=0x000223aa
- (id)URLParameterString;	// IMP=0x00022300
@end

@interface NSError (ABAdditions)
+ (id)errorWithDomain:(id)arg1 code:(long)arg2 description:(id)arg3;	// IMP=0x0002262b
- (id)errorString;	// IMP=0x0002250a
@end

@interface NSNumber (ABAdditions)
+ (id)formattedDecimalStringForNumberString:(id)arg1;	// IMP=0x00022740
+ (id)formattedSizeOfBytes:(long)arg1;	// IMP=0x00022793
- (id)URLEncodedString;	// IMP=0x0002268f
- (id)formattedDecimalString;	// IMP=0x000226c0
@end

@interface NSObject (ABAdditions)
- (id)delayProxy;	// IMP=0x00022b8a
- (id)backgroundProxy;	// IMP=0x00022bb3
- (id)mainThreadProxy;	// IMP=0x00022bdc
- (id)weakProxy;	// IMP=0x00022c05
- (void)dissociateWeakProxy;	// IMP=0x00022c2e
- (id)weakMainThreadProxy;	// IMP=0x00022c57
- (id)callback:(id)arg1;	// IMP=0x00022f37
- (id)isError;	// IMP=0x00022c88
- (void)_ab_setClass:(Class)arg1;	// IMP=0x00022f50
- (id)applicationSupportFolder;	// IMP=0x00022f71
@end

@interface NSString (ABEmoji)
+ (id)emojiPhotoString;	// IMP=0x00023038
+ (id)emojiVideoString;	// IMP=0x0002306a
+ (id)emojiAudioString;	// IMP=0x0002309c
+ (id)emojiWarningString;	// IMP=0x000230ce
+ (id)unicodeInfinityString;	// IMP=0x00023100
@end

@interface NSString (ABAdditions)
+ (id)GUID;	// IMP=0x000240d2
- (id)base64EncodedString;	// IMP=0x000231ba
- (id)_ab_sha1Digest;	// IMP=0x000231f3
- (id)ab_UTF8String;	// IMP=0x0002322c
- (id)stringByRot13ingString;	// IMP=0x00023265
- (BOOL)ab_containsRange:(struct _NSRange)arg1;	// IMP=0x00023380
- (id)ab_dictionaryFromParams;	// IMP=0x000233f0
- (BOOL)containsSubstring:(id)arg1;	// IMP=0x00023419
- (long)numberOfOccurrencesOfSubstring:(id)arg1;	// IMP=0x0002344a
- (BOOL)containsSubstringIgnoringCase:(id)arg1;	// IMP=0x000234de
- (BOOL)matchesPartialsSearchString:(id)arg1;	// IMP=0x00023b97
- (long)ab_editDistance:(id)arg1;	// IMP=0x00023ce5
- (BOOL)ab_fuzzyPrefixMatch:(id)arg1;	// IMP=0x00023517
- (id)stringByUnescapingXMLEntities;	// IMP=0x000235ac
- (id)stringByEscapingXMLEntities;	// IMP=0x00023663
- (long)caseInsensitiveCompare:(id)arg1;	// IMP=0x0002371a
- (id)URLEncodedString;	// IMP=0x00023748
- (id)ab_URLDecodedString:(BOOL)arg1;	// IMP=0x000237f7
- (id)dateValueFromHTTPLikeDate;	// IMP=0x00023846
- (id)dateValueFromJSONTwitterDate;	// IMP=0x00023881
- (long)ab_lengthAssumingRangesForRegex:(id)arg1 areReplacedByFixedLength:(long)arg2;	// IMP=0x00023f45
- (id)arrayOfRangesForRegex:(id)arg1 class:(Class)arg2;	// IMP=0x00023fe7
- (id)arrayOfRangesForRegex:(id)arg1;	// IMP=0x000238bc
- (int)activeStringType;	// IMP=0x000238fe
@end

@interface NSURL (ABAdditions)
+ (id)parseURLQueryString:(id)arg1;	// IMP=0x00024fa9
+ (id)ab_URLWithString:(id)arg1;	// IMP=0x00024f42
- (id)ab_displayString;	// IMP=0x00024d69
- (BOOL)isTalon;	// IMP=0x00024f06
@end

@interface NSObject (ABBackgroundThread)
+ (void)_ab_runBackgroundThread;	// IMP=0x000251d8
- (id)_ab_sharedBackgroundThread;	// IMP=0x000252cb
- (void)performSelectorOnSharedBackgroundThread:(SEL)arg1 withObject:(id)arg2;	// IMP=0x0002518b
@end

@interface ABHTTPRequest (CF)
- (void)CF_startRequest;	// IMP=0x00025e2c
@end

@interface ABHTTPRequest (NS)
- (id)urlRequest;	// IMP=0x000260fd
- (void)NS_startRequest;	// IMP=0x00025e31
- (void)NS_startRequestInBackground;	// IMP=0x0002653b
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;	// IMP=0x00025e62
- (void)connection:(id)arg1 didReceiveData:(id)arg2;	// IMP=0x00025f5d
- (void)connectionDidFinishLoading:(id)arg1;	// IMP=0x00026019
- (void)connection:(id)arg1 didFailWithError:(id)arg2;	// IMP=0x00026038
- (void)connection:(id)arg1 didSendBodyData:(long)arg2 totalBytesWritten:(long)arg3 totalBytesExpectedToWrite:(long)arg4;	// IMP=0x00026071
- (id)connection:(id)arg1 willSendRequest:(id)arg2 redirectResponse:(id)arg3;	// IMP=0x000260ab
@end

@interface ABHTTPRequest (ABAdditions)
+ (void)GET:(id)arg1 callback:(id)arg2;	// IMP=0x0002767b
+ (void)HEAD:(id)arg1 callback:(id)arg2;	// IMP=0x00027705
@end

@interface ABHTTPRequest (Additions)
+ (void)beginNetworkActivity;	// IMP=0x000278f5
+ (void)endNetworkActivity;	// IMP=0x00027954
+ (id)persistentRequests;	// IMP=0x000277c8
+ (void)savePersistentRequests;	// IMP=0x00027881
+ (void)addPersistentRequest:(id)arg1;	// IMP=0x000279b2
+ (void)removePersistentRequest:(id)arg1;	// IMP=0x00027a91
+ (void)servicePersistentRequests;	// IMP=0x00027b70
- (BOOL)isPersistent;	// IMP=0x000277ac
- (void)_didStartRequest;	// IMP=0x000277be
- (void)_didEndRequest;	// IMP=0x000277c3
@end

@interface NSString (OAuth)
- (id)ab_RFC3986EncodedString;	// IMP=0x0002ba28
@end

@interface ABHTTPRequest (OAuth)
- (id)oAuthAuthorizationHeader;	// IMP=0x0002be7b
@end

@interface NSObject (ABAssociatedObjectAdditions)
- (void)ab_setAssignedAssociatedObject:(id)arg1 forKey:(void *)arg2;	// IMP=0x0002d3c7
- (void)ab_setNonAtomicRetainedAssociatedObject:(id)arg1 forKey:(void *)arg2;	// IMP=0x0002d3f3
- (id)ab_associatedObjectForKey:(void *)arg1;	// IMP=0x0002d41f
@end

@interface NSMutableString (RegexKitLiteAdditions)
- (unsigned long)replaceOccurrencesOfRegex:(id)arg1 withString:(id)arg2;	// IMP=0x0002ff42
- (unsigned long)replaceOccurrencesOfRegex:(id)arg1 withString:(id)arg2 range:(struct _NSRange)arg3;	// IMP=0x0002ffaf
- (unsigned long)replaceOccurrencesOfRegex:(id)arg1 withString:(id)arg2 options:(unsigned int)arg3 range:(struct _NSRange)arg4 error:(id *)arg5;	// IMP=0x0003001a
@end

@interface NSString (RegexKitLiteAdditions)
+ (void)clearStringCache;	// IMP=0x0002dbbf
+ (long)captureCountForRegex:(id)arg1;	// IMP=0x0002d636
+ (long)captureCountForRegex:(id)arg1 options:(unsigned int)arg2 error:(id *)arg3;	// IMP=0x00030083
- (id)componentsSeparatedByRegex:(id)arg1;	// IMP=0x0002f9a4
- (id)componentsSeparatedByRegex:(id)arg1 range:(struct _NSRange)arg2;	// IMP=0x0002fa09
- (id)componentsSeparatedByRegex:(id)arg1 options:(unsigned int)arg2 range:(struct _NSRange)arg3 error:(id *)arg4;	// IMP=0x0002fa6c
- (BOOL)isMatchedByRegex:(id)arg1;	// IMP=0x0002facd
- (BOOL)isMatchedByRegex:(id)arg1 inRange:(struct _NSRange)arg2;	// IMP=0x0002fb4c
- (BOOL)isMatchedByRegex:(id)arg1 options:(unsigned int)arg2 inRange:(struct _NSRange)arg3 error:(id *)arg4;	// IMP=0x0002fbc9
- (struct _NSRange)rangeOfRegex:(id)arg1;	// IMP=0x0002fc44
- (struct _NSRange)rangeOfRegex:(id)arg1 capture:(long)arg2;	// IMP=0x0002fcbc
- (struct _NSRange)rangeOfRegex:(id)arg1 inRange:(struct _NSRange)arg2;	// IMP=0x0002fd33
- (struct _NSRange)rangeOfRegex:(id)arg1 options:(unsigned int)arg2 inRange:(struct _NSRange)arg3 capture:(long)arg4 error:(id *)arg5;	// IMP=0x0002fda9
- (id)stringByMatching:(id)arg1;	// IMP=0x0002d54f
- (id)stringByMatching:(id)arg1 capture:(long)arg2;	// IMP=0x0002d59d
- (id)stringByMatching:(id)arg1 inRange:(struct _NSRange)arg2;	// IMP=0x0002d5ea
- (id)stringByMatching:(id)arg1 options:(unsigned int)arg2 inRange:(struct _NSRange)arg3 capture:(long)arg4 error:(id *)arg5;	// IMP=0x0002dcea
- (id)stringByReplacingOccurrencesOfRegex:(id)arg1 withString:(id)arg2;	// IMP=0x0002fe1c
- (id)stringByReplacingOccurrencesOfRegex:(id)arg1 withString:(id)arg2 range:(struct _NSRange)arg3;	// IMP=0x0002fe80
- (id)stringByReplacingOccurrencesOfRegex:(id)arg1 withString:(id)arg2 options:(unsigned int)arg3 range:(struct _NSRange)arg4 error:(id *)arg5;	// IMP=0x0002fee2
@end

@interface NSString (RegexKitLiteEnumeratorAdditions)
- (id)matchEnumeratorWithRegex:(id)arg1;	// IMP=0x00030256
@end

@interface TwitterStatus (StaticMaps)
- (id)staticMapURLwithWidth:(int)arg1 height:(int)arg2;	// IMP=0x000323d7
@end

@interface TwitterPlace (StaticMaps)
- (id)staticMapURLwithWidth:(int)arg1 height:(int)arg2;	// IMP=0x000321c5
@end

@interface GeoRSSPoint (StaticMaps)
- (id)staticMapURLwithWidth:(int)arg1 height:(int)arg2;	// IMP=0x00032311
@end

@interface URLShorteningService (InText)
+ (int)shortenURLsInString:(id)arg1 fromAccount:(id)arg2 callback:(id)arg3;	// IMP=0x00038f89
+ (void)shortenURLInStringResponse:(id)arg1 info:(id)arg2;	// IMP=0x00038e67
+ (id)stringByApplyingShortenedURL:(id)arg1 toString:(id)arg2;	// IMP=0x00038f26
@end

@interface NSURL (IFUnicodeURL)
+ (id)URLWithUnicodeString:(id)arg1;	// IMP=0x0003db72
- (id)initWithUnicodeString:(id)arg1;	// IMP=0x0003e163
- (id)unicodeAbsoluteString;	// IMP=0x0003e194
- (id)unicodeHost;	// IMP=0x0003e1bb
@end

@interface NSString (IFUnicodeURLHelpers)
- (id)IFUnicodeURL_splitAfterString:(id)arg1;	// IMP=0x0003da22
- (id)IFUnicodeURL_splitBeforeCharactersInSet:(id)arg1;	// IMP=0x0003dab4
@end

@interface TwitterAPI (AccountMethods)
- (void)verifyCredentials;	// IMP=0x0003e1e2
- (void)verifyCredentialsResponse:(id)arg1 info:(id)arg2;	// IMP=0x0003e24a
- (void)getSettings;	// IMP=0x0003e2b2
- (void)updateSettings:(id)arg1;	// IMP=0x0003ea18
- (void)settingsResponse:(id)arg1 info:(id)arg2;	// IMP=0x0003e31a
- (void)updateProfileImage:(id)arg1;	// IMP=0x0003e3aa
- (void)rateLimitStatus;	// IMP=0x0003e46e
- (void)rateLimitResponse:(id)arg1 info:(id)arg2;	// IMP=0x0003e4b5
- (void)updateProfileName:(id)arg1 email:(id)arg2 url:(id)arg3 location:(id)arg4 description:(id)arg5;	// IMP=0x0003e539
- (void)savedSearches;	// IMP=0x0003e69f
- (void)savedSearchesResponse:(id)arg1 info:(id)arg2;	// IMP=0x0003e6e6
- (void)createSavedSearch:(id)arg1 named:(id)arg2;	// IMP=0x0003e776
- (void)createSavedSearchResponse:(id)arg1 info:(id)arg2;	// IMP=0x0003e850
- (void)removeSavedSearch:(id)arg1;	// IMP=0x0003e8e0
- (void)removeSavedSearchResponse:(id)arg1 info:(id)arg2;	// IMP=0x0003e9b1
@end

@interface TwitterAPI (BlockMethods)
- (void)blockingIDs;	// IMP=0x0003ec1d
- (void)didReceiveBlockingIds:(id)arg1 info:(id)arg2;	// IMP=0x0003ec85
- (void)blockUserID:(id)arg1;	// IMP=0x0003ed15
- (void)blockUsername:(id)arg1;	// IMP=0x0003ee00
- (void)unblockUserID:(id)arg1;	// IMP=0x0003eeeb
- (void)unblockUsername:(id)arg1;	// IMP=0x0003efd6
- (id)blocksExistsCallback;	// IMP=0x0003ebf6
- (void)isBlockingUserID:(id)arg1;	// IMP=0x0003f0c1
- (void)isBlockingUsername:(id)arg1;	// IMP=0x0003f1a4
- (void)blocksExistsResponse:(id)arg1 info:(id)arg2;	// IMP=0x0003f287
- (void)ignoreRetweetsIDs;	// IMP=0x0003f330
- (void)didReceiveIgnoreRetweets:(id)arg1 info:(id)arg2;	// IMP=0x0003f398
@end

@interface TwitterAPI (DirectMessageMethods)
- (id)directMessageResponseCallback;	// IMP=0x0003f428
- (id)directMessagesResponseCallback;	// IMP=0x0003f44f
- (void)directMessagesSinceID:(id)arg1 maxID:(id)arg2 page:(id)arg3;	// IMP=0x0003f476
- (void)sentDirectMessagesSinceID:(id)arg1 maxID:(id)arg2 page:(id)arg3;	// IMP=0x0003f5a3
- (void)send:(id)arg1 toUserID:(id)arg2;	// IMP=0x0003f6d0
- (void)send:(id)arg1 toUsername:(id)arg2;	// IMP=0x0003f7c7
- (void)directMessageResponse:(id)arg1 info:(id)arg2;	// IMP=0x0003f8be
- (void)destroyDirectMessage:(id)arg1;	// IMP=0x0003f96b
- (void)directMessagesResponse:(id)arg1 info:(id)arg2;	// IMP=0x0003f9fb
@end

@interface TwitterAPI (FavoriteMethods)
- (void)favoritesForUserID:(id)arg1 page:(id)arg2;	// IMP=0x0003faa8
- (void)favoritesForUsername:(id)arg1 page:(id)arg2;	// IMP=0x0003fbe5
- (void)favoriteStatus:(id)arg1;	// IMP=0x0003fd22
- (void)unfavoriteStatus:(id)arg1;	// IMP=0x0003feba
- (void)didFavorite:(id)arg1 info:(id)arg2;	// IMP=0x00040052
@end

@interface TwitterAPI (FriendshipMethods)
- (void)followUserID:(id)arg1;	// IMP=0x000400ae
- (void)followUsername:(id)arg1;	// IMP=0x00040199
- (void)followUsernames:(id)arg1;	// IMP=0x00040284
- (void)lookupRelationships:(id)arg1;	// IMP=0x00040389
- (void)unfollowUserID:(id)arg1;	// IMP=0x0004048e
- (void)unfollowUsername:(id)arg1;	// IMP=0x0004051e
- (void)relationshipsResponse:(id)arg1 info:(id)arg2;	// IMP=0x000405ae
- (id)relationshipsResponseCallback;	// IMP=0x00040b38
- (id)friendshipExistsCallback;	// IMP=0x00040b5f
- (id)friendshipInfoCallback;	// IMP=0x00040b86
- (void)userID:(id)arg1 followsUserID:(id)arg2;	// IMP=0x0004063e
- (void)friendshipForSourceUserID:(id)arg1 targetUserID:(id)arg2;	// IMP=0x00040722
- (void)friendshipForSourceUsername:(id)arg1 targetUsername:(id)arg2;	// IMP=0x00040806
- (void)username:(id)arg1 followsUsername:(id)arg2;	// IMP=0x000408ea
- (void)friendshipInfo:(id)arg1 info:(id)arg2;	// IMP=0x00040bad
- (void)parseFriendshipInfoXML:(id)arg1 info:(id)arg2;	// IMP=0x00040c8a
- (void)parseFriendshipInfoSourceXML:(id)arg1 info:(id)arg2;	// IMP=0x000409ce
- (void)friendshipExists:(id)arg1 info:(id)arg2;	// IMP=0x00040d27
@end

@interface TwitterAPI (Lists)
+ (id)SULUsernameForCurrentLanguage;	// IMP=0x00041af2
- (void)listsForUsername:(id)arg1;	// IMP=0x00040e20
- (void)lists;	// IMP=0x00040ea8
- (void)listSubscriptionsForUsername:(id)arg1;	// IMP=0x00040edf
- (void)listSubscriptions;	// IMP=0x00040f67
- (void)listMembershipsForUsername:(id)arg1;	// IMP=0x00040f9e
- (void)listMemberships;	// IMP=0x00041026
- (void)createList:(id)arg1 description:(id)arg2 mode:(id)arg3;	// IMP=0x0004105d
- (void)updateList:(id)arg1 name:(id)arg2 description:(id)arg3 mode:(id)arg4;	// IMP=0x000411c0
- (void)deleteList:(id)arg1;	// IMP=0x00041788
- (void)deleteListResponse:(id)arg1 info:(id)arg2;	// IMP=0x0004132c
- (void)listStatuses:(id)arg1 username:(id)arg2 sinceID:(id)arg3 maxID:(id)arg4 count:(id)arg5 page:(id)arg6;	// IMP=0x00041393
- (void)listWithUsername:(id)arg1 slug:(id)arg2;	// IMP=0x00041532
- (void)followList:(id)arg1 username:(id)arg2;	// IMP=0x0004159e
- (void)unfollowList:(id)arg1 username:(id)arg2;	// IMP=0x00041635
- (void)list:(id)arg1 username:(id)arg2 followsUserID:(id)arg3;	// IMP=0x00041838
- (void)listDoesFollowUser:(id)arg1 info:(id)arg2;	// IMP=0x000416c4
- (void)list:(id)arg1 username:(id)arg2 followUserID:(id)arg3;	// IMP=0x000418d8
- (void)didfollowfromlist:(id)arg1 info:(id)arg2;	// IMP=0x00040e1b
- (void)list:(id)arg1 username:(id)arg2 unfollowUserID:(id)arg3;	// IMP=0x000419e5
- (void)didunfollowfromlist:(id)arg1 info:(id)arg2;	// IMP=0x0004172c
@end

@interface TwitterAPI (NotificationMethods)
- (void)enableNotificationsForUserID:(id)arg1;	// IMP=0x00041b7b
- (void)enableNotificationsForUsername:(id)arg1;	// IMP=0x00041c66
- (void)disableNotificationsForUserID:(id)arg1;	// IMP=0x00041d51
- (void)disableNotificationsForUsername:(id)arg1;	// IMP=0x00041e3c
@end

@interface TwitterAPI (Private)
+ (id)platform;	// IMP=0x00041f3c
+ (id)currentOSVersion;	// IMP=0x00042bfd
+ (id)userAgent;	// IMP=0x00042c37
- (id)apiRoot;	// IMP=0x00041f46
- (id)baseURL;	// IMP=0x00041f27
- (id)apiRoot_v1;	// IMP=0x00041f62
- (id)username;	// IMP=0x00041fa5
- (id)baseRequest;	// IMP=0x00041fc8
- (id)baseRequestWithPartialURL:(id)arg1 apiRoot:(id)arg2;	// IMP=0x000420fd
- (void)attachCredentials:(id)arg1;	// IMP=0x000421c7
- (id)request:(id)arg1 apiRoot:(id)arg2 method:(id)arg3 body:(id)arg4 multiPartFormData:(id)arg5 persistent:(BOOL)arg6 callback:(id)arg7 start:(BOOL)arg8;	// IMP=0x00042d0a
- (void)request:(id)arg1 method:(id)arg2 body:(id)arg3 multiPartFormData:(id)arg4 persistent:(BOOL)arg5 callback:(id)arg6;	// IMP=0x0004226c
- (void)POST:(id)arg1 multiPartFormData:(id)arg2 callback:(id)arg3;	// IMP=0x000422e8
- (void)POST:(id)arg1 body:(id)arg2 callback:(id)arg3;	// IMP=0x00042338
- (void)persistentPOST:(id)arg1 body:(id)arg2 callback:(id)arg3;	// IMP=0x00042388
- (void)GET:(id)arg1 callback:(id)arg2;	// IMP=0x000423d8
- (void)v1_request:(id)arg1 method:(id)arg2 body:(id)arg3 multiPartFormData:(id)arg4 persistent:(BOOL)arg5 callback:(id)arg6;	// IMP=0x00042429
- (void)v1_POST:(id)arg1 body:(id)arg2 callback:(id)arg3;	// IMP=0x00042493
- (void)v1_POST:(id)arg1 multiPartFormData:(id)arg2 callback:(id)arg3;	// IMP=0x000424e3
- (void)v1_persistentPOST:(id)arg1 body:(id)arg2 callback:(id)arg3;	// IMP=0x00042533
- (void)v1_GET:(id)arg1 callback:(id)arg2;	// IMP=0x00042583
- (void)v1_DELETE:(id)arg1 body:(id)arg2 callback:(id)arg3;	// IMP=0x000425d4
- (void)v1_DELETE:(id)arg1 callback:(id)arg2;	// IMP=0x00042624
- (BOOL)fixBadClockSetting:(id)arg1;	// IMP=0x000432d4
- (void)requestResponse:(id)arg1 info:(id)arg2;	// IMP=0x00042e14
- (void)parseTwitterError:(id)arg1 info:(id)arg2;	// IMP=0x00042675
- (void)invokeCallback:(id)arg1;	// IMP=0x00042719
- (void)statusRequest:(id)arg1 sinceID:(id)arg2 maxID:(id)arg3 count:(id)arg4 page:(id)arg5;	// IMP=0x0004344c
- (id)statusesResponseCallback;	// IMP=0x000431c3
- (id)statusResponseCallback;	// IMP=0x000431ea
- (void)statusResponse:(id)arg1 info:(id)arg2;	// IMP=0x00042743
- (void)statusesResponse:(id)arg1 info:(id)arg2;	// IMP=0x000427f0
- (id)usersResponseCallback;	// IMP=0x00043211
- (id)userResponseCallback;	// IMP=0x00043238
- (id)usersJSONResponseCallback;	// IMP=0x0004325f
- (void)userResponse:(id)arg1 info:(id)arg2;	// IMP=0x0004289d
- (void)_usersResponse:(id)arg1 info:(id)arg2 parser:(SEL)arg3;	// IMP=0x0004296b
- (void)usersResponse:(id)arg1 info:(id)arg2;	// IMP=0x00042a25
- (void)usersJSONResponse:(id)arg1 info:(id)arg2;	// IMP=0x00042a5c
- (id)listsResponseCallback;	// IMP=0x00043286
- (id)listResponseCallback;	// IMP=0x000432ad
- (void)listsResponse:(id)arg1 info:(id)arg2;	// IMP=0x00042a93
- (void)listResponse:(id)arg1 info:(id)arg2;	// IMP=0x00042b40
@end

@interface TwitterAPI (Push)
- (void)registerForPushWithDeviceToken:(id)arg1 enabledFor:(int)arg2;	// IMP=0x00043608
- (void)loadPushSettings;	// IMP=0x0004360d
- (void)didReceiveSettings:(id)arg1 info:(id)arg2;	// IMP=0x00043617
- (void)unregisterForPush;	// IMP=0x00043612
- (void)didUnregisterForPush:(id)arg1 info:(id)arg2;	// IMP=0x000436a7
- (void)didRegisterForPush:(id)arg1 info:(id)arg2;	// IMP=0x00043707
@end

@interface TwitterAPI (Retweet)
- (void)retweet:(id)arg1;	// IMP=0x00043886
- (void)retweetResponse:(id)arg1 info:(id)arg2;	// IMP=0x00043797
- (void)retweetedByMeSinceID:(id)arg1 maxID:(id)arg2 count:(id)arg3 page:(id)arg4;	// IMP=0x000437bd
- (void)retweetedToMeSinceID:(id)arg1 maxID:(id)arg2 count:(id)arg3 page:(id)arg4;	// IMP=0x00043800
- (void)retweetsOfMeSinceID:(id)arg1 maxID:(id)arg2 count:(id)arg3 page:(id)arg4;	// IMP=0x00043843
@end

@interface TwitterAPI (Signup)
- (void)mobileSignupUsername:(id)arg1 password:(id)arg2 fullName:(id)arg3 email:(id)arg4 captchaToken:(id)arg5 captchaSolution:(id)arg6;	// IMP=0x00043c38
- (void)mobileSignupResponse:(id)arg1 info:(id)arg2;	// IMP=0x000442f8
- (void)generateAccountWithUsername:(id)arg1 password:(id)arg2 name:(id)arg3 email:(id)arg4 language:(id)arg5 timeZone:(id)arg6 discoverableByEmail:(id)arg7 discoverableByMobile:(id)arg8;	// IMP=0x00043ec2
- (void)generateAccountResponse:(id)arg1 info:(id)arg2;	// IMP=0x000444dc
- (void)parseGenerateAccountErrorJSON:(id)arg1 info:(id)arg2;	// IMP=0x00043a3e
- (void)xAuthRequestAccessTokens;	// IMP=0x000440fb
- (void)xAuthMigrateResponse:(id)arg1 info:(id)arg2;	// IMP=0x00043af1
@end

@interface TwitterAPI (SpamMethods)
- (id)reportSpamCallback;	// IMP=0x00044765
- (void)reportSpamResponse:(id)arg1 info:(id)arg2;	// IMP=0x00044760
- (void)reportSpamUserID:(id)arg1;	// IMP=0x0004478c
- (void)reportSpamUsername:(id)arg1;	// IMP=0x0004485e
@end

@interface TwitterAPI (StatusMethods)
- (void)publicTimeline;	// IMP=0x00044930
- (void)friendsTimelineSinceID:(id)arg1 maxID:(id)arg2 count:(id)arg3 page:(id)arg4;	// IMP=0x0004496f
- (void)repliesSinceID:(id)arg1 maxID:(id)arg2 count:(id)arg3 page:(id)arg4;	// IMP=0x000449b2
- (void)userTimelineForUserID:(id)arg1 sinceID:(id)arg2 maxID:(id)arg3 count:(id)arg4 page:(id)arg5;	// IMP=0x000449f5
- (void)userTimelineForUsername:(id)arg1 sinceID:(id)arg2 maxID:(id)arg3 count:(id)arg4 page:(id)arg5;	// IMP=0x00044bab
- (void)statusWithID:(id)arg1;	// IMP=0x00044d61
- (void)_update:(id)arg1 inReplyToStatusID:(id)arg2 geotag:(BOOL)arg3 latitude:(double)arg4 longitude:(double)arg5;	// IMP=0x00044e7a
- (void)updateWithComposition:(id)arg1;	// IMP=0x00045069
- (void)update:(id)arg1 inReplyToStatusID:(id)arg2 latitude:(double)arg3 longitude:(double)arg4;	// IMP=0x00044dda
- (void)update:(id)arg1 inReplyToStatusID:(id)arg2;	// IMP=0x00044e25
- (void)destroyStatus:(id)arg1;	// IMP=0x000454dd
@end

@interface TwitterAPI (UserMethods)
+ (id)usersLookupParamDataWithEmails:(id)arg1 phones:(id)arg2;	// IMP=0x00045e37
- (void)friendsForUserID:(id)arg1 cursor:(id)arg2;	// IMP=0x00045663
- (void)friendsForUsername:(id)arg1 cursor:(id)arg2;	// IMP=0x00045765
- (void)followersForUserID:(id)arg1 cursor:(id)arg2;	// IMP=0x00045867
- (void)userWithID:(id)arg1;	// IMP=0x00045969
- (void)userWithUsername:(id)arg1;	// IMP=0x00045a28
- (void)searchUsers:(id)arg1 count:(id)arg2 page:(id)arg3;	// IMP=0x00045ae7
- (void)recommendationsForUsername:(id)arg1 limit:(id)arg2;	// IMP=0x00045feb
- (void)recommendationsForUserID:(id)arg1 limit:(id)arg2;	// IMP=0x000460f8
- (void)userRecommendationsResponse:(id)arg1 info:(id)arg2;	// IMP=0x00045bf0
- (void)suggestionCategoriesForLanguage:(id)arg1 country:(id)arg2;	// IMP=0x00046205
- (void)suggestionCategoriesResponse:(id)arg1 info:(id)arg2;	// IMP=0x00045c80
- (void)suggestedUsersForCategory:(id)arg1;	// IMP=0x00046312
- (void)suggestedUsersForCategoryResponse:(id)arg1 info:(id)arg2;	// IMP=0x0004637f
- (void)usersWithEmails:(id)arg1 phones:(id)arg2;	// IMP=0x0004644c
- (void)usersLookupResponse:(id)arg1 info:(id)arg2;	// IMP=0x000464c0
- (void)parseUsersLookupJSON:(id)arg1 info:(id)arg2;	// IMP=0x00045d10
- (void)parseSULUsersJSON:(id)arg1 info:(id)arg2;	// IMP=0x00045dbb
@end

@interface TwitterSearchAPI (Additions)
@end

@interface TwitterAPI (Additions)
@end

@interface TwitterAccount (Block)
- (void)blockUserID:(id)arg1;	// IMP=0x00048428
- (void)blockUsername:(id)arg1;	// IMP=0x00048497
- (void)block:(id)arg1;	// IMP=0x000484d7
- (void)unblockUserID:(id)arg1;	// IMP=0x0004855e
- (void)unblockUsername:(id)arg1;	// IMP=0x000485cd
- (void)unblock:(id)arg1;	// IMP=0x0004860d
- (void)userID:(id)arg1 isBlocked:(id)arg2;	// IMP=0x000486f9
- (void)user:(id)arg1 isBlocked:(id)arg2;	// IMP=0x00048694
- (void)isBlockedResponse:(id)arg1 info:(id)arg2;	// IMP=0x000486d3
- (void)blockUserAndRemoveAssociatedStatuses:(id)arg1;	// IMP=0x00048764
@end

@interface TwitterAccount (Follow)
- (void)checkIfUser:(id)arg1 follows:(id)arg2 callback:(id)arg3;	// IMP=0x00048af3
- (void)followingStatus:(id)arg1 info:(id)arg2;	// IMP=0x00048903
- (void)user:(id)arg1 follows:(id)arg2 callback:(id)arg3;	// IMP=0x00048b8b
- (void)userFollowsResponse:(id)arg1 info:(id)arg2;	// IMP=0x00048929
- (void)followUserID:(id)arg1 callback:(id)arg2;	// IMP=0x0004894f
- (void)unfollowUserID:(id)arg1 callback:(id)arg2;	// IMP=0x000489ab
- (void)follow:(id)arg1 callback:(id)arg2;	// IMP=0x00048a07
- (void)stopFollowing:(id)arg1 callback:(id)arg2;	// IMP=0x00048a7d
@end

@interface TwitterAccount (Lists)
- (void)updateLists;	// IMP=0x000494c5
- (BOOL)isLoadingLists;	// IMP=0x00048c23
- (id)_listMatchingList:(id)arg1;	// IMP=0x0004982f
- (id)definitiveLists:(id)arg1;	// IMP=0x00049956
- (void)listsResponse:(id)arg1 replaceList:(id *)arg2;	// IMP=0x00049a66
- (void)listsResponse:(id)arg1 info:(id)arg2;	// IMP=0x00048c7f
- (void)listSubscriptionsResponse:(id)arg1 info:(id)arg2;	// IMP=0x00048cb5
- (id)followingLists;	// IMP=0x00048ced
- (id)subscribedLists;	// IMP=0x00048c43
- (id)lists;	// IMP=0x00048c4e
- (BOOL)_listSet:(id)arg1 containsList:(id)arg2;	// IMP=0x00048dca
- (BOOL)ownsList:(id)arg1;	// IMP=0x00048e24
- (BOOL)followsList:(id)arg1;	// IMP=0x00048e74
- (void)createList:(id)arg1 description:(id)arg2 mode:(id)arg3 callback:(id)arg4;	// IMP=0x000495ac
- (void)didCreateList:(id)arg1 info:(id)arg2;	// IMP=0x00048eb5
- (void)updateList:(id)arg1 name:(id)arg2 description:(id)arg3 mode:(id)arg4 callback:(id)arg5;	// IMP=0x00049625
- (void)didUpdateList:(id)arg1 info:(id)arg2;	// IMP=0x00048f37
- (void)deleteList:(id)arg1;	// IMP=0x00048fd3
- (void)listNamed:(id)arg1 callback:(id)arg2;	// IMP=0x00049060
- (void)listWithUsername:(id)arg1 slug:(id)arg2 callback:(id)arg3;	// IMP=0x000496f6
- (void)listResponse:(id)arg1 info:(id)arg2;	// IMP=0x00049197
- (void)followList:(id)arg1;	// IMP=0x000491ef
- (void)unfollowList:(id)arg1;	// IMP=0x000492a7
- (void)list:(id)arg1 doesFollow:(id)arg2 callback:(id)arg3;	// IMP=0x00049768
- (void)listDoesFollowUser:(id)arg1 info:(id)arg2;	// IMP=0x0004935f
- (void)list:(id)arg1 follow:(id)arg2;	// IMP=0x00049385
- (void)list:(id)arg1 unfollow:(id)arg2;	// IMP=0x00049425
@end

@interface TwitterAccount (Profile)
- (void)updateProfileImage:(id)arg1 callback:(id)arg2;	// IMP=0x00049c64
- (void)didUpdateProfileImage:(id)arg1 info:(id)arg2;	// IMP=0x00049bfb
- (void)updateProfileName:(id)arg1 email:(id)arg2 url:(id)arg3 location:(id)arg4 description:(id)arg5 callback:(id)arg6;	// IMP=0x00049ccf
- (void)didUpdateProfile:(id)arg1 info:(id)arg2;	// IMP=0x00049d56
@end

@interface TwitterAccount (Push)
- (void)registerForPushWithDeviceToken:(id)arg1;	// IMP=0x00049e1b
- (void)unregisterForPush;	// IMP=0x00049de2
- (void)didRegisterForPush:(id)arg1 info:(id)arg2;	// IMP=0x00049ddd
@end

@interface TwitterAccount (SavedSearches)
- (BOOL)isLoadingSavedSearches;	// IMP=0x00049ef4
- (void)updateSavedSearches;	// IMP=0x0004a031
- (void)savedSearchesResponse:(id)arg1 info:(id)arg2;	// IMP=0x00049f13
- (id)savedSearches;	// IMP=0x00049fd0
- (BOOL)containsSavedSearch:(id)arg1;	// IMP=0x0004a004
- (void)addSavedSearch:(id)arg1;	// IMP=0x0004a0ab
- (void)addSavedSearchResponse:(id)arg1 info:(id)arg2;	// IMP=0x0004a207
- (void)removeSavedSearch:(id)arg1;	// IMP=0x0004a2a4
- (void)removeSavedSearchResponse:(id)arg1 info:(id)arg2;	// IMP=0x0004a3fa
@end

@interface TwitterAccount (Spam)
- (void)reportSpam:(id)arg1;	// IMP=0x0004a41f
@end

@interface TwitterAccount (TopTweets)
- (id)topTweetsUsername;	// IMP=0x0004a474
- (void)updateTopTweets;	// IMP=0x0004a656
- (id)topTweets;	// IMP=0x0004a56a
- (void)topTweetsResponse:(id)arg1 info:(id)arg2;	// IMP=0x0004a59b
@end

@interface TwitterAccount (Trends)
- (BOOL)_ignoreLocalTrends;	// IMP=0x0004a6ef
- (void)updateTrends;	// IMP=0x0004a6f9
- (void)_endTrendLocationGPSUpdates;	// IMP=0x0004a754
- (void)_updateTrends;	// IMP=0x0004a7ff
- (void)_findTrendLocationsFrom:(id)arg1;	// IMP=0x0004a99d
- (void)detectTrendLocation;	// IMP=0x0004a916
- (void)currentLocationResponse:(id)arg1;	// IMP=0x0004ac79
- (void)trendLocationsResponse:(id)arg1 info:(id)arg2;	// IMP=0x0004aa23
- (id)trends;	// IMP=0x0004a7a3
- (BOOL)trendsNeedRefresh;	// IMP=0x0004adf2
- (void)trendsResponse:(id)arg1 info:(id)arg2;	// IMP=0x0004aaeb
- (void)updateSULCategories;	// IMP=0x0004ae40
- (id)sulCategories;	// IMP=0x0004a7ce
- (void)sulCategoriesResponse:(id)arg1 info:(id)arg2;	// IMP=0x0004abd4
@end

@interface TwitterAccount (xAuth)
- (void)migrateToXAuthIfNeeded;	// IMP=0x0004af92
- (void)migrateToXAuthResponse:(id)arg1 info:(id)arg2;	// IMP=0x0004aed3
@end

@interface NSString (TwitterAdditions)
- (id)canonicalTwitterUserID;	// IMP=0x0005015c
- (id)canonicalTwitterUsername;	// IMP=0x00050174
- (id)canonicalTwitterStatusID;	// IMP=0x00050164
- (id)canonicalTwitterDirectMessageID;	// IMP=0x0005016c
@end

@interface TwitterStatus (StreamAdditions)
- (BOOL)_shouldFilterOutOfStream;	// IMP=0x00052b96
@end

@interface TwitterDirectMessage (XML)
+ (void)parseMessagesXML:(id)arg1 info:(id)arg2;	// IMP=0x00055534
- (void)parseMessageXML:(id)arg1 info:(id)arg2;	// IMP=0x00055260
@end

@interface TwitterStatus (EntityAdditions)
- (id)expandedURLString:(id)arg1;	// IMP=0x0005a32c
- (id)entityForURL:(id)arg1;	// IMP=0x0005a4c4
@end

@interface TwitterList (XML)
+ (void)parseListsXML:(id)arg1 info:(id)arg2;	// IMP=0x0005bc57
- (void)parseListXML:(id)arg1 info:(id)arg2;	// IMP=0x0005b8c1
@end

@interface TwitterPlace (Search)
- (id)searchWithAccount:(id)arg1;	// IMP=0x00060d2a
@end

@interface GeoRSSPoint (Search)
- (id)searchWithAccount:(id)arg1;	// IMP=0x00060cfc
- (id)searchWithAccount:(id)arg1 radius:(id)arg2;	// IMP=0x00061887
@end

@interface TwitterStatus (JSON)
+ (void)parseStatusesJSON:(id)arg1 info:(id)arg2;	// IMP=0x000630f0
+ (void)parsePromotedStatusJSON:(id)arg1 info:(id)arg2;	// IMP=0x000631a8
+ (void)parseStatusJSON:(id)arg1 info:(id)arg2;	// IMP=0x00063221
+ (void)parseSearchJSON:(id)arg1 info:(id)arg2;	// IMP=0x00063281
+ (void)parseSearchStatusesJSON:(id)arg1 info:(id)arg2;	// IMP=0x00063334
- (void)parseStatusJSON:(id)arg1 info:(id)arg2;	// IMP=0x00062adf
- (id)_partialFromUser;	// IMP=0x00062935
- (void)parseStatusSearchJSON:(id)arg1 info:(id)arg2;	// IMP=0x00063405
- (void)parseMetadataJSON:(id)arg1 info:(id)arg2;	// IMP=0x000629d7
@end

@interface TwitterStatus (NSCoding) <NSCoding>
- (id)initWithCoder:(id)arg1;	// IMP=0x0006398e
- (void)encodeWithCoder:(id)arg1;	// IMP=0x00063cd7
@end

@interface TwitterStatus (XML)
+ (void)parseStatusesXML:(id)arg1 info:(id)arg2;	// IMP=0x000645cd
- (void)parseStatusXML:(id)arg1 info:(id)arg2;	// IMP=0x00063f03
@end

@interface TwitterUser (Avatar)
- (void)_requestProfileImage;	// IMP=0x00068db3
- (id)profileImage_ui;	// IMP=0x00068681
- (id)sidebarProfileImage;	// IMP=0x000686d0
- (id)alertProfileImage;	// IMP=0x000686f4
- (id)profileImage;	// IMP=0x00068ec2
- (void)purgeCachedAvatar;	// IMP=0x00068785
- (id)plainProfileImage;	// IMP=0x000687b5
- (void)profileImageResponsePostNotification;	// IMP=0x00068816
- (void)profileImageResponse:(id)arg1 info:(id)arg2;	// IMP=0x00068f31
- (void)profileImage73Request:(id)arg1;	// IMP=0x00068e13
- (void)profileImage73Response:(id)arg1 info:(id)arg2;	// IMP=0x000696a9
@end

@interface TwitterUser (JSON)
+ (void)parseUsersJSON:(id)arg1 info:(id)arg2;	// IMP=0x00069c73
- (void)parseUserJSON:(id)arg1 info:(id)arg2;	// IMP=0x00069733
@end

@interface TwitterUser (NSCoding) <NSCoding>
- (id)initWithCoder:(id)arg1;	// IMP=0x00069d2b
- (void)encodeWithCoder:(id)arg1;	// IMP=0x0006a07f
@end

@interface TwitterUser (Streams)
@end

@interface TwitterUser (XML)
+ (void)parseUsersXML:(id)arg1 info:(id)arg2;	// IMP=0x0006ab82
- (void)parseUserXML:(id)arg1 info:(id)arg2;	// IMP=0x0006a2d6
@end

@interface TwitterDummyErrorStatus (StatusListAdditions)
- (float)heightInTableView:(id)arg1;	// IMP=0x0006e21a
@end

@interface TwitterDummyEndOfStreamStatus (StatusListAdditions)
- (float)heightInTableView:(id)arg1;	// IMP=0x0006e20f
@end

@interface TwitterDummyLoadingStatus (StatusListAdditions)
- (float)heightInTableView:(id)arg1;	// IMP=0x0006e204
@end

@interface TwitterDummyStatus (StatusListAdditions)
- (float)heightInTableView:(id)arg1;	// IMP=0x0006e1fd
@end

@interface TwitterStatus (StatusListAdditions)
- (float)heightInTableView:(id)arg1;	// IMP=0x0007136c
@end

@interface TwitterStatus (StatusCellAdditions)
- (id)attributedDate;	// IMP=0x00078494
- (id)metaAttributedText;	// IMP=0x0007b46b
- (id)sizedAttributedText;	// IMP=0x0007b731
- (id)attributedTextWithSelectedRange:(id)arg1;	// IMP=0x0007e38d
- (id)attributedTextInBackground;	// IMP=0x0007e3de
@end

@interface ABUIViewController (TMColumnViewControllerAdditions)
- (id)columnViewController;	// IMP=0x0008085e
- (id)immediateChildOfColumnViewController;	// IMP=0x000808be
- (void)pushColumn:(id)arg1 animated:(BOOL)arg2;	// IMP=0x00080931
- (BOOL)isEqualToViewController:(id)arg1;	// IMP=0x0007eac7
- (void)viewWillBeUnobscured:(BOOL)arg1;	// IMP=0x0007eace
- (void)viewWillBeObscured:(BOOL)arg1;	// IMP=0x0007ead3
- (BOOL)willPopViewController;	// IMP=0x0007ead8
- (id)viewForRootBounce;	// IMP=0x00080a48
@end

@interface ABUIViewController (SheetPosition)
- (struct CGRect)window:(id)arg1 willPositionSheet:(id)arg2 usingRect:(struct CGRect)arg3;	// IMP=0x000869c0
@end

@interface NSWindow (WindowSucking)
- (void)suckFromPoint:(struct CGPoint)arg1 fromAlpha:(float)arg2 toAlpha:(float)arg3 steps:(int)arg4 reverse:(BOOL)arg5;	// IMP=0x0008ffa2
@end

@interface TwitterComposition (DocumentAdditions)
- (id)initWithType:(id)arg1 error:(id *)arg2;	// IMP=0x0008ffa7
- (id)controller;	// IMP=0x0008ffc6
- (void)makeWindowControllers;	// IMP=0x0008ffff
- (id)dataOfType:(id)arg1 error:(id *)arg2;	// IMP=0x00090060
- (BOOL)readFromData:(id)arg1 ofType:(id)arg2 error:(id *)arg3;	// IMP=0x000900ab
- (void)canCloseDocumentWithDelegate:(id)arg1 shouldCloseSelector:(SEL)arg2 contextInfo:(void *)arg3;	// IMP=0x00090139
- (void)dismissSheetDidEnd:(id)arg1 returnCode:(long)arg2 contextInfo:(id)arg3;	// IMP=0x000900f9
@end

@interface NSObject (TMGo)
- (void)goFromAccount:(id)arg1 controller:(id)arg2 animated:(BOOL)arg3;	// IMP=0x00090432
- (void)go:(int)arg1 account:(id)arg2 controller:(id)arg3 animated:(BOOL)arg4;	// IMP=0x000906fd
@end

@interface TwitterUser (TMGo)
- (int)_twitterGoType;	// IMP=0x00090428
@end

@interface ABUIView (NSTextInputClient)
@end

@interface TwitterComposition (Additions)
+ (id)replyAllTextForStatus:(id)arg1 fromAccount:(id)arg2;	// IMP=0x0009cf18
+ (id)quoteTweetTextForStatus:(id)arg1 fromAccount:(id)arg2;	// IMP=0x0009cc25
+ (struct _NSRange)initialSelectedRangeForComposeText:(id)arg1;	// IMP=0x0009cd62
@end

@interface TwitterCompositionAttachment (NSAdditions)
- (id)thumbnailImage;	// IMP=0x0009fb78
@end

@interface SRSharedImageProvider (Private)
+ (id)_sizeSRSnapback;	// IMP=0x0009fff8
+ (void)_drawSRSnapback:(id)arg1;	// IMP=0x000a002a
+ (id)_sizeSRRemoveShortcut;	// IMP=0x000a04df
+ (id)_sizeSRRemoveShortcutRollover;	// IMP=0x000a0511
+ (id)_sizeSRRemoveShortcutPressed;	// IMP=0x000a0530
+ (void)_drawARemoveShortcutBoxUsingRep:(id)arg1 opacity:(float)arg2;	// IMP=0x000a054f
+ (void)_drawSRRemoveShortcut:(id)arg1;	// IMP=0x000a07aa
+ (void)_drawSRRemoveShortcutRollover:(id)arg1;	// IMP=0x000a07d8
+ (void)_drawSRRemoveShortcutPressed:(id)arg1;	// IMP=0x000a0806
@end

@interface NSAlert (SRAdditions)
+ (id)alertWithNonRecoverableError:(id)arg1;	// IMP=0x0009ff59
@end

@interface SRKeyCodeTransformer (Private)
+ (void)regenerateStringToKeyCodeMapping;	// IMP=0x000a24ab
@end

@interface SRRecorderCell (Private)
- (void)_privateInit;	// IMP=0x000a5ac9
- (void)_createGradient;	// IMP=0x000a5c56
- (void)_setJustChanged;	// IMP=0x000a2668
- (BOOL)_effectiveIsAnimating;	// IMP=0x000a5d36
- (BOOL)_supportsAnimation;	// IMP=0x000a5d68
- (void)_startRecordingTransition;	// IMP=0x000a5da5
- (void)_endRecordingTransition;	// IMP=0x000a5e53
- (void)_transitionTick;	// IMP=0x000a5f01
- (void)_startRecording;	// IMP=0x000a6346
- (void)_endRecording;	// IMP=0x000a640d
- (id)_defaultsKeyForAutosaveName:(id)arg1;	// IMP=0x000a5fec
- (void)_saveKeyCombo;	// IMP=0x000a64b8
- (void)_loadKeyCombo;	// IMP=0x000a669e
- (struct CGRect)_removeButtonRectForFrame:(struct CGRect)arg1;	// IMP=0x000a601d
- (struct CGRect)_snapbackRectForFrame:(struct CGRect)arg1;	// IMP=0x000a614c
- (unsigned long)_filteredCocoaFlags:(unsigned long)arg1;	// IMP=0x000a2674
- (BOOL)_validModifierFlags:(unsigned long)arg1;	// IMP=0x000a274a
- (unsigned long)_filteredCocoaToCarbonFlags:(unsigned long)arg1;	// IMP=0x000a6220
- (BOOL)_isEmpty;	// IMP=0x000a62ff
- (BOOL)shortcutValidator:(id)arg1 isKeyCode:(long)arg2 andFlagsTaken:(unsigned long)arg3 reason:(id *)arg4;	// IMP=0x000a6291
@end

@interface SRRecorderControl (Private)
- (void)resetTrackingRects;	// IMP=0x000a789a
@end

@interface NSObject (SRValidation)
- (BOOL)shortcutValidator:(id)arg1 isKeyCode:(long)arg2 andFlagsTaken:(unsigned long)arg3 reason:(id *)arg4;	// IMP=0x000a78e4
@end

@interface TwitterAccount (Uniquification)
- (id)cachedUserWithID:(id)arg1;	// IMP=0x000abf19
- (id)cachedUserWithUsername:(id)arg1;	// IMP=0x000abf56
- (id)cachedStatusWithID:(id)arg1;	// IMP=0x000abf93
- (id)cachedDirectMessageWithID:(id)arg1;	// IMP=0x000abfd0
- (id)definitiveUser:(id)arg1;	// IMP=0x000ac00d
- (id)definitiveStatus:(id)arg1;	// IMP=0x000ac150
- (id)definitiveMessage:(id)arg1;	// IMP=0x000ac546
- (id)definitiveUsers:(id)arg1;	// IMP=0x000ac356
- (id)definitiveStatuses:(id)arg1;	// IMP=0x000ac3aa
- (id)definitiveDirectMessages:(id)arg1;	// IMP=0x000ac3fe
- (id)cachedUsers;	// IMP=0x000ac452
- (id)usersStartingWith:(id)arg1;	// IMP=0x000ac674
- (id)cachedStatuses;	// IMP=0x000ac475
- (id)deepCachedRepliesToStatus:(id)arg1;	// IMP=0x000ac85c
- (id)cachedStatusAtBaseOfConversationChain:(id)arg1;	// IMP=0x000ac498
- (id)deepCachedStatusesInCommonConversationChainWithStatus:(id)arg1;	// IMP=0x000ac508
@end

@interface TwitterAPI (PlaceMethods)
- (void)geoSearch:(id)arg1;	// IMP=0x000ae619
- (void)reverseGeocode:(id)arg1;	// IMP=0x000ae7ee
- (void)topPlaces:(id)arg1;	// IMP=0x000ae9c3
- (void)similarPlaces:(id)arg1;	// IMP=0x000aea5a
- (void)gotPlaces:(id)arg1 info:(id)arg2;	// IMP=0x000ae418
- (void)createPlace:(id)arg1;	// IMP=0x000aec9c
- (void)findPlace:(id)arg1;	// IMP=0x000aec2f
- (void)gotPlace:(id)arg1 info:(id)arg2;	// IMP=0x000ae545
@end

@interface TwitterAPI (PromotedContent)
- (void)logPromotedTweet:(id)arg1 event:(int)arg2;	// IMP=0x000aeec3
- (void)didLogPromotedTweet:(id)arg1 info:(id)arg2;	// IMP=0x000af216
- (void)searchForPromotedTweets:(id)arg1;	// IMP=0x000af14f
- (void)didReceivePromotedTweets:(id)arg1 info:(id)arg2;	// IMP=0x000af288
- (void)logPromotedTrend:(id)arg1 event:(int)arg2;	// IMP=0x000aee8e
- (void)logPromotedTrend:(id)arg1 event:(int)arg2 extraParameters:(id)arg3;	// IMP=0x000af3ab
- (void)didLogPromotedTrend:(id)arg1 info:(id)arg2;	// IMP=0x000af339
@end

@interface TwitterAPI (t_co)
- (void)shortenURLString:(id)arg1;	// IMP=0x000af6a9
- (void)shortenResponse:(id)arg1 info:(id)arg2;	// IMP=0x000af770
- (void)parseTCOJson:(id)arg1 info:(id)arg2;	// IMP=0x000af63e
@end

@interface TwitterStatus (Pasteboard) <NSPasteboardWriting>
- (id)stringRepresentation;	// IMP=0x000af8b4
- (id)htmlRepresentation;	// IMP=0x000afe8a
- (id)PDFRepresentation;	// IMP=0x000b0176
- (id)PNGRepresentation;	// IMP=0x000b008c
- (id)_fancyAttributedString;	// IMP=0x000af9bb
- (void)_drawFancyStatusInContext:(struct CGContext *)arg1 size:(struct CGSize)arg2;	// IMP=0x000b0262
- (id)writableTypesForPasteboard:(id)arg1;	// IMP=0x000afd01
- (id)pasteboardPropertyListForType:(id)arg1;	// IMP=0x000afd67
@end

@interface TwitterDirectMessage (TMMessageCell)
- (id)attributedDate;	// IMP=0x000b0ada
- (id)sizedAttributedText;	// IMP=0x000b0411
- (id)attributedTextWithSelectedRange:(id)arg1;	// IMP=0x000b0b0d
@end

@interface TwitterDirectMessage (Pasteboard) <NSPasteboardWriting>
- (id)writableTypesForPasteboard:(id)arg1;	// IMP=0x000b7a10
- (id)pasteboardPropertyListForType:(id)arg1;	// IMP=0x000b7a46
@end

@interface ABUITableView (Derepeater)
- (BOOL)derepeaterEnabled;	// IMP=0x000b7ae0
- (void)setDerepeaterEnabled:(BOOL)arg1;	// IMP=0x000b7af4
- (void)_updateDerepeaterViews;	// IMP=0x000b7b1a
@end

@interface ABUIView (PasteboardDragging)
- (BOOL)pasteboardDraggingEnabled;	// IMP=0x000b94be
- (void)setPasteboardDraggingEnabled:(BOOL)arg1;	// IMP=0x000b94d0
- (void)startPasteboardDragging;	// IMP=0x000b94f1
- (void)endPasteboardDragging:(unsigned long)arg1;	// IMP=0x000b94f6
- (id)representedPasteboardObject;	// IMP=0x000b94fb
- (id)handleForPasteboardDragView;	// IMP=0x000b9502
- (void)pasteboardDragMouseDown:(id)arg1;	// IMP=0x000b950a
- (void)pasteboardDragMouseDragged:(id)arg1;	// IMP=0x000b95b1
- (void)draggedImage:(id)arg1 beganAt:(struct CGPoint)arg2;	// IMP=0x000b951b
- (void)draggedImage:(id)arg1 movedTo:(struct CGPoint)arg2;	// IMP=0x000b9516
- (void)draggedImage:(id)arg1 endedAt:(struct CGPoint)arg2 operation:(unsigned long)arg3;	// IMP=0x000b954c
@end

@interface ABUIImage (Drawing)
+ (id)imageWithSize:(struct CGSize)arg1 drawing:(id)arg2;	// IMP=0x000bbebc
- (id)scale:(struct CGSize)arg1;	// IMP=0x000bb0a2
- (id)crop:(struct CGRect)arg1;	// IMP=0x000bba2f
- (id)upsideDownCrop:(struct CGRect)arg1;	// IMP=0x000bb1d4
- (id)pad:(float)arg1;	// IMP=0x000bb233
- (id)roundImage:(float)arg1;	// IMP=0x000bb2c5
- (id)invertedMask;	// IMP=0x000bb461
- (id)innerShadowWithOffset:(struct CGSize)arg1 radius:(float)arg2 color:(id)arg3 backgroundColor:(id)arg4;	// IMP=0x000bbc13
- (id)embossMaskWithOffset:(struct CGSize)arg1;	// IMP=0x000bb606
@end

@interface TwitterAPI (UserStream)
- (id)openUserStream:(id)arg1 track:(id)arg2;	// IMP=0x000bc876
- (void)didReceiveUserStreamJSON:(id)arg1 info:(id)arg2;	// IMP=0x000bc9bc
- (void)handleUserStreamEvent:(id)arg1 callback:(id)arg2;	// IMP=0x000bc5a1
- (void)didCloseStream:(id)arg1 info:(id)arg2;	// IMP=0x000bc84c
@end

@interface ABHTTPRequest (Streams)
+ (id)keepAliveData;	// IMP=0x000bd74b
- (BOOL)startStreamChunk:(id)arg1;	// IMP=0x000bd793
- (void)processStreamChunk:(id)arg1;	// IMP=0x000bd467
- (void)didRecieveChunk:(id)arg1;	// IMP=0x000bd6a6
@end

@interface TwitterAPI (Trends)
- (void)trendLocationsAt:(id)arg1;	// IMP=0x000bdc16
- (void)trendsAtLocation:(id)arg1 excludingHashtags:(BOOL)arg2;	// IMP=0x000bddfc
- (void)trendLocationsResponse:(id)arg1 info:(id)arg2;	// IMP=0x000bd8f1
- (void)_trends:(id)arg1 excludeHashtags:(BOOL)arg2;	// IMP=0x000bdeed
- (void)trends;	// IMP=0x000bd984
- (void)currentTrendsExcludingHashtags:(BOOL)arg1;	// IMP=0x000bd9b3
- (void)dailyTrendsExcludingHashtags:(BOOL)arg1;	// IMP=0x000bd9e2
- (void)weeklyTrendsExcludingHashtags:(BOOL)arg1;	// IMP=0x000bda11
- (void)localTrendsResponse:(id)arg1 info:(id)arg2;	// IMP=0x000bda40
- (void)trendsResponse:(id)arg1 info:(id)arg2;	// IMP=0x000bdad9
- (void)parseTrendsJSON:(id)arg1 info:(id)arg2;	// IMP=0x000bdb72
@end

@interface TwitterAccount (UserStream)
- (void)_scheduleReconnectAfterDelay:(float)arg1;	// IMP=0x000bf12a
- (void)_cancelUserStreamReconnect;	// IMP=0x000bf166
- (BOOL)isConnectedToUserStream;	// IMP=0x000bf115
- (void)_reopenStream;	// IMP=0x000bf1a1
- (void)openUserStream;	// IMP=0x000bf786
- (void)closeUserStream;	// IMP=0x000bf1c0
- (void)successfullyConnected;	// IMP=0x000bf22d
- (void)_handleUserStreamStatus:(id)arg1;	// IMP=0x000bf277
- (void)didReceiveStreamObject:(id)arg1 info:(id)arg2;	// IMP=0x000bf499
- (void)didCheckReplyInUserStream:(id)arg1 info:(id)arg2;	// IMP=0x000bf700
- (void)didDropStream:(id)arg1 info:(id)arg2;	// IMP=0x000bf87b
- (void)_checkUserStreamHealth;	// IMP=0x000bfa30
@end

@interface ABUINSView (Hyperfocus)
- (void)endHyperFocus:(BOOL)arg1;	// IMP=0x000bfa97
- (void)hyperFocus:(id)arg1 completion:(id)arg2;	// IMP=0x000bfd19
@end

@interface Tweetie2AppDelegate (ProtocolHandler)
- (void)handleURL:(id)arg1;	// IMP=0x000c228c
- (void)handleURL:(id)arg1 withReplyEvent:(id)arg2;	// IMP=0x000c2306
@end

@interface TwitterAPI (SearchStream)
- (id)openSearchStreamQuery:(id)arg1 callback:(id)arg2;	// IMP=0x000c30d7
- (void)didReceiveSearchStreamJSON:(id)arg1 info:(id)arg2;	// IMP=0x000c321d
@end

@interface Tweetie2AppDelegate (MacHeist)
- (void)_showMacHeistSecretWindow;	// IMP=0x000c4a39
- (void)macheist:(id)arg1;	// IMP=0x000c4c22
- (void)macheistGo:(id)arg1;	// IMP=0x000c4c97
- (void)macheistCancel:(id)arg1;	// IMP=0x000c4abc
- (void)macheistWebDone:(id)arg1;	// IMP=0x000c4b05
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 request:(id)arg3 frame:(id)arg4 decisionListener:(id)arg5;	// IMP=0x000c4b6b
@end

@interface Tweetie2AppDelegate (Growl)
- (void)setupGrowl;	// IMP=0x000c5e8a
- (void)_growlNotificationWithObjects:(id)arg1 fromAccount:(id)arg2 notificationName:(id)arg3 priority:(int)arg4 title:(id)arg5 multiTitle:(id)arg6;	// IMP=0x000c6514
- (void)accountGrowlNotification:(id)arg1;	// IMP=0x000c5f02
- (id)registrationDictionaryForGrowl;	// IMP=0x000c61d2
- (id)applicationNameForGrowl;	// IMP=0x000c6289
- (void)growlNotificationWasClicked:(id)arg1;	// IMP=0x000c62d5
@end

@interface TwitterDirectMessage (GrowlCompatible)
- (id)growlTitle;	// IMP=0x000c5d54
- (id)growlDescription;	// IMP=0x000c5d85
- (BOOL)growlPrimeIconData;	// IMP=0x000c5da4
- (id)growlIconData;	// IMP=0x000c5ddd
- (id)growlContextWithAccount:(id)arg1 notificationName:(id)arg2;	// IMP=0x000c5e26
- (id)growlIdentifier;	// IMP=0x000c5e6b
@end

@interface TwitterStatus (GrowlCompatible)
- (id)growlTitle;	// IMP=0x000c5ac6
- (id)growlDescription;	// IMP=0x000c5b09
- (BOOL)growlPrimeIconData;	// IMP=0x000c5b3a
- (id)growlIconData;	// IMP=0x000c5bed
- (id)growlContextWithAccount:(id)arg1 notificationName:(id)arg2;	// IMP=0x000c5c48
- (id)growlIdentifier;	// IMP=0x000c5d35
@end

@interface ABUITextRenderer (KeyBindings)
- (id)_textEditor;	// IMP=0x000c68ab
- (void)moveRight:(id)arg1;	// IMP=0x000c68f2
- (void)moveLeft:(id)arg1;	// IMP=0x000c697b
- (void)moveRightAndModifySelection:(id)arg1;	// IMP=0x000c69da
- (void)moveLeftAndModifySelection:(id)arg1;	// IMP=0x000c6a40
- (void)moveWordRight:(id)arg1;	// IMP=0x000c6a83
- (void)moveWordLeft:(id)arg1;	// IMP=0x000c6af2
- (void)moveWordRightAndModifySelection:(id)arg1;	// IMP=0x000c6b61
- (void)moveWordLeftAndModifySelection:(id)arg1;	// IMP=0x000c6bc5
- (void)moveToBeginningOfLineAndModifySelection:(id)arg1;	// IMP=0x000c6c29
- (void)moveToEndOfLineAndModifySelection:(id)arg1;	// IMP=0x000c6c62
- (void)moveToBeginningOfLine:(id)arg1;	// IMP=0x000c6cbf
- (void)moveToEndOfLine:(id)arg1;	// IMP=0x000c6cff
- (void)insertNewline:(id)arg1;	// IMP=0x000c6d5f
- (void)deleteBackward:(id)arg1;	// IMP=0x000c6d98
- (void)deleteForward:(id)arg1;	// IMP=0x000c6dfa
- (void)deleteToBeginningOfLine:(id)arg1;	// IMP=0x000c6e82
- (void)deleteWordBackward:(id)arg1;	// IMP=0x000c6ee3
@end

@interface NSString (ABTokenizerAdditions)
- (long)ab_endOfWordGivenCursor:(long)arg1;	// IMP=0x000c6f4e
- (long)ab_beginningOfWordGivenCursor:(long)arg1;	// IMP=0x000c7074
@end

@interface ABUIView (ABUIAccessibility)
- (BOOL)accessibilityIsIgnored;	// IMP=0x000c7ebd
- (id)accessibilityHitTest:(struct CGPoint)arg1;	// IMP=0x000c7ec4
@end

@interface ABUIButton (Content)
- (id)_contentForState:(unsigned long)arg1;	// IMP=0x000c91c8
- (void)setTitle:(id)arg1 forState:(unsigned long)arg2;	// IMP=0x000c9274
- (void)setTitleColor:(id)arg1 forState:(unsigned long)arg2;	// IMP=0x000c92c6
- (void)setTitleShadowColor:(id)arg1 forState:(unsigned long)arg2;	// IMP=0x000c9318
- (void)setImage:(id)arg1 forState:(unsigned long)arg2;	// IMP=0x000c936a
- (void)setBackgroundImage:(id)arg1 forState:(unsigned long)arg2;	// IMP=0x000c93bc
- (id)titleForState:(unsigned long)arg1;	// IMP=0x000c940e
- (id)titleColorForState:(unsigned long)arg1;	// IMP=0x000c9446
- (id)titleShadowColorForState:(unsigned long)arg1;	// IMP=0x000c947e
- (id)imageForState:(unsigned long)arg1;	// IMP=0x000c94b6
- (id)backgroundImageForState:(unsigned long)arg1;	// IMP=0x000c94ee
- (id)currentTitle;	// IMP=0x000c9526
- (id)currentTitleColor;	// IMP=0x000c955d
- (id)currentTitleShadowColor;	// IMP=0x000c9594
- (id)currentImage;	// IMP=0x000c95cb
- (id)currentBackgroundImage;	// IMP=0x000c9602
@end

@interface TwitterAccount (UserDetailsStreams)
- (id)_userDetailsStreamCache;	// IMP=0x000ca0e6
- (id)_cachedStream:(id)arg1;	// IMP=0x000ca14f
- (id)timelineStreamForUser:(id)arg1;	// IMP=0x000ca1ab
- (id)mentionsStreamForUser:(id)arg1;	// IMP=0x000ca355
- (id)favoritesStreamForUser:(id)arg1;	// IMP=0x000ca53e
@end

@interface TwitterStatus (AppleScript)
- (id)scriptingObject;	// IMP=0x000cb456
@end

@interface NSApplication (AppleScript)
- (id)as_twitterCurrentAccount;	// IMP=0x000cb537
- (id)as_twitterAutocompleteUsernames;	// IMP=0x000cb58f
- (id)as_twitterAccounts;	// IMP=0x000cb5e7
@end

@interface TwitterUser (AppleScript)
- (id)scriptingObject;	// IMP=0x000cb8f2
@end

@interface TwitterAccount (AppleScript)
- (id)scriptingObject;	// IMP=0x000cbb65
@end

@interface TwitterStream (AppleScript)
- (id)scriptingObject;	// IMP=0x000cbe44
@end

@interface NSClipView (TopAnchorAdditions)
- (BOOL)isFlipped;	// IMP=0x000cce3e
@end

@interface TwitterAPI (Configuration)
- (void)refreshConfiguration:(id)arg1;	// IMP=0x000cf158
- (void)didReceiveNewDeciderSettings:(id)arg1 info:(id)arg2;	// IMP=0x000cf1c3
- (void)didReceiveNewConfigurationSettings:(id)arg1 info:(id)arg2;	// IMP=0x000cf24a
@end

@interface FMDatabase (ABAdditions)
- (struct sqlite3 *)dbHandle;	// IMP=0x000cf2c4
@end

@interface TwitterAPI (Scribe)
- (void)scribe:(id)arg1;	// IMP=0x000d52b8
@end

@interface NSObject (YAJL)
- (id)ab_JSONString;	// IMP=0x000d53d8
- (id)ab_JSONStringWithOptions:(unsigned long)arg1 indentString:(id)arg2;	// IMP=0x000d5407
@end

@interface TwitterSearchStream (TMTitle)
- (id)mac_displayTitle;	// IMP=0x000d99ac
@end

@interface TwitterListStream (TMTitle)
- (id)mac_displayTitle;	// IMP=0x000d997b
@end

@interface TwitterRepliesStream (TMTitle)
- (id)mac_displayTitle;	// IMP=0x000d992f
@end

@interface TwitterTimelineStream (TMTitle)
- (id)mac_displayTitle;	// IMP=0x000d98e3
@end

@interface TwitterStream (TMTitles)
- (id)mac_displayTitle;	// IMP=0x000d9897
@end

@interface NSWindow (TMAdditions)
- (BOOL)ab_isOnLeftSideOfScreen;	// IMP=0x000d99cb
@end

@interface TwitterAutocompleteResultItem (ScriptingAdditions)
- (id)scriptingObject;	// IMP=0x000db9f4
@end

@interface TwitterEntityURL (AppleScript)
- (id)scriptingObject;	// IMP=0x000dbd31
@end

@interface TwitterPlace (AppleScript)
- (id)scriptingObject;	// IMP=0x000dbf84
@end

@interface GeoRSSPoint (AppleScript)
- (id)scriptingObject;	// IMP=0x000dc189
@end

@interface CLLocationManager (MacAdditions)
+ (BOOL)significantLocationChangeMonitoringAvailable;	// IMP=0x000dcce5
- (void)startMonitoringSignificantLocationChanges;	// IMP=0x000dccec
- (void)stopMonitoringSignificantLocationChanges;	// IMP=0x000dccf1
@end

@interface NSCoder (Additions)
- (struct CGSize)ab_decodeSizeForKey:(id)arg1;	// IMP=0x000de960
- (void)ab_encodeSize:(struct CGSize)arg1 forKey:(id)arg2;	// IMP=0x000de986
@end

